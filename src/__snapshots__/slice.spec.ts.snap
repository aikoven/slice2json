// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Built-in slices Glacier2/Metrics.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "cpp:include:Glacier2/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Metrics",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of client requests forwared.",
              "location": Object {
                "end": 678,
                "start": 654,
              },
              "metadata": undefined,
              "name": "forwardedClient",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of server requests forwared.",
              "location": Object {
                "end": 782,
                "start": 758,
              },
              "metadata": undefined,
              "name": "forwardedServer",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The size of the routing table.",
              "location": Object {
                "end": 882,
                "start": 857,
              },
              "metadata": undefined,
              "name": "routingTableSize",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of client requests queued.",
              "location": Object {
                "end": 981,
                "start": 960,
              },
              "metadata": undefined,
              "name": "queuedClient",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of server requests queued.",
              "location": Object {
                "end": 1080,
                "start": 1059,
              },
              "metadata": undefined,
              "name": "queuedServer",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of client requests overridden.",
              "location": Object {
                "end": 1187,
                "start": 1162,
              },
              "metadata": undefined,
              "name": "overriddenClient",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of server requests overridden.",
              "location": Object {
                "end": 1294,
                "start": 1269,
              },
              "metadata": undefined,
              "name": "overriddenServer",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on Glacier2 sessions.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 1296,
            "start": 537,
          },
          "metadata": undefined,
          "name": "SessionMetrics",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1299,
        "start": 438,
      },
      "metadata": Array [
        "objc:prefix:ICEMX",
      ],
      "name": "IceMX",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Glacier2/PermissionsVerifier.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "cpp:include:Glacier2/Config.h",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Glacier2/SSLInfo",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why permission was denied.",
              "location": Object {
                "end": 737,
                "start": 723,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a client is denied the ability to create
a session with the router.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 739,
            "start": 586,
          },
          "metadata": Array [
            "preserve-slice",
          ],
          "name": "PermissionDeniedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Check whether a user has permission to access the router.

@param userId The user id for which to check permission.

@param password The user's password.

@param reason The reason why access was denied.

@return True if access is granted, or false otherwise.

@throws PermissionDeniedException Raised if the user access is
denied. This can be raised in place of returning false with a
reason set in the reason out parameter.",
              "idempotent": true,
              "location": Object {
                "end": 1630,
                "start": 1455,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
                "format:sliced",
              ],
              "name": "checkPermissions",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1551,
                    "start": 1538,
                  },
                  "metadata": undefined,
                  "name": "userId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1568,
                    "start": 1553,
                  },
                  "metadata": undefined,
                  "name": "password",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1587,
                    "start": 1570,
                  },
                  "metadata": undefined,
                  "name": "reason",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": Array [
                "PermissionDeniedException",
              ],
              "type": "operation",
            },
          ],
          "doc": "The Glacier2 permissions verifier. This is called through the
process of establishing a session.

@see Router",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1632,
            "start": 877,
          },
          "metadata": undefined,
          "name": "PermissionsVerifier",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Check whether a user has permission to access the router.

@param info The SSL information.

@param reason The reason why access was denied.

@return True if access is granted, or false otherwise.

@throws PermissionDeniedException Raised if the user access is
denied. This can be raised in place of returning false with a
reason set in the reason out parameter.

@see SSLInfo",
              "idempotent": true,
              "location": Object {
                "end": 2457,
                "start": 2307,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
                "format:sliced",
              ],
              "name": "authorize",
              "parameters": Array [
                Object {
                  "dataType": "SSLInfo",
                  "location": Object {
                    "end": 2395,
                    "start": 2383,
                  },
                  "metadata": undefined,
                  "name": "info",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2414,
                    "start": 2397,
                  },
                  "metadata": undefined,
                  "name": "reason",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": Array [
                "PermissionDeniedException",
              ],
              "type": "operation",
            },
          ],
          "doc": "The SSL Glacier2 permissions verifier. This is called through the
process of establishing a session.

@see Router",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2459,
            "start": 1774,
          },
          "metadata": undefined,
          "name": "SSLPermissionsVerifier",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 2462,
        "start": 425,
      },
      "metadata": Array [
        "objc:prefix:GLACIER2",
      ],
      "name": "Glacier2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Glacier2/PermissionsVerifierF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 430,
            "start": 400,
          },
          "name": "PermissionsVerifier",
          "type": "interfaceForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 464,
            "start": 431,
          },
          "name": "SSLPermissionsVerifier",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 467,
        "start": 356,
      },
      "metadata": Array [
        "objc:prefix:GLACIER2",
      ],
      "name": "Glacier2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Glacier2/Router.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "cpp:include:Glacier2/Config.h",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Router",
    "Glacier2/Session",
    "Glacier2/PermissionsVerifier",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [],
          "doc": "This exception is raised if a client tries to destroy a session
with a router, but no session exists for the client.

@see Router#destroySession",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1039,
            "start": 1001,
          },
          "metadata": undefined,
          "name": "SessionNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "This category must be used in the identities of all of the client's
callback objects. This is necessary in order for the router to
forward callback requests to the intended client. If the Glacier2
server endpoints are not set, the returned category is an empty
string.

@return The category.",
              "idempotent": true,
              "location": Object {
                "end": 1614,
                "start": 1544,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getCategoryForClient",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a per-client session with the router. If a
{@link SessionManager} has been installed, a proxy to a {@link Session}
object is returned to the client. Otherwise, null is returned
and only an internal session (i.e., not visible to the client)
is created.

If a session proxy is returned, it must be configured to route
through the router that created it. This will happen automatically
if the router is configured as the client's default router at the
time the session proxy is created in the client process, otherwise
the client must configure the session proxy explicitly.

@see Session
@see SessionManager
@see PermissionsVerifier

@return A proxy for the newly created session, or null if no
{@link SessionManager} has been installed.

@param userId The user id for which to check the password.

@param password The password for the given user id.

@throws PermissionDeniedException Raised if the password for
the given user id is not correct, or if the user is not allowed
access.

@throws CannotCreateSessionException Raised if the session
cannot be created.",
              "idempotent": undefined,
              "location": Object {
                "end": 3067,
                "start": 2916,
              },
              "metadata": Array [
                "amd",
                "format:sliced",
              ],
              "name": "createSession",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2977,
                    "start": 2964,
                  },
                  "metadata": undefined,
                  "name": "userId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2994,
                    "start": 2979,
                  },
                  "metadata": undefined,
                  "name": "password",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Session*",
              "throws": Array [
                "PermissionDeniedException",
                "CannotCreateSessionException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Create a per-client session with the router. The user is
authenticated through the SSL certificates that have been
associated with the connection. If a {@link SessionManager} has been
installed, a proxy to a {@link Session} object is returned to the
client. Otherwise, null is returned and only an internal
session (i.e., not visible to the client) is created.

If a session proxy is returned, it must be configured to route
through the router that created it. This will happen automatically
if the router is configured as the client's default router at the
time the session proxy is created in the client process, otherwise
the client must configure the session proxy explicitly.

@see Session
@see SessionManager
@see PermissionsVerifier

@return A proxy for the newly created session, or null if no
{@link SessionManager} has been installed.

@throws PermissionDeniedException Raised if the user cannot be
authenticated or if the user is not allowed access.

@throws CannotCreateSessionException Raised if the session
cannot be created.",
              "idempotent": undefined,
              "location": Object {
                "end": 4455,
                "start": 4314,
              },
              "metadata": Array [
                "amd",
                "format:sliced",
              ],
              "name": "createSessionFromSecureConnection",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Session*",
              "throws": Array [
                "PermissionDeniedException",
                "CannotCreateSessionException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Keep the calling client's session with this router alive.

@throws SessionNotExistException Raised if no session exists
for the calling client.",
              "idempotent": undefined,
              "location": Object {
                "end": 4733,
                "start": 4663,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "refreshSession",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "SessionNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Destroy the calling client's session with this router.

@throws SessionNotExistException Raised if no session exists
for the calling client.",
              "idempotent": undefined,
              "location": Object {
                "end": 5000,
                "start": 4938,
              },
              "metadata": undefined,
              "name": "destroySession",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "SessionNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the value of the session timeout. Sessions are destroyed
if they see no activity for this period of time.

@return The timeout (in seconds).",
              "idempotent": true,
              "location": Object {
                "end": 5274,
                "start": 5209,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getSessionTimeout",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "long",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the value of the ACM timeout. Clients supporting connection
heartbeats can enable them instead of explicitly sending keep
alives requests.

NOTE: This method is only available since Ice 3.6.

@return The timeout (in seconds).",
              "idempotent": true,
              "location": Object {
                "end": 5648,
                "start": 5588,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getACMTimeout",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Glacier2 specialization of the <code>Ice::Router</code> interface.",
          "extends": Array [
            "Ice::Router",
          ],
          "local": undefined,
          "location": Object {
            "end": 5650,
            "start": 1130,
          },
          "metadata": undefined,
          "name": "Router",
          "type": "interface",
        },
      ],
      "doc": "Glacier2 is a firewall solution for Ice. Glacier2 authenticates
and filters client requests and allows callbacks to the client in a
secure fashion. In combination with IceSSL, Glacier2 provides a
security solution that is both non-intrusive and easy to configure.",
      "location": Object {
        "end": 5653,
        "start": 786,
      },
      "metadata": Array [
        "objc:prefix:GLACIER2",
      ],
      "name": "Glacier2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Glacier2/RouterF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 417,
            "start": 400,
          },
          "name": "Router",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 420,
        "start": 356,
      },
      "metadata": Array [
        "objc:prefix:GLACIER2",
      ],
      "name": "Glacier2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Glacier2/SSLInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "cpp:include:Glacier2/Config.h",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 667,
                "start": 649,
              },
              "metadata": undefined,
              "name": "remoteHost",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 716,
                "start": 701,
              },
              "metadata": undefined,
              "name": "remotePort",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 769,
                "start": 752,
              },
              "metadata": undefined,
              "name": "localHost",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 819,
                "start": 805,
              },
              "metadata": undefined,
              "name": "localPort",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 879,
                "start": 865,
              },
              "metadata": undefined,
              "name": "cipher",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 940,
                "start": 919,
              },
              "metadata": undefined,
              "name": "certs",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 942,
            "start": 600,
          },
          "metadata": undefined,
          "name": "SSLInfo",
          "type": "struct",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 945,
        "start": 429,
      },
      "metadata": Array [
        "objc:prefix:GLACIER2",
      ],
      "name": "Glacier2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Glacier2/Session.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:GLACIER2_API",
    "cpp:doxygen:include:Glacier2/Glacier2.h",
    "cpp:header-ext:h",
    "cpp:include:Glacier2/Config.h",
    "js:module:ice",
    "objc:dll-export:GLACIER2_API",
    "objc:header-dir:objc",
    "python:pkgdir:Glacier2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
    "Ice/Identity",
    "Glacier2/SSLInfo",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why session creation has failed.",
              "location": Object {
                "end": 782,
                "start": 768,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an attempt to create a new session failed.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 784,
            "start": 622,
          },
          "metadata": Array [
            "preserve-slice",
          ],
          "name": "CannotCreateSessionException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Destroy the session. This is called automatically when the router is destroyed.",
              "idempotent": undefined,
              "location": Object {
                "end": 1087,
                "start": 1072,
              },
              "metadata": undefined,
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A client-visible session object, which is tied to the lifecycle of a {@link Router}.

@see Router
@see SessionManager",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1089,
            "start": 930,
          },
          "metadata": undefined,
          "name": "Session",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Add a sequence of strings to this set of constraints. Order is
not preserved and duplicates are implicitly removed.

@param additions The sequence of strings to be added.",
              "idempotent": true,
              "location": Object {
                "end": 1573,
                "start": 1527,
              },
              "metadata": undefined,
              "name": "add",
              "parameters": Array [
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 1571,
                    "start": 1547,
                  },
                  "metadata": undefined,
                  "name": "additions",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove a sequence of strings from this set of constraints. No
errors are returned if an entry is not found.

@param deletions The sequence of strings to be removed.",
              "idempotent": true,
              "location": Object {
                "end": 1851,
                "start": 1802,
              },
              "metadata": undefined,
              "name": "remove",
              "parameters": Array [
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 1849,
                    "start": 1825,
                  },
                  "metadata": undefined,
                  "name": "deletions",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns a sequence of strings describing the constraints in this
set.

@return The sequence of strings for this set.",
              "idempotent": true,
              "location": Object {
                "end": 2064,
                "start": 2032,
              },
              "metadata": undefined,
              "name": "get",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An object for managing the set of identity constraints for specific
parts of object identity on a
{@link Session}.

@see Session
@see SessionControl",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2066,
            "start": 1272,
          },
          "metadata": undefined,
          "name": "StringSet",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Add a sequence of Ice identities to this set of constraints. Order is
not preserved and duplicates are implicitly removed.

@param additions The sequence of Ice identities to be added.",
              "idempotent": true,
              "location": Object {
                "end": 2534,
                "start": 2486,
              },
              "metadata": undefined,
              "name": "add",
              "parameters": Array [
                Object {
                  "dataType": "Ice::IdentitySeq",
                  "location": Object {
                    "end": 2532,
                    "start": 2506,
                  },
                  "metadata": undefined,
                  "name": "additions",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove a sequence of identities from this set of constraints. No
errors are returned if an entry is not found.

@param deletions The sequence of Ice identities to be removed.",
              "idempotent": true,
              "location": Object {
                "end": 2824,
                "start": 2773,
              },
              "metadata": undefined,
              "name": "remove",
              "parameters": Array [
                Object {
                  "dataType": "Ice::IdentitySeq",
                  "location": Object {
                    "end": 2822,
                    "start": 2796,
                  },
                  "metadata": undefined,
                  "name": "deletions",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns a sequence of identities describing the constraints in this
set.

@return The sequence of Ice identities for this set.",
              "idempotent": true,
              "location": Object {
                "end": 3049,
                "start": 3015,
              },
              "metadata": undefined,
              "name": "get",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::IdentitySeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An object for managing the set of object identity constraints on a
{@link Session}.

@see Session
@see SessionControl",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 3051,
            "start": 2215,
          },
          "metadata": undefined,
          "name": "IdentitySet",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Access the object that manages the allowable categories
for object identities for this session.

@return A StringSet object.",
              "idempotent": undefined,
              "location": Object {
                "end": 3426,
                "start": 3402,
              },
              "metadata": undefined,
              "name": "categories",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "StringSet*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Access the object that manages the allowable adapter identities
for objects for this session.

@return A StringSet object.",
              "idempotent": undefined,
              "location": Object {
                "end": 3637,
                "start": 3613,
              },
              "metadata": undefined,
              "name": "adapterIds",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "StringSet*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Access the object that manages the allowable object identities
for this session.

@return An IdentitySet object.",
              "idempotent": undefined,
              "location": Object {
                "end": 3840,
                "start": 3814,
              },
              "metadata": undefined,
              "name": "identities",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "IdentitySet*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the session timeout.

@return The timeout.",
              "idempotent": true,
              "location": Object {
                "end": 3979,
                "start": 3944,
              },
              "metadata": undefined,
              "name": "getSessionTimeout",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Destroy the associated session.",
              "idempotent": undefined,
              "location": Object {
                "end": 4070,
                "start": 4055,
              },
              "metadata": undefined,
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An administrative session control object, which is tied to the
lifecycle of a {@link Session}.

@see Session",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4072,
            "start": 3188,
          },
          "metadata": undefined,
          "name": "SessionControl",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Create a new session.

@param userId The user id for the session.

@param control A proxy to the session control object.

@return A proxy to the newly created session.

@throws CannotCreateSessionException Raised if the session
cannot be created.",
              "idempotent": undefined,
              "location": Object {
                "end": 4975,
                "start": 4853,
              },
              "metadata": Array [
                "format:sliced",
              ],
              "name": "create",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4904,
                    "start": 4891,
                  },
                  "metadata": undefined,
                  "name": "userId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "SessionControl*",
                  "location": Object {
                    "end": 4929,
                    "start": 4906,
                  },
                  "metadata": undefined,
                  "name": "control",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Session*",
              "throws": Array [
                "CannotCreateSessionException",
              ],
              "type": "operation",
            },
          ],
          "doc": "The session manager for username/password authenticated users that
is responsible for managing {@link Session} objects. New session objects
are created by the {@link Router} object calling on an application-provided
session manager. If no session manager is provided by the application,
no client-visible sessions are passed to the client.

@see Router
@see Session",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4977,
            "start": 4478,
          },
          "metadata": undefined,
          "name": "SessionManager",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Create a new session.

@param info The SSL info.

@param control A proxy to the session control object.

@return A proxy to the newly created session.

@throws CannotCreateSessionException Raised if the session
cannot be created.",
              "idempotent": undefined,
              "location": Object {
                "end": 5851,
                "start": 5730,
              },
              "metadata": Array [
                "format:sliced",
              ],
              "name": "create",
              "parameters": Array [
                Object {
                  "dataType": "SSLInfo",
                  "location": Object {
                    "end": 5780,
                    "start": 5768,
                  },
                  "metadata": undefined,
                  "name": "info",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "SessionControl*",
                  "location": Object {
                    "end": 5805,
                    "start": 5782,
                  },
                  "metadata": undefined,
                  "name": "control",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Session*",
              "throws": Array [
                "CannotCreateSessionException",
              ],
              "type": "operation",
            },
          ],
          "doc": "The session manager for SSL authenticated users that is
responsible for managing {@link Session} objects. New session objects are
created by the {@link Router} object calling on an application-provided
session manager. If no session manager is provided by the
application, no client-visible sessions are passed to the client.

@see Router
@see Session",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5853,
            "start": 5369,
          },
          "metadata": undefined,
          "name": "SSLSessionManager",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 5856,
        "start": 489,
      },
      "metadata": Array [
        "objc:prefix:GLACIER2",
      ],
      "name": "Glacier2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/BuiltinSequences.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "dataType": "bool",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 435,
            "start": 412,
          },
          "metadata": undefined,
          "name": "BoolSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "byte",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 489,
            "start": 466,
          },
          "metadata": undefined,
          "name": "ByteSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "short",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 546,
            "start": 521,
          },
          "metadata": undefined,
          "name": "ShortSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "int",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 597,
            "start": 576,
          },
          "metadata": undefined,
          "name": "IntSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "long",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 651,
            "start": 628,
          },
          "metadata": undefined,
          "name": "LongSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "float",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 708,
            "start": 683,
          },
          "metadata": undefined,
          "name": "FloatSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "double",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 768,
            "start": 741,
          },
          "metadata": undefined,
          "name": "DoubleSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "string",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 828,
            "start": 801,
          },
          "metadata": undefined,
          "name": "StringSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "Object",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 888,
            "start": 861,
          },
          "metadata": undefined,
          "name": "ObjectSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "Object*",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 961,
            "start": 928,
          },
          "metadata": undefined,
          "name": "ObjectProxySeq",
          "type": "sequence",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 964,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Communicator.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/LoggerF",
    "Ice/InstrumentationF",
    "Ice/ObjectAdapterF",
    "Ice/ObjectFactory",
    "Ice/ValueFactory",
    "Ice/Router",
    "Ice/Locator",
    "Ice/PluginF",
    "Ice/ImplicitContextF",
    "Ice/Current",
    "Ice/Properties",
    "Ice/FacetMap",
    "Ice/Connection",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Destroy the communicator. This operation calls {@link #shutdown}
implicitly.  Calling {@link #destroy} cleans up memory, and shuts down
this communicator's client functionality and destroys all object
adapters. Subsequent calls to {@link #destroy} are ignored.

@see #shutdown
@see ObjectAdapter#destroy",
              "idempotent": undefined,
              "location": Object {
                "end": 2260,
                "start": 2216,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Shuts down this communicator's server functionality, which
includes the deactivation of all object adapters. Attempts to use a
deactivated object adapter raise ObjectAdapterDeactivatedException.
Subsequent calls to shutdown are ignored.

After shutdown returns, no new requests are processed. However, requests
that have been started before shutdown was called might still be active.
You can use {@link #waitForShutdown} to wait for the completion of all
requests.

@see #destroy
@see #waitForShutdown
@see ObjectAdapter#deactivate",
              "idempotent": undefined,
              "location": Object {
                "end": 2963,
                "start": 2918,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "shutdown",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Wait until the application has called {@link #shutdown} (or {@link #destroy}).
On the server side, this operation blocks the calling thread
until all currently-executing operations have completed.
On the client side, the operation simply blocks until another
thread has called {@link #shutdown} or {@link #destroy}.

A typical use of this operation is to call it from the main thread,
which then waits until some other thread calls {@link #shutdown}.
After shut-down is complete, the main thread returns and can do some
cleanup work before it finally calls {@link #destroy} to shut down
the client functionality, and then exits the application.

@see #shutdown
@see #destroy
@see ObjectAdapter#waitForDeactivate",
              "idempotent": undefined,
              "location": Object {
                "end": 3867,
                "start": 3815,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "waitForShutdown",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Check whether communicator has been shut down.

@return True if the communicator has been shut down; false otherwise.

@see #shutdown",
              "idempotent": undefined,
              "location": Object {
                "end": 4119,
                "start": 4071,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "isShutdown",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a stringified proxy into a proxy. For example,
<code>MyCategory/MyObject:tcp -h some_host -p
10000</code> creates a proxy that refers to the Ice object
having an identity with a name \\"MyObject\\" and a category
\\"MyCategory\\", with the server running on host \\"some_host\\", port
10000. If the stringified proxy does not parse correctly, the
operation throws one of ProxyParseException, EndpointParseException,
or IdentityParseException. Refer to the Ice manual for a detailed
description of the syntax supported by stringified proxies.

@param str The stringified proxy to convert into a proxy.

@return The proxy, or nil if <code>str</code> is an empty string.

@see #proxyToString",
              "idempotent": undefined,
              "location": Object {
                "end": 4991,
                "start": 4943,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "stringToProxy",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4989,
                    "start": 4979,
                  },
                  "metadata": undefined,
                  "name": "str",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a proxy into a string.

@param obj The proxy to convert into a stringified proxy.

@return The stringified proxy, or an empty string if
<code>obj</code> is nil.

@see #stringToProxy",
              "idempotent": undefined,
              "location": Object {
                "end": 5319,
                "start": 5271,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "proxyToString",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 5317,
                    "start": 5306,
                  },
                  "metadata": undefined,
                  "name": "obj",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a set of proxy properties into a proxy. The \\"base\\"
name supplied in the <code>property</code> argument refers to a
property containing a stringified proxy, such as
<code>MyProxy=id:tcp -h localhost -p 10000</code>. Additional
properties configure local settings for the proxy, such as
<code>MyProxy.PreferSecure=1</code>. The \\"Properties\\"
appendix in the Ice manual describes each of the supported
proxy properties.

@param property The base property name.

@return The proxy.",
              "idempotent": undefined,
              "location": Object {
                "end": 5978,
                "start": 5923,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "propertyToProxy",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5976,
                    "start": 5961,
                  },
                  "metadata": undefined,
                  "name": "property",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a proxy to a set of proxy properties.

@param proxy The proxy.

@param property The base property name.

@return The property set.",
              "idempotent": undefined,
              "location": Object {
                "end": 6275,
                "start": 6200,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "proxyToProperty",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 6256,
                    "start": 6243,
                  },
                  "metadata": undefined,
                  "name": "proxy",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 6273,
                    "start": 6258,
                  },
                  "metadata": undefined,
                  "name": "property",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "PropertyDict",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a string into an identity. If the string does not parse
correctly, the operation throws IdentityParseException.

@param str The string to convert into an identity.

@return The identity.

@see #identityToString",
              "idempotent": undefined,
              "location": Object {
                "end": 6737,
                "start": 6584,
              },
              "metadata": Array [
                "cpp:const",
                "deprecate:stringToIdentity() is deprecated, use the static stringToIdentity() method instead.",
              ],
              "name": "stringToIdentity",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 6735,
                    "start": 6725,
                  },
                  "metadata": undefined,
                  "name": "str",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Identity",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert an identity into a string.

@param ident The identity to convert into a string.

@return The \\"stringified\\" identity.

@see #stringToIdentity",
              "idempotent": undefined,
              "location": Object {
                "end": 7023,
                "start": 6969,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "identityToString",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 7021,
                    "start": 7007,
                  },
                  "metadata": undefined,
                  "name": "ident",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a new object adapter. The endpoints for the object
adapter are taken from the property <code><em>name</em>.Endpoints</code>.

It is legal to create an object adapter with the empty string as
its name. Such an object adapter is accessible via bidirectional
connections or by collocated invocations that originate from the
same communicator as is used by the adapter.

Attempts to create a named object adapter for which no configuration
can be found raise InitializationException.

@param name The object adapter name.

@return The new object adapter.

@see #createObjectAdapterWithEndpoints
@see ObjectAdapter
@see Properties",
              "idempotent": undefined,
              "location": Object {
                "end": 7874,
                "start": 7814,
              },
              "metadata": Array [
                "js:async",
              ],
              "name": "createObjectAdapter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 7872,
                    "start": 7861,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectAdapter",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a new object adapter with endpoints. This operation sets
the property <code><em>name</em>.Endpoints</code>, and then calls
{@link #createObjectAdapter}. It is provided as a convenience
function.

Calling this operation with an empty name will result in a
UUID being generated for the name.

@param name The object adapter name.

@param endpoints The endpoints for the object adapter.

@return The new object adapter.

@see #createObjectAdapter
@see ObjectAdapter
@see Properties",
              "idempotent": undefined,
              "location": Object {
                "end": 8602,
                "start": 8511,
              },
              "metadata": Array [
                "js:async",
              ],
              "name": "createObjectAdapterWithEndpoints",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 8582,
                    "start": 8571,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 8600,
                    "start": 8584,
                  },
                  "metadata": undefined,
                  "name": "endpoints",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectAdapter",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a new object adapter with a router. This operation
creates a routed object adapter.

Calling this operation with an empty name will result in a
UUID being generated for the name.

@param name The object adapter name.

@param rtr The router.

@return The new object adapter.

@see #createObjectAdapter
@see ObjectAdapter
@see Properties",
              "idempotent": undefined,
              "location": Object {
                "end": 9187,
                "start": 9082,
              },
              "metadata": Array [
                "js:async",
              ],
              "name": "createObjectAdapterWithRouter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 9150,
                    "start": 9139,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Router*",
                  "location": Object {
                    "end": 9185,
                    "start": 9152,
                  },
                  "metadata": Array [
                    "objc:param:router",
                  ],
                  "name": "rtr",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectAdapter",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add an object factory to this communicator. Installing a
factory with an id for which a factory is already registered
throws AlreadyRegisteredException.

When unmarshaling an Ice object, the Ice run time reads the
most-derived type id off the wire and attempts to create an
instance of the type using a factory. If no instance is created,
either because no factory was found, or because all factories
returned nil, the behavior of the Ice run time depends on the
format with which the object was marshaled:

If the object uses the \\"sliced\\" format, Ice ascends the class
hierarchy until it finds a type that is recognized by a factory,
or it reaches the least-derived type. If no factory is found that
can create an instance, the run time throws NoValueFactoryException.

If the object uses the \\"compact\\" format, Ice immediately raises
NoValueFactoryException.

The following order is used to locate a factory for a type:

<ol>

<li>The Ice run-time looks for a factory registered
specifically for the type.</li>

<li>If no instance has been created, the Ice run-time looks
for the default factory, which is registered with an empty type id.
</li>

<li>If no instance has been created by any of the preceding
steps, the Ice run-time looks for a factory that may have been
statically generated by the language mapping for non-abstract classes.
</li>

</ol>

@param factory The factory to add.

@param id The type id for which the factory can create instances, or
an empty string for the default factory.

@see #findObjectFactory
@see ObjectFactory
@see ValueFactoryManager#add",
              "idempotent": undefined,
              "location": Object {
                "end": 11273,
                "start": 11102,
              },
              "metadata": Array [
                "deprecate:addObjectFactory() is deprecated, use ValueFactoryManager::add() instead.",
              ],
              "name": "addObjectFactory",
              "parameters": Array [
                Object {
                  "dataType": "ObjectFactory",
                  "location": Object {
                    "end": 11237,
                    "start": 11216,
                  },
                  "metadata": undefined,
                  "name": "factory",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 11271,
                    "start": 11239,
                  },
                  "metadata": Array [
                    "objc:param:sliceId",
                  ],
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find an object factory registered with this communicator.

@param id The type id for which the factory can create instances,
or an empty string for the default factory.

@return The object factory, or null if no object factory was
found for the given id.

@see #addObjectFactory
@see ObjectFactory
@see ValueFactoryManager#find",
              "idempotent": undefined,
              "location": Object {
                "end": 11878,
                "start": 11712,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
                "deprecate:findObjectFactory() is deprecated, use ValueFactoryManager::find() instead.",
              ],
              "name": "findObjectFactory",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 11876,
                    "start": 11867,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectFactory",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the implicit context associated with this communicator.

@return The implicit context associated with this communicator;
returns null when the property Ice.ImplicitContext is not set
or is set to None.",
              "idempotent": undefined,
              "location": Object {
                "end": 12215,
                "start": 12148,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getImplicitContext",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ImplicitContext",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the properties for this communicator.

@return This communicator's properties.

@see Properties",
              "idempotent": undefined,
              "location": Object {
                "end": 12442,
                "start": 12385,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getProperties",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Properties",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the logger for this communicator.

@return This communicator's logger.

@see Logger",
              "idempotent": undefined,
              "location": Object {
                "end": 12649,
                "start": 12600,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getLogger",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Logger",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the observer resolver object for this communicator.

@return This communicator's observer resolver object.",
              "idempotent": undefined,
              "location": Object {
                "end": 12920,
                "start": 12838,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getObserver",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Instrumentation::CommunicatorObserver",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the default router this communicator.

@return The default router for this communicator.

@see #setDefaultRouter
@see Router",
              "idempotent": undefined,
              "location": Object {
                "end": 13174,
                "start": 13133,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getDefaultRouter",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Router*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set a default router for this communicator. All newly
created proxies will use this default router. To disable the
default router, null can be used. Note that this
operation has no effect on existing proxies.

You can also set a router for an individual proxy
by calling the operation <code>ice_router</code> on the proxy.

@param rtr The default router to use for this communicator.

@see #getDefaultRouter
@see #createObjectAdapterWithRouter
@see Router",
              "idempotent": undefined,
              "location": Object {
                "end": 13790,
                "start": 13755,
              },
              "metadata": undefined,
              "name": "setDefaultRouter",
              "parameters": Array [
                Object {
                  "dataType": "Router*",
                  "location": Object {
                    "end": 13788,
                    "start": 13777,
                  },
                  "metadata": undefined,
                  "name": "rtr",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the default locator this communicator.

@return The default locator for this communicator.

@see #setDefaultLocator
@see Locator",
              "idempotent": undefined,
              "location": Object {
                "end": 14043,
                "start": 14000,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getDefaultLocator",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Locator*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set a default Ice locator for this communicator. All newly
created proxy and object adapters will use this default
locator. To disable the default locator, null can be used.
Note that this operation has no effect on existing proxies or
object adapters.

You can also set a locator for an individual proxy by calling the
operation <code>ice_locator</code> on the proxy, or for an object adapter
by calling {@link ObjectAdapter#setLocator} on the object adapter.

@param loc The default locator to use for this communicator.

@see #getDefaultLocator
@see Locator
@see ObjectAdapter#setLocator",
              "idempotent": undefined,
              "location": Object {
                "end": 14810,
                "start": 14773,
              },
              "metadata": undefined,
              "name": "setDefaultLocator",
              "parameters": Array [
                Object {
                  "dataType": "Locator*",
                  "location": Object {
                    "end": 14808,
                    "start": 14796,
                  },
                  "metadata": undefined,
                  "name": "loc",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the plug-in manager for this communicator.

@return This communicator's plug-in manager.

@see PluginManager",
              "idempotent": undefined,
              "location": Object {
                "end": 15061,
                "start": 15014,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getPluginManager",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "PluginManager",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the value factory manager for this communicator.

@return This communicator's value factory manager.

@see ValueFactoryManager",
              "idempotent": undefined,
              "location": Object {
                "end": 15344,
                "start": 15269,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getValueFactoryManager",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ValueFactoryManager",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Flush any pending batch requests for this communicator.
This means all batch requests invoked on fixed proxies
for all connections associated with the communicator.
Any errors that occur while flushing a connection are ignored.

@param compress Specifies whether or not the queued batch requests
should be compressed before being sent over the wire.",
              "idempotent": undefined,
              "location": Object {
                "end": 15844,
                "start": 15779,
              },
              "metadata": Array [
                "async-oneway",
              ],
              "name": "flushBatchRequests",
              "parameters": Array [
                Object {
                  "dataType": "CompressBatch",
                  "location": Object {
                    "end": 15842,
                    "start": 15820,
                  },
                  "metadata": undefined,
                  "name": "compress",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add the Admin object with all its facets to the provided object adapter.
If Ice.Admin.ServerId is set and the provided object adapter has a {@link Locator},
createAdmin registers the Admin's Process facet with the {@link Locator}'s {@link LocatorRegistry}.

createAdmin call only be called once; subsequent calls raise InitializationException.

@param adminAdapter The object adapter used to host the Admin object; if null and
Ice.Admin.Endpoints is set, create, activate and use the Ice.Admin object adapter.

@param adminId The identity of the Admin object.

@return A proxy to the main (\\"\\") facet of the Admin object. Never returns a null proxy.

@see #getAdmin",
              "idempotent": undefined,
              "location": Object {
                "end": 16726,
                "start": 16660,
              },
              "metadata": undefined,
              "name": "createAdmin",
              "parameters": Array [
                Object {
                  "dataType": "ObjectAdapter",
                  "location": Object {
                    "end": 16706,
                    "start": 16680,
                  },
                  "metadata": undefined,
                  "name": "adminAdapter",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 16724,
                    "start": 16708,
                  },
                  "metadata": undefined,
                  "name": "adminId",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a proxy to the main facet of the Admin object.

getAdmin also creates the Admin object and creates and activates the Ice.Admin object
adapter to host this Admin object if Ice.Admin.Enpoints is set. The identity of the Admin
object created by getAdmin is {value of Ice.Admin.InstanceName}/admin, or {UUID}/admin
when Ice.Admin.InstanceName is not set.

If Ice.Admin.DelayCreation is 0 or not set, getAdmin is called by the communicator
initialization, after initialization of all plugins.

@return A proxy to the main (\\"\\") facet of the Admin object, or a null proxy if no
Admin object is configured.

@see #createAdmin",
              "idempotent": undefined,
              "location": Object {
                "end": 17505,
                "start": 17472,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getAdmin",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add a new facet to the Admin object.
Adding a servant with a facet that is already registered
throws AlreadyRegisteredException.

@param servant The servant that implements the new Admin facet.
@param facet The name of the new Admin facet.",
              "idempotent": undefined,
              "location": Object {
                "end": 17872,
                "start": 17823,
              },
              "metadata": undefined,
              "name": "addAdminFacet",
              "parameters": Array [
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 17856,
                    "start": 17842,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 17870,
                    "start": 17858,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove the following facet to the Admin object.
Removing a facet that was not previously registered throws
NotRegisteredException.

@param facet The name of the Admin facet.
@return The servant associated with this Admin facet.",
              "idempotent": undefined,
              "location": Object {
                "end": 18216,
                "start": 18178,
              },
              "metadata": undefined,
              "name": "removeAdminFacet",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 18214,
                    "start": 18202,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns a facet of the Admin object.

@param facet The name of the Admin facet.
@return The servant associated with this Admin facet, or
null if no facet is registered with the given name.",
              "idempotent": undefined,
              "location": Object {
                "end": 18512,
                "start": 18476,
              },
              "metadata": undefined,
              "name": "findAdminFacet",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 18510,
                    "start": 18498,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns a map of all facets of the Admin object.

@return A collection containing all the facet names and
servants of the Admin object.

@see #findAdminFacet",
              "idempotent": undefined,
              "location": Object {
                "end": 18777,
                "start": 18747,
              },
              "metadata": undefined,
              "name": "findAllAdminFacets",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "FacetMap",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The central object in Ice. One or more communicators can be
instantiated for an Ice application. Communicator instantiation
is language-specific, and not specified in Slice code.

@see Logger
@see ObjectAdapter
@see Properties
@see ValueFactory",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 18786,
            "start": 1403,
          },
          "metadata": Array [
            "clr:implements:global::System.IDisposable",
            "java:implements:java.lang.AutoCloseable",
          ],
          "name": "Communicator",
          "type": "interface",
        },
        Object {
          "doc": "The output mode for xxxToString method such as identityToString and proxyToString.
The actual encoding format for the string is the same for all modes: you
don't need to specify an encoding format or mode when reading such a string.",
          "enums": Array [
            Object {
              "doc": "Characters with ordinal values greater than 127 are kept as-is in the resulting string.
Non-printable ASCII characters with ordinal values 127 and below are encoded as \\\\\\\\t, \\\\\\\\n (etc.)
or \\\\\\\\unnnn.",
              "location": Object {
                "end": 19321,
                "start": 19314,
              },
              "name": "Unicode",
              "value": undefined,
            },
            Object {
              "doc": "Characters with ordinal values greater than 127 are encoded as universal character names in
the resulting string: \\\\\\\\unnnn for BMP characters and \\\\\\\\Unnnnnnnn for non-BMP characters.
Non-printable ASCII characters with ordinal values 127 and below are encoded as \\\\\\\\t, \\\\\\\\n (etc.)
or \\\\\\\\unnnn.",
              "location": Object {
                "end": 19667,
                "start": 19662,
              },
              "name": "ASCII",
              "value": undefined,
            },
            Object {
              "doc": "Characters with ordinal values greater than 127 are encoded as a sequence of UTF-8 bytes using
octal escapes. Characters with ordinal values 127 and below are encoded as \\\\\\\\t, \\\\\\\\n (etc.) or
an octal escape. Use this mode to generate strings compatible with Ice 3.6 and earlier.",
              "location": Object {
                "end": 19995,
                "start": 19989,
              },
              "name": "Compat",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 19997,
            "start": 19050,
          },
          "metadata": undefined,
          "name": "ToStringMode",
          "type": "enum",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 20000,
        "start": 1086,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/CommunicatorF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 412,
            "start": 383,
          },
          "name": "Communicator",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 415,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Connection.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/ObjectAdapterF",
    "Ice/Identity",
    "Ice/Endpoint",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "The batch compression option when flushing queued batch requests.",
          "enums": Array [
            Object {
              "doc": "Compress the batch requests.",
              "location": Object {
                "end": 672,
                "start": 669,
              },
              "name": "Yes",
              "value": undefined,
            },
            Object {
              "doc": "Don't compress the batch requests.",
              "location": Object {
                "end": 740,
                "start": 738,
              },
              "name": "No",
              "value": undefined,
            },
            Object {
              "doc": "Compress the batch requests if at least one request was
made on a compressed proxy.",
              "location": Object {
                "end": 874,
                "start": 862,
              },
              "name": "BasedOnProxy",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 876,
            "start": 555,
          },
          "metadata": Array [
            "cpp:scoped",
            "objc:scoped",
          ],
          "name": "CompressBatch",
          "type": "enum",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "ConnectionInfo",
              "defaultValue": undefined,
              "doc": "The information of the underyling transport or null if there's
no underlying transport.",
              "location": Object {
                "end": 1201,
                "start": 1175,
              },
              "metadata": undefined,
              "name": "underlying",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": "Whether or not the connection is an incoming or outgoing
connection.",
              "location": Object {
                "end": 1335,
                "start": 1321,
              },
              "metadata": undefined,
              "name": "incoming",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the adapter associated with the connection.",
              "location": Object {
                "end": 1454,
                "start": 1435,
              },
              "metadata": undefined,
              "name": "adapterName",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The connection id.",
              "location": Object {
                "end": 1537,
                "start": 1517,
              },
              "metadata": undefined,
              "name": "connectionId",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Base class providing access to the connection details.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1539,
            "start": 1009,
          },
          "metadata": undefined,
          "name": "ConnectionInfo",
          "type": "class",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1575,
            "start": 1548,
          },
          "name": "Connection",
          "type": "interfaceForward",
        },
        Object {
          "content": Array [
            Object {
              "doc": "This method is called by the the connection when the connection
is closed. If the callback needs more information about the closure,
it can call {@link Connection#throwException}.

@param con The connection that closed.",
              "idempotent": undefined,
              "location": Object {
                "end": 2087,
                "start": 2059,
              },
              "metadata": undefined,
              "name": "closed",
              "parameters": Array [
                Object {
                  "dataType": "Connection",
                  "location": Object {
                    "end": 2085,
                    "start": 2071,
                  },
                  "metadata": undefined,
                  "name": "con",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An application can implement this interface to receive notifications when
a connection closes.

@see Connection#setCloseCallback",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2089,
            "start": 1732,
          },
          "metadata": Array [
            "delegate",
          ],
          "name": "CloseCallback",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "This method is called by the the connection when a heartbeat is
received from the peer.

@param con The connection on which a heartbeat was received.",
              "idempotent": undefined,
              "location": Object {
                "end": 2557,
                "start": 2526,
              },
              "metadata": undefined,
              "name": "heartbeat",
              "parameters": Array [
                Object {
                  "dataType": "Connection",
                  "location": Object {
                    "end": 2555,
                    "start": 2541,
                  },
                  "metadata": undefined,
                  "name": "con",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An application can implement this interface to receive notifications when
a connection receives a heartbeat message.

@see Connection#setHeartbeatCallback",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2559,
            "start": 2272,
          },
          "metadata": Array [
            "delegate",
          ],
          "name": "HeartbeatCallback",
          "type": "interface",
        },
        Object {
          "doc": undefined,
          "enums": Array [
            Object {
              "doc": undefined,
              "location": Object {
                "end": 2720,
                "start": 2712,
              },
              "name": "CloseOff",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 2833,
                "start": 2822,
              },
              "name": "CloseOnIdle",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3023,
                "start": 3006,
              },
              "name": "CloseOnInvocation",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3125,
                "start": 3101,
              },
              "name": "CloseOnInvocationAndIdle",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3339,
                "start": 3320,
              },
              "name": "CloseOnIdleForceful",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 3341,
            "start": 2636,
          },
          "metadata": undefined,
          "name": "ACMClose",
          "type": "enum",
        },
        Object {
          "doc": undefined,
          "enums": Array [
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3496,
                "start": 3484,
              },
              "name": "HeartbeatOff",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3636,
                "start": 3617,
              },
              "name": "HeartbeatOnDispatch",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3735,
                "start": 3720,
              },
              "name": "HeartbeatOnIdle",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 3837,
                "start": 3822,
              },
              "name": "HeartbeatAlways",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 3839,
            "start": 3422,
          },
          "metadata": undefined,
          "name": "ACMHeartbeat",
          "type": "enum",
        },
        Object {
          "doc": undefined,
          "fields": Array [
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 3995,
                "start": 3983,
              },
              "metadata": undefined,
              "name": "timeout",
            },
            Object {
              "dataType": "ACMClose",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 4047,
                "start": 4032,
              },
              "metadata": undefined,
              "name": "close",
            },
            Object {
              "dataType": "ACMHeartbeat",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 4111,
                "start": 4088,
              },
              "metadata": undefined,
              "name": "heartbeat",
            },
          ],
          "local": true,
          "location": Object {
            "end": 4113,
            "start": 3921,
          },
          "metadata": undefined,
          "name": "ACM",
          "type": "struct",
        },
        Object {
          "doc": "Determines the behavior when manually closing a connection.",
          "enums": Array [
            Object {
              "doc": "Close the connection immediately without sending a close connection protocol message to the peer
and waiting for the peer to acknowledge it.",
              "location": Object {
                "end": 4432,
                "start": 4422,
              },
              "name": "Forcefully",
              "value": undefined,
            },
            Object {
              "doc": "Close the connection by notifying the peer but do not wait for pending outgoing invocations to complete.
On the server side, the connection will not be closed until all incoming invocations have completed.",
              "location": Object {
                "end": 4685,
                "start": 4675,
              },
              "name": "Gracefully",
              "value": undefined,
            },
            Object {
              "doc": "Wait for all pending invocations to complete before closing the connection.",
              "location": Object {
                "end": 4809,
                "start": 4791,
              },
              "name": "GracefullyWithWait",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 4811,
            "start": 4187,
          },
          "metadata": Array [
            "cpp:scoped",
            "objc:scoped",
          ],
          "name": "ConnectionClose",
          "type": "enum",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Manually close the connection using the specified closure mode.

@param mode Determines how the connection will be closed.

@see ConnectionClose",
              "idempotent": undefined,
              "location": Object {
                "end": 5228,
                "start": 5166,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "close",
              "parameters": Array [
                Object {
                  "dataType": "ConnectionClose",
                  "location": Object {
                    "end": 5226,
                    "start": 5206,
                  },
                  "metadata": undefined,
                  "name": "mode",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a special proxy that always uses this connection. This
can be used for callbacks from a server to a client if the
server cannot directly establish a connection to the client,
for example because of firewalls. In this case, the server
would create a proxy using an already established connection
from the client.

@param id The identity for which a proxy is to be created.

@return A proxy that matches the given identity and uses this
connection.

@see #setAdapter",
              "idempotent": undefined,
              "location": Object {
                "end": 5865,
                "start": 5818,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "createProxy",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 5863,
                    "start": 5852,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Explicitly set an object adapter that dispatches requests that
are received over this connection. A client can invoke an
operation on a server using a proxy, and then set an object
adapter for the outgoing connection that is used by the proxy
in order to receive callbacks. This is useful if the server
cannot establish a connection back to the client, for example
because of firewalls.

@param adapter The object adapter that should be used by this
connection to dispatch requests. The object adapter must be
activated. When the object adapter is deactivated, it is
automatically removed from the connection. Attempts to use a
deactivated object adapter raise {@link ObjectAdapterDeactivatedException}

@see #createProxy
@see #getAdapter",
              "idempotent": undefined,
              "location": Object {
                "end": 6790,
                "start": 6751,
              },
              "metadata": undefined,
              "name": "setAdapter",
              "parameters": Array [
                Object {
                  "dataType": "ObjectAdapter",
                  "location": Object {
                    "end": 6788,
                    "start": 6767,
                  },
                  "metadata": undefined,
                  "name": "adapter",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the object adapter that dispatches requests for this
connection.

@return The object adapter that dispatches requests for the
connection, or null if no adapter is set.

@see #setAdapter",
              "idempotent": undefined,
              "location": Object {
                "end": 7121,
                "start": 7064,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getAdapter",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ObjectAdapter",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the endpoint from which the connection was created.

@return The endpoint from which the connection was created.",
              "idempotent": undefined,
              "location": Object {
                "end": 7348,
                "start": 7295,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getEndpoint",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Endpoint",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Flush any pending batch requests for this connection.
This means all batch requests invoked on fixed proxies
associated with the connection.

@param compress Specifies whether or not the queued batch requests
should be compressed before being sent over the wire.",
              "idempotent": undefined,
              "location": Object {
                "end": 7754,
                "start": 7689,
              },
              "metadata": Array [
                "async-oneway",
              ],
              "name": "flushBatchRequests",
              "parameters": Array [
                Object {
                  "dataType": "CompressBatch",
                  "location": Object {
                    "end": 7752,
                    "start": 7730,
                  },
                  "metadata": undefined,
                  "name": "compress",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set a close callback on the connection. The callback is called by the
connection when it's closed. The callback is called from the
Ice thread pool associated with the connection. If the callback needs
more information about the closure, it can call {@link Connection#throwException}.

@param callback The close callback object.",
              "idempotent": undefined,
              "location": Object {
                "end": 8206,
                "start": 8160,
              },
              "metadata": undefined,
              "name": "setCloseCallback",
              "parameters": Array [
                Object {
                  "dataType": "CloseCallback",
                  "location": Object {
                    "end": 8204,
                    "start": 8182,
                  },
                  "metadata": undefined,
                  "name": "callback",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set a heartbeat callback on the connection. The callback is called by the
connection when a heartbeat is received. The callback is called
from the Ice thread pool associated with the connection.

@param callback The heartbeat callback object.",
              "idempotent": undefined,
              "location": Object {
                "end": 8574,
                "start": 8520,
              },
              "metadata": undefined,
              "name": "setHeartbeatCallback",
              "parameters": Array [
                Object {
                  "dataType": "HeartbeatCallback",
                  "location": Object {
                    "end": 8572,
                    "start": 8546,
                  },
                  "metadata": undefined,
                  "name": "callback",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Send a heartbeat message.",
              "idempotent": undefined,
              "location": Object {
                "end": 8678,
                "start": 8644,
              },
              "metadata": Array [
                "async-oneway",
              ],
              "name": "heartbeat",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set the active connection management parameters.

@param timeout The timeout value in seconds. It must be positive or 0, if a negative
value is given, an invalid argument exception will be raised.

@param close The close condition

@param heartbeat The hertbeat condition",
              "idempotent": undefined,
              "location": Object {
                "end": 9163,
                "start": 9040,
              },
              "metadata": Array [
                "java:optional",
              ],
              "name": "setACM",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 9097,
                    "start": 9074,
                  },
                  "metadata": undefined,
                  "name": "timeout",
                  "optional": 1,
                  "out": undefined,
                },
                Object {
                  "dataType": "ACMClose",
                  "location": Object {
                    "end": 9125,
                    "start": 9099,
                  },
                  "metadata": undefined,
                  "name": "close",
                  "optional": 2,
                  "out": undefined,
                },
                Object {
                  "dataType": "ACMHeartbeat",
                  "location": Object {
                    "end": 9161,
                    "start": 9127,
                  },
                  "metadata": undefined,
                  "name": "heartbeat",
                  "optional": 3,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the ACM parameters.

@return The ACM parameters.",
              "idempotent": undefined,
              "location": Object {
                "end": 9303,
                "start": 9273,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getACM",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ACM",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Return the connection type. This corresponds to the endpoint
type, i.e., \\"tcp\\", \\"udp\\", etc.

@return The type of the connection.",
              "idempotent": undefined,
              "location": Object {
                "end": 9540,
                "start": 9496,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "type",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the timeout for the connection.

@return The connection's timeout.",
              "idempotent": undefined,
              "location": Object {
                "end": 9712,
                "start": 9668,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "timeout",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Return a description of the connection as human readable text,
suitable for logging or error messages.

@return The description of the connection as human readable
text.",
              "idempotent": undefined,
              "location": Object {
                "end": 10001,
                "start": 9953,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "toString",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns the connection information.

@return The connection information.",
              "idempotent": undefined,
              "location": Object {
                "end": 10170,
                "start": 10131,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getInfo",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ConnectionInfo",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set the connection buffer receive/send size.

@param rcvSize The connection receive buffer size.
@param sndSize The connection send buffer size.",
              "idempotent": undefined,
              "location": Object {
                "end": 10424,
                "start": 10379,
              },
              "metadata": undefined,
              "name": "setBufferSize",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 10409,
                    "start": 10398,
                  },
                  "metadata": undefined,
                  "name": "rcvSize",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 10422,
                    "start": 10411,
                  },
                  "metadata": undefined,
                  "name": "sndSize",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Throw an exception indicating the reason for connection closure. For example,
{@link CloseConnectionException} is raised if the connection was closed gracefully,
whereas {@link ConnectionManuallyClosedException} is raised if the connection was
manually closed by the application. This operation does nothing if the connection is
not yet closed.",
              "idempotent": undefined,
              "location": Object {
                "end": 10877,
                "start": 10841,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "throwException",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The user-level interface to a connection.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 10879,
            "start": 4931,
          },
          "metadata": undefined,
          "name": "Connection",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": "\\"\\"",
              "doc": undefined,
              "location": Object {
                "end": 11074,
                "start": 11049,
              },
              "metadata": undefined,
              "name": "localAddress",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "-1",
              "doc": undefined,
              "location": Object {
                "end": 11126,
                "start": 11107,
              },
              "metadata": undefined,
              "name": "localPort",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": "\\"\\"",
              "doc": undefined,
              "location": Object {
                "end": 11189,
                "start": 11163,
              },
              "metadata": undefined,
              "name": "remoteAddress",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "-1",
              "doc": undefined,
              "location": Object {
                "end": 11243,
                "start": 11223,
              },
              "metadata": undefined,
              "name": "remotePort",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the connection details of an IP connection",
          "extends": "ConnectionInfo",
          "local": true,
          "location": Object {
            "end": 11245,
            "start": 10961,
          },
          "metadata": undefined,
          "name": "IPConnectionInfo",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The connection buffer receive size.",
              "location": Object {
                "end": 11478,
                "start": 11462,
              },
              "metadata": undefined,
              "name": "rcvSize",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The connection buffer send size.",
              "location": Object {
                "end": 11571,
                "start": 11555,
              },
              "metadata": undefined,
              "name": "sndSize",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the connection details of a TCP connection",
          "extends": "IPConnectionInfo",
          "local": true,
          "location": Object {
            "end": 11573,
            "start": 11327,
          },
          "metadata": undefined,
          "name": "TCPConnectionInfo",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The multicast address.",
              "location": Object {
                "end": 11797,
                "start": 11777,
              },
              "metadata": undefined,
              "name": "mcastAddress",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "-1",
              "doc": "The multicast port.",
              "location": Object {
                "end": 11880,
                "start": 11861,
              },
              "metadata": undefined,
              "name": "mcastPort",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The connection buffer receive size.",
              "location": Object {
                "end": 11976,
                "start": 11960,
              },
              "metadata": undefined,
              "name": "rcvSize",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The connection buffer send size.",
              "location": Object {
                "end": 12069,
                "start": 12053,
              },
              "metadata": undefined,
              "name": "sndSize",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the connection details of a UDP connection",
          "extends": "IPConnectionInfo",
          "local": true,
          "location": Object {
            "end": 12071,
            "start": 11655,
          },
          "metadata": undefined,
          "name": "UDPConnectionInfo",
          "type": "class",
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 12148,
            "start": 12110,
          },
          "metadata": undefined,
          "name": "HeaderDict",
          "type": "dictionary",
          "valueType": "string",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [
            Object {
              "dataType": "HeaderDict",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 12367,
                "start": 12348,
              },
              "metadata": undefined,
              "name": "headers",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the connection details of a WebSocket connection",
          "extends": "ConnectionInfo",
          "local": true,
          "location": Object {
            "end": 12369,
            "start": 12236,
          },
          "metadata": undefined,
          "name": "WSConnectionInfo",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 12380,
        "start": 440,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ConnectionF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 410,
            "start": 383,
          },
          "name": "ConnectionInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 440,
            "start": 411,
          },
          "name": "WSConnectionInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 468,
            "start": 441,
          },
          "name": "Connection",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 471,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Current.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/ObjectAdapterF",
    "Ice/ConnectionF",
    "Ice/Identity",
    "Ice/Version",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A request context. <code>Context</code> is used to transmit metadata about a
request from the server to the client, such as Quality-of-Service
(QoS) parameters. Each operation on the client has a <code>Context</code> as
its implicit final parameter.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 816,
            "start": 781,
          },
          "metadata": undefined,
          "name": "Context",
          "type": "dictionary",
          "valueType": "string",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": undefined,
          "enums": Array [
            Object {
              "doc": undefined,
              "location": Object {
                "end": 1441,
                "start": 1435,
              },
              "name": "Normal",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 2242,
                "start": 2230,
              },
              "name": "Nonmutating",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 2762,
                "start": 2751,
              },
              "name": "Idempotent",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 2764,
            "start": 1068,
          },
          "metadata": undefined,
          "name": "OperationMode",
          "type": "enum",
        },
        Object {
          "doc": "Information about the current method invocation for servers. Each
operation on the server has a <code>Current</code> as its implicit final
parameter. <code>Current</code> is mostly used for Ice services. Most
applications ignore this parameter.",
          "fields": Array [
            Object {
              "dataType": "ObjectAdapter",
              "defaultValue": undefined,
              "doc": "The object adapter.",
              "location": Object {
                "end": 3145,
                "start": 3123,
              },
              "metadata": undefined,
              "name": "adapter",
            },
            Object {
              "dataType": "Connection",
              "defaultValue": undefined,
              "doc": "Information about the connection over which the current method
invocation was received. If the invocation is direct due to
collocation optimization, this value is set to null.",
              "location": Object {
                "end": 3394,
                "start": 3379,
              },
              "metadata": undefined,
              "name": "con",
            },
            Object {
              "dataType": "Identity",
              "defaultValue": undefined,
              "doc": "The Ice object identity.",
              "location": Object {
                "end": 3475,
                "start": 3463,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 3544,
                "start": 3531,
              },
              "metadata": undefined,
              "name": "facet",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The operation name.",
              "location": Object {
                "end": 3625,
                "start": 3608,
              },
              "metadata": undefined,
              "name": "operation",
            },
            Object {
              "dataType": "OperationMode",
              "defaultValue": undefined,
              "doc": "The mode of the operation.",
              "location": Object {
                "end": 3715,
                "start": 3696,
              },
              "metadata": undefined,
              "name": "mode",
            },
            Object {
              "dataType": "Context",
              "defaultValue": undefined,
              "doc": "The request context, as received from the client.",
              "location": Object {
                "end": 3821,
                "start": 3809,
              },
              "metadata": undefined,
              "name": "ctx",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The request id unless oneway (0) or collocated (-1).",
              "location": Object {
                "end": 3932,
                "start": 3918,
              },
              "metadata": undefined,
              "name": "requestId",
            },
            Object {
              "dataType": "EncodingVersion",
              "defaultValue": undefined,
              "doc": "The encoding version used to encode the input and output parameters.",
              "location": Object {
                "end": 4070,
                "start": 4045,
              },
              "metadata": undefined,
              "name": "encoding",
            },
          ],
          "local": true,
          "location": Object {
            "end": 4072,
            "start": 3038,
          },
          "metadata": undefined,
          "name": "Current",
          "type": "struct",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 4075,
        "start": 470,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Endpoint.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Version",
    "Ice/BuiltinSequences",
    "Ice/EndpointF",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies TCP endpoints.",
          "location": Object {
            "end": 561,
            "start": 529,
          },
          "name": "TCPEndpointType",
          "type": "const",
          "value": "1",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies SSL endpoints.",
          "location": Object {
            "end": 648,
            "start": 616,
          },
          "name": "SSLEndpointType",
          "type": "const",
          "value": "2",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies UDP endpoints.",
          "location": Object {
            "end": 735,
            "start": 703,
          },
          "name": "UDPEndpointType",
          "type": "const",
          "value": "3",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies TCP-based WebSocket endpoints.",
          "location": Object {
            "end": 837,
            "start": 806,
          },
          "name": "WSEndpointType",
          "type": "const",
          "value": "4",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies SSL-based WebSocket endpoints.",
          "location": Object {
            "end": 940,
            "start": 908,
          },
          "name": "WSSEndpointType",
          "type": "const",
          "value": "5",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies Bluetooth endpoints.",
          "location": Object {
            "end": 1032,
            "start": 1001,
          },
          "name": "BTEndpointType",
          "type": "const",
          "value": "6",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies SSL Bluetooth endpoints.",
          "location": Object {
            "end": 1129,
            "start": 1097,
          },
          "name": "BTSEndpointType",
          "type": "const",
          "value": "7",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies iAP-based endpoints.",
          "location": Object {
            "end": 1222,
            "start": 1190,
          },
          "name": "iAPEndpointType",
          "type": "const",
          "value": "8",
        },
        Object {
          "dataType": "short",
          "doc": "Uniquely identifies SSL iAP-based endpoints.",
          "location": Object {
            "end": 1320,
            "start": 1287,
          },
          "name": "iAPSEndpointType",
          "type": "const",
          "value": "9",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "EndpointInfo",
              "defaultValue": undefined,
              "doc": "The information of the underyling endpoint of null if there's
no underlying endpoint.",
              "location": Object {
                "end": 1637,
                "start": 1613,
              },
              "metadata": undefined,
              "name": "underlying",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The timeout for the endpoint in milliseconds. 0 means
non-blocking, -1 means no timeout.",
              "location": Object {
                "end": 1789,
                "start": 1777,
              },
              "metadata": undefined,
              "name": "timeout",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1944,
                "start": 1930,
              },
              "metadata": undefined,
              "name": "compress",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "doc": "Returns the type of the endpoint.

@return The endpoint type.",
              "idempotent": undefined,
              "location": Object {
                "end": 2106,
                "start": 2063,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "type",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "short",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns true if this endpoint is a datagram endpoint.

@return True for a datagram endpoint.",
              "idempotent": undefined,
              "location": Object {
                "end": 2302,
                "start": 2256,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "datagram",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns true if this endpoint is a secure endpoint.

@return True for a secure endpoint.",
              "idempotent": undefined,
              "location": Object {
                "end": 2492,
                "start": 2448,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "secure",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "Base class providing access to the endpoint details.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2494,
            "start": 1451,
          },
          "metadata": undefined,
          "name": "EndpointInfo",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Return a string representation of the endpoint.

@return The string representation of the endpoint.",
              "idempotent": undefined,
              "location": Object {
                "end": 2821,
                "start": 2773,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "toString",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns the endpoint information.

@return The endpoint information class.",
              "idempotent": undefined,
              "location": Object {
                "end": 3006,
                "start": 2953,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getInfo",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "EndpointInfo",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The user-level interface to an endpoint.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 3008,
            "start": 2555,
          },
          "metadata": Array [
            "cpp:comparable",
            "js:comparable",
          ],
          "name": "Endpoint",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The host or address configured with the endpoint.",
              "location": Object {
                "end": 3259,
                "start": 3247,
              },
              "metadata": undefined,
              "name": "host",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The port number.",
              "location": Object {
                "end": 3329,
                "start": 3320,
              },
              "metadata": undefined,
              "name": "port",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 3416,
                "start": 3395,
              },
              "metadata": undefined,
              "name": "sourceAddress",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the address details of a IP endpoint.

@see Endpoint",
          "extends": "EndpointInfo",
          "local": true,
          "location": Object {
            "end": 3418,
            "start": 3105,
          },
          "metadata": undefined,
          "name": "IPEndpointInfo",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": "Provides access to a TCP endpoint information.

@see Endpoint",
          "extends": "IPEndpointInfo",
          "local": true,
          "location": Object {
            "end": 3559,
            "start": 3505,
          },
          "metadata": undefined,
          "name": "TCPEndpointInfo",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The multicast interface.",
              "location": Object {
                "end": 3789,
                "start": 3767,
              },
              "metadata": undefined,
              "name": "mcastInterface",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The multicast time-to-live (or hops).",
              "location": Object {
                "end": 3885,
                "start": 3872,
              },
              "metadata": undefined,
              "name": "mcastTtl",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to an UDP endpoint information.

@see Endpoint",
          "extends": "IPEndpointInfo",
          "local": true,
          "location": Object {
            "end": 3887,
            "start": 3647,
          },
          "metadata": undefined,
          "name": "UDPEndpointInfo",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The URI configured with the endpoint.",
              "location": Object {
                "end": 4106,
                "start": 4090,
              },
              "metadata": undefined,
              "name": "resource",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to a WebSocket endpoint information.",
          "extends": "EndpointInfo",
          "local": true,
          "location": Object {
            "end": 4108,
            "start": 3960,
          },
          "metadata": undefined,
          "name": "WSEndpointInfo",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "EncodingVersion",
              "defaultValue": undefined,
              "doc": "The encoding version of the opaque endpoint (to decode or
encode the rawBytes).",
              "location": Object {
                "end": 4413,
                "start": 4385,
              },
              "metadata": undefined,
              "name": "rawEncoding",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "ByteSeq",
              "defaultValue": undefined,
              "doc": "The raw encoding of the opaque endpoint.",
              "location": Object {
                "end": 4515,
                "start": 4498,
              },
              "metadata": undefined,
              "name": "rawBytes",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the details of an opaque endpoint.

@see Endpoint",
          "extends": "EndpointInfo",
          "local": true,
          "location": Object {
            "end": 4517,
            "start": 4202,
          },
          "metadata": undefined,
          "name": "OpaqueEndpointInfo",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 4528,
        "start": 442,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/EndpointF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 408,
            "start": 383,
          },
          "name": "EndpointInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 436,
            "start": 409,
          },
          "name": "IPEndpointInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 465,
            "start": 437,
          },
          "name": "TCPEndpointInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 494,
            "start": 466,
          },
          "name": "UDPEndpointInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 522,
            "start": 495,
          },
          "name": "WSEndpointInfo",
          "type": "classForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 548,
            "start": 523,
          },
          "name": "Endpoint",
          "type": "interfaceForward",
        },
        Object {
          "dataType": "Endpoint",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of endpoints.",
          "local": true,
          "location": Object {
            "end": 630,
            "start": 593,
          },
          "metadata": undefined,
          "name": "EndpointSeq",
          "type": "sequence",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 633,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/EndpointTypes.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "Determines the order in which the Ice run time uses the endpoints
in a proxy when establishing a connection.",
          "enums": Array [
            Object {
              "doc": undefined,
              "location": Object {
                "end": 656,
                "start": 650,
              },
              "name": "Random",
              "value": undefined,
            },
            Object {
              "doc": undefined,
              "location": Object {
                "end": 806,
                "start": 799,
              },
              "name": "Ordered",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 808,
            "start": 513,
          },
          "metadata": undefined,
          "name": "EndpointSelectionType",
          "type": "enum",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 811,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/FacetMap.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A mapping from facet name to servant.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": true,
          "location": Object {
            "end": 481,
            "start": 439,
          },
          "metadata": undefined,
          "name": "FacetMap",
          "type": "dictionary",
          "valueType": "Object",
          "valueTypeMetadata": undefined,
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 484,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Identity.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "The identity of an Ice object. In a proxy, an empty {@link Identity#name} denotes a nil
proxy. An identity with an empty {@link Identity#name} and a non-empty {@link Identity#category}
is illegal. You cannot add a servant with an empty name to the Active Servant Map.

@see ServantLocator
@see ObjectAdapter#addServantLocator",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the Ice object.",
              "location": Object {
                "end": 841,
                "start": 829,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The Ice object category.",
              "location": Object {
                "end": 926,
                "start": 910,
              },
              "metadata": undefined,
              "name": "category",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 928,
            "start": 741,
          },
          "metadata": undefined,
          "name": "Identity",
          "type": "struct",
        },
        Object {
          "doc": undefined,
          "keyType": "Identity",
          "keyTypeMetadata": undefined,
          "local": true,
          "location": Object {
            "end": 1112,
            "start": 1066,
          },
          "metadata": undefined,
          "name": "ObjectDict",
          "type": "dictionary",
          "valueType": "Object",
          "valueTypeMetadata": undefined,
        },
        Object {
          "dataType": "Identity",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of identities.",
          "local": undefined,
          "location": Object {
            "end": 1196,
            "start": 1165,
          },
          "metadata": undefined,
          "name": "IdentitySeq",
          "type": "sequence",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1199,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ImplicitContext.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/LocalException",
    "Ice/Current",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Get a copy of the underlying context.
@return A copy of the underlying context.",
              "idempotent": undefined,
              "location": Object {
                "end": 1795,
                "start": 1760,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getContext",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Context",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set the underlying context.

@param newContext The new context.",
              "idempotent": undefined,
              "location": Object {
                "end": 1945,
                "start": 1909,
              },
              "metadata": undefined,
              "name": "setContext",
              "parameters": Array [
                Object {
                  "dataType": "Context",
                  "location": Object {
                    "end": 1943,
                    "start": 1925,
                  },
                  "metadata": undefined,
                  "name": "newContext",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Check if this key has an associated value in the underlying context.

@param key The key.

@return True if the key has an associated value, False otherwise.",
              "idempotent": undefined,
              "location": Object {
                "end": 2208,
                "start": 2165,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "containsKey",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2206,
                    "start": 2196,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the value associated with the given key in the underlying context.
Returns an empty string if no value is associated with the key.
{@link #containsKey} allows you to distinguish between an empty-string value and
no value at all.

@param key The key.

@return The value associated with the key.",
              "idempotent": undefined,
              "location": Object {
                "end": 2627,
                "start": 2590,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "get",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2625,
                    "start": 2615,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create or update a key/value entry in the underlying context.

@param key The key.

@param value The value.

@return The previous value associated with the key, if any.",
              "idempotent": undefined,
              "location": Object {
                "end": 2910,
                "start": 2872,
              },
              "metadata": undefined,
              "name": "put",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2893,
                    "start": 2883,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2908,
                    "start": 2895,
                  },
                  "metadata": undefined,
                  "name": "value",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove the entry for the given key in the underlying context.

@param key The key.

@return The value associated with the key, if any.",
              "idempotent": undefined,
              "location": Object {
                "end": 3134,
                "start": 3108,
              },
              "metadata": undefined,
              "name": "remove",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3132,
                    "start": 3122,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An interface to associate implict contexts with communicators.

When you make a remote invocation without an explicit context parameter,
Ice uses the per-proxy context (if any) combined with the <code>ImplicitContext</code>
associated with the communicator.

Ice provides several implementations of <code>ImplicitContext</code>. The implementation
used depends on the value of the <code>Ice.ImplicitContext</code> property.
<dl>
<dt><code>None</code> (default)</dt>
<dd>No implicit context at all.</dd>
<dt><code>PerThread</code></dt>
<dd>The implementation maintains a context per thread.</dd>
<dt><code>Shared</code></dt>
<dd>The implementation maintains a single context shared by all threads.</dd>
</dl>

<code>ImplicitContext</code> also provides a number of operations to create, update or retrieve
an entry in the underlying context without first retrieving a copy of the entire
context. These operations correspond to a subset of the <code>java.util.Map</code> methods,
with <code>java.lang.Object</code> replaced by <code>string</code> and null replaced by the empty-string.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 3136,
            "start": 1604,
          },
          "metadata": undefined,
          "name": "ImplicitContext",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 3138,
        "start": 411,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ImplicitContextF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "ice-prefix",
    "cpp:header-ext:h",
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "objc:header-dir:objc",
    "objc:dll-export:ICE_API",
    "python:pkgdir:Ice",
    "js:module:ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 414,
            "start": 382,
          },
          "name": "ImplicitContext",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 417,
        "start": 348,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Instrumentation.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/EndpointF",
    "Ice/ConnectionF",
    "Ice/Current",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "content": Array [
                Object {
                  "doc": "This method is called when the instrumented object is created
or when the observer is attached to an existing object.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 1008,
                    "start": 994,
                  },
                  "metadata": undefined,
                  "name": "attach",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "This method is called when the instrumented object is destroyed
and as a result the observer detached from the object.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 1192,
                    "start": 1178,
                  },
                  "metadata": undefined,
                  "name": "detach",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Notification of a failure.

@param exceptionName The name of the exception.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 1359,
                    "start": 1325,
                  },
                  "metadata": undefined,
                  "name": "failed",
                  "parameters": Array [
                    Object {
                      "dataType": "string",
                      "location": Object {
                        "end": 1357,
                        "start": 1337,
                      },
                      "metadata": undefined,
                      "name": "exceptionName",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The object observer interface used by instrumented objects to
notify the observer of their existence.",
              "extends": undefined,
              "local": true,
              "location": Object {
                "end": 1361,
                "start": 800,
              },
              "metadata": undefined,
              "name": "Observer",
              "type": "interface",
            },
            Object {
              "doc": "The thread state enumeration keeps track of the different possible
states of Ice threads.",
              "enums": Array [
                Object {
                  "doc": "The thread is idle.",
                  "location": Object {
                    "end": 1576,
                    "start": 1561,
                  },
                  "name": "ThreadStateIdle",
                  "value": undefined,
                },
                Object {
                  "doc": "The thread is in use performing reads or writes for Ice
connections. This state is only for threads from an Ice thread
pool.",
                  "location": Object {
                    "end": 1781,
                    "start": 1760,
                  },
                  "name": "ThreadStateInUseForIO",
                  "value": undefined,
                },
                Object {
                  "doc": "The thread is calling user code (servant implementation, AMI
callbacks). This state is only for threads from an Ice thread
pool.",
                  "location": Object {
                    "end": 1992,
                    "start": 1969,
                  },
                  "name": "ThreadStateInUseForUser",
                  "value": undefined,
                },
                Object {
                  "doc": "The thread is performing other internal activities (DNS
lookups, timer callbacks, etc).",
                  "location": Object {
                    "end": 2156,
                    "start": 2132,
                  },
                  "name": "ThreadStateInUseForOther",
                  "value": undefined,
                },
              ],
              "location": Object {
                "end": 2159,
                "start": 1474,
              },
              "metadata": undefined,
              "name": "ThreadState",
              "type": "enum",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "Notification of thread state change.

@param oldState The previous thread state.

@param newState The new thread state.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 2628,
                    "start": 2566,
                  },
                  "metadata": undefined,
                  "name": "stateChanged",
                  "parameters": Array [
                    Object {
                      "dataType": "ThreadState",
                      "location": Object {
                        "end": 2604,
                        "start": 2584,
                      },
                      "metadata": undefined,
                      "name": "oldState",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "ThreadState",
                      "location": Object {
                        "end": 2626,
                        "start": 2606,
                      },
                      "metadata": undefined,
                      "name": "newState",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The thread observer interface to instrument Ice threads. This can
be threads from the Ice thread pool or utility threads used by the
Ice core.",
              "extends": Array [
                "Observer",
              ],
              "local": true,
              "location": Object {
                "end": 2630,
                "start": 2328,
              },
              "metadata": undefined,
              "name": "ThreadObserver",
              "type": "interface",
            },
            Object {
              "doc": "The state of an Ice connection.",
              "enums": Array [
                Object {
                  "doc": "The connection is being validated.",
                  "location": Object {
                    "end": 2813,
                    "start": 2788,
                  },
                  "name": "ConnectionStateValidating",
                  "value": undefined,
                },
                Object {
                  "doc": "The connection is holding the reception of new messages.",
                  "location": Object {
                    "end": 2937,
                    "start": 2915,
                  },
                  "name": "ConnectionStateHolding",
                  "value": undefined,
                },
                Object {
                  "doc": "The connection is active and can send and receive messages.",
                  "location": Object {
                    "end": 3063,
                    "start": 3042,
                  },
                  "name": "ConnectionStateActive",
                  "value": undefined,
                },
                Object {
                  "doc": "The connection is being gracefully shutdown and waits for the
peer to close its end of the connection.",
                  "location": Object {
                    "end": 3240,
                    "start": 3218,
                  },
                  "name": "ConnectionStateClosing",
                  "value": undefined,
                },
                Object {
                  "doc": "The connection is closed and waits for potential dispatch to be
finished before being destroyed and detached from the observer.",
                  "location": Object {
                    "end": 3441,
                    "start": 3420,
                  },
                  "name": "ConnectionStateClosed",
                  "value": undefined,
                },
              ],
              "location": Object {
                "end": 3443,
                "start": 2682,
              },
              "metadata": undefined,
              "name": "ConnectionState",
              "type": "enum",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "Notification of sent bytes over the connection.

@param num The number of bytes sent.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 3747,
                    "start": 3723,
                  },
                  "metadata": undefined,
                  "name": "sentBytes",
                  "parameters": Array [
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 3745,
                        "start": 3738,
                      },
                      "metadata": undefined,
                      "name": "num",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Notification of received bytes over the connection.

@param num The number of bytes received.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 3926,
                    "start": 3898,
                  },
                  "metadata": undefined,
                  "name": "receivedBytes",
                  "parameters": Array [
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 3924,
                        "start": 3917,
                      },
                      "metadata": undefined,
                      "name": "num",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The connection observer interface to instrument Ice connections.",
              "extends": Array [
                "Observer",
              ],
              "local": true,
              "location": Object {
                "end": 3928,
                "start": 3528,
              },
              "metadata": undefined,
              "name": "ConnectionObserver",
              "type": "interface",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "Notification of a user exception.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 4151,
                    "start": 4130,
                  },
                  "metadata": undefined,
                  "name": "userException",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Reply notification.

@param size The size of the reply.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 4285,
                    "start": 4264,
                  },
                  "metadata": undefined,
                  "name": "reply",
                  "parameters": Array [
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 4283,
                        "start": 4275,
                      },
                      "metadata": undefined,
                      "name": "size",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The dispatch observer to instrument servant dispatch.",
              "extends": Array [
                "Observer",
              ],
              "local": true,
              "location": Object {
                "end": 4287,
                "start": 4002,
              },
              "metadata": undefined,
              "name": "DispatchObserver",
              "type": "interface",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "Reply notification.

@param size The size of the reply.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 4579,
                    "start": 4558,
                  },
                  "metadata": undefined,
                  "name": "reply",
                  "parameters": Array [
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 4577,
                        "start": 4569,
                      },
                      "metadata": undefined,
                      "name": "size",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The child invocation observer to instrument remote or collocated
invocations.",
              "extends": Array [
                "Observer",
              ],
              "local": true,
              "location": Object {
                "end": 4581,
                "start": 4388,
              },
              "metadata": undefined,
              "name": "ChildInvocationObserver",
              "type": "interface",
            },
            Object {
              "content": Array [],
              "doc": "The remote observer to instrument invocations that are sent over
the wire.",
              "extends": Array [
                "ChildInvocationObserver",
              ],
              "local": true,
              "location": Object {
                "end": 4745,
                "start": 4679,
              },
              "metadata": undefined,
              "name": "RemoteObserver",
              "type": "interface",
            },
            Object {
              "content": Array [],
              "doc": "The collocated observer to instrument invocations that are
collocated.",
              "extends": Array [
                "ChildInvocationObserver",
              ],
              "local": true,
              "location": Object {
                "end": 4909,
                "start": 4839,
              },
              "metadata": undefined,
              "name": "CollocatedObserver",
              "type": "interface",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "Notification of the invocation being retried.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 5325,
                    "start": 5310,
                  },
                  "metadata": undefined,
                  "name": "retried",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Notification of a user exception.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 5424,
                    "start": 5403,
                  },
                  "metadata": undefined,
                  "name": "userException",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Get a remote observer for this invocation.

@param con The connection information.

@param endpt The connection endpoint.

@param requestId The ID of the invocation.

@param size The size of the invocation.

@return The observer to instrument the remote invocation.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 5893,
                    "start": 5799,
                  },
                  "metadata": undefined,
                  "name": "getRemoteObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "ConnectionInfo",
                      "location": Object {
                        "end": 5850,
                        "start": 5832,
                      },
                      "metadata": undefined,
                      "name": "con",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "Endpoint",
                      "location": Object {
                        "end": 5866,
                        "start": 5852,
                      },
                      "metadata": undefined,
                      "name": "endpt",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 5881,
                        "start": 5868,
                      },
                      "metadata": undefined,
                      "name": "requestId",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 5891,
                        "start": 5883,
                      },
                      "metadata": undefined,
                      "name": "size",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "RemoteObserver",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Get a collocated observer for this invocation.

@param adapter The object adapter hosting the collocated Ice object.

@param requestId The ID of the invocation.

@param size The size of the invocation.

@return The observer to instrument the collocated invocation.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 6343,
                    "start": 6254,
                  },
                  "metadata": undefined,
                  "name": "getCollocatedObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "ObjectAdapter",
                      "location": Object {
                        "end": 6316,
                        "start": 6295,
                      },
                      "metadata": undefined,
                      "name": "adapter",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 6331,
                        "start": 6318,
                      },
                      "metadata": undefined,
                      "name": "requestId",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 6341,
                        "start": 6333,
                      },
                      "metadata": undefined,
                      "name": "size",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "CollocatedObserver",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The invocation observer to instrument invocations on proxies. A
proxy invocation can either result in a collocated or remote
invocation. If it results in a remote invocation, a sub-observer is
requested for the remote invocation.",
              "extends": Array [
                "Observer",
              ],
              "local": true,
              "location": Object {
                "end": 6345,
                "start": 5168,
              },
              "metadata": undefined,
              "name": "InvocationObserver",
              "type": "interface",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "Update connection observers associated with each of the Ice
connection from the communicator and its object adapters.

When called, this method goes through all the connections and
for each connection {@link CommunicatorObserver#getConnectionObserver}
is called. The implementation of getConnectionObserver has the
possibility to return an updated observer if necessary.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 7430,
                    "start": 7397,
                  },
                  "metadata": undefined,
                  "name": "updateConnectionObservers",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "Update thread observers associated with each of the Ice thread
from the communicator and its object adapters.

When called, this method goes through all the threads and for
each thread {@link CommunicatorObserver#getThreadObserver} is
called. The implementation of getThreadObserver has the
possibility to return an updated observer if necessary.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 7891,
                    "start": 7862,
                  },
                  "metadata": undefined,
                  "name": "updateThreadObservers",
                  "parameters": Array [],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The observer updater interface. This interface is implemented by
the Ice run-time and an instance of this interface is provided by
the Ice communicator on initialization to the {@link
CommunicatorObserver} object set with the communicator
initialization data. The Ice communicator calls {@link
CommunicatorObserver#setObserverUpdater} to provide the observer
updater.

This interface can be used by add-ins implementing the {@link
CommunicatorObserver} interface to update the observers of
connections and threads.",
              "extends": undefined,
              "local": true,
              "location": Object {
                "end": 7893,
                "start": 6909,
              },
              "metadata": undefined,
              "name": "ObserverUpdater",
              "type": "interface",
            },
            Object {
              "content": Array [
                Object {
                  "doc": "This method should return an observer for the given endpoint
information and connector. The Ice run-time calls this method
for each connection establishment attempt.

@param endpt The endpoint.

@param connector The description of the connector. For IP
transports, this is typically the IP address to connect to.

@return The observer to instrument the connection establishment.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 8875,
                    "start": 8797,
                  },
                  "metadata": undefined,
                  "name": "getConnectionEstablishmentObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "Endpoint",
                      "location": Object {
                        "end": 8855,
                        "start": 8841,
                      },
                      "metadata": undefined,
                      "name": "endpt",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "string",
                      "location": Object {
                        "end": 8873,
                        "start": 8857,
                      },
                      "metadata": undefined,
                      "name": "connector",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "Observer",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "This method should return an observer for the given endpoint
information. The Ice run-time calls this method to resolve an
endpoint and obtain the list of connectors.

For IP endpoints, this typically involves doing a DNS lookup to
obtain the IP addresses associated with the DNS name.

@param endpt The endpoint.

@return The observer to instrument the endpoint lookup.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 9401,
                    "start": 9350,
                  },
                  "metadata": undefined,
                  "name": "getEndpointLookupObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "Endpoint",
                      "location": Object {
                        "end": 9399,
                        "start": 9385,
                      },
                      "metadata": undefined,
                      "name": "endpt",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "Observer",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "This method should return a connection observer for the given
connection. The Ice run-time calls this method for each new
connection and for all the Ice communicator connections when
{@link ObserverUpdater#updateConnectionObservers} is called.

@param c The connection information.

@param e The connection endpoint.

@param s The state of the connection.

@param o The old connection observer if one is already set or a
null reference otherwise.

@return The connection observer to instrument the connection.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 10160,
                    "start": 10048,
                  },
                  "metadata": undefined,
                  "name": "getConnectionObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "ConnectionInfo",
                      "location": Object {
                        "end": 10105,
                        "start": 10089,
                      },
                      "metadata": undefined,
                      "name": "c",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "Endpoint",
                      "location": Object {
                        "end": 10117,
                        "start": 10107,
                      },
                      "metadata": undefined,
                      "name": "e",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "ConnectionState",
                      "location": Object {
                        "end": 10136,
                        "start": 10119,
                      },
                      "metadata": undefined,
                      "name": "s",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "ConnectionObserver",
                      "location": Object {
                        "end": 10158,
                        "start": 10138,
                      },
                      "metadata": undefined,
                      "name": "o",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "ConnectionObserver",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "This method should return a thread observer for the given
thread. The Ice run-time calls this method for each new thread
and for all the Ice communicator threads when
{@link ObserverUpdater#updateThreadObservers} is called.

@param parent The parent of the thread.

@param id The ID of the thread to observe.

@param s The state of the thread.

@param o The old thread observer if one is already set or a
null reference otherwise.

@return The thread observer to instrument the thread.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 10875,
                    "start": 10783,
                  },
                  "metadata": undefined,
                  "name": "getThreadObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "string",
                      "location": Object {
                        "end": 10829,
                        "start": 10816,
                      },
                      "metadata": undefined,
                      "name": "parent",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "string",
                      "location": Object {
                        "end": 10840,
                        "start": 10831,
                      },
                      "metadata": undefined,
                      "name": "id",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "ThreadState",
                      "location": Object {
                        "end": 10855,
                        "start": 10842,
                      },
                      "metadata": undefined,
                      "name": "s",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "ThreadObserver",
                      "location": Object {
                        "end": 10873,
                        "start": 10857,
                      },
                      "metadata": undefined,
                      "name": "o",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "ThreadObserver",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "This method should return an invocation observer for the given
invocation. The Ice run-time calls this method for each new
invocation on a proxy.

@param prx The proxy used for the invocation.

@param operation The name of the invocation.

@param ctx The context specified by the user.

@return The invocation observer to instrument the invocation.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 11419,
                    "start": 11334,
                  },
                  "metadata": undefined,
                  "name": "getInvocationObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "Object*",
                      "location": Object {
                        "end": 11386,
                        "start": 11375,
                      },
                      "metadata": undefined,
                      "name": "prx",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "string",
                      "location": Object {
                        "end": 11404,
                        "start": 11388,
                      },
                      "metadata": undefined,
                      "name": "operation",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "Context",
                      "location": Object {
                        "end": 11417,
                        "start": 11406,
                      },
                      "metadata": undefined,
                      "name": "ctx",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "InvocationObserver",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "This method should return a dispatch observer for the given
dispatch. The Ice run-time calls this method each time it
receives an incoming invocation to be dispatched for an Ice
object.

@param c The current object as provided to the Ice servant
dispatching the invocation.

@param size The size of the dispatch.

@return The dispatch observer to instrument the dispatch.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 11960,
                    "start": 11902,
                  },
                  "metadata": undefined,
                  "name": "getDispatchObserver",
                  "parameters": Array [
                    Object {
                      "dataType": "Current",
                      "location": Object {
                        "end": 11948,
                        "start": 11939,
                      },
                      "metadata": undefined,
                      "name": "c",
                      "optional": undefined,
                      "out": undefined,
                    },
                    Object {
                      "dataType": "int",
                      "location": Object {
                        "end": 11958,
                        "start": 11950,
                      },
                      "metadata": undefined,
                      "name": "size",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "DispatchObserver",
                  "throws": undefined,
                  "type": "operation",
                },
                Object {
                  "doc": "The Ice run-time calls this method when the communicator is
initialized. The add-in implementing this interface can use
this object to get the Ice run-time to re-obtain observers for
observed objects.

@param updater The observer updater object.",
                  "idempotent": undefined,
                  "location": Object {
                    "end": 12333,
                    "start": 12284,
                  },
                  "metadata": undefined,
                  "name": "setObserverUpdater",
                  "parameters": Array [
                    Object {
                      "dataType": "ObserverUpdater",
                      "location": Object {
                        "end": 12331,
                        "start": 12308,
                      },
                      "metadata": undefined,
                      "name": "updater",
                      "optional": undefined,
                      "out": undefined,
                    },
                  ],
                  "returnOptional": undefined,
                  "returnType": "void",
                  "throws": undefined,
                  "type": "operation",
                },
              ],
              "doc": "The communicator observer interface used by the Ice run-time to
obtain and update observers for its observable objects. This
interface should be implemented by add-ins that wish to observe Ice
objects in order to collect statistics. An instance of this
interface can be provided to the Ice run-time through the Ice
communicator initialization data.",
              "extends": undefined,
              "local": true,
              "location": Object {
                "end": 12335,
                "start": 8277,
              },
              "metadata": undefined,
              "name": "CommunicatorObserver",
              "type": "interface",
            },
          ],
          "doc": "The Instrumentation local interfaces enable observing a number of
Ice core internal components (threads, connections, etc).",
          "location": Object {
            "end": 12338,
            "start": 616,
          },
          "metadata": Array [
            "objc:prefix:ICEINSTRUMENTATION",
          ],
          "name": "Instrumentation",
          "type": "module",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 12341,
        "start": 437,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/InstrumentationF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": undefined,
              "extends": undefined,
              "local": true,
              "location": Object {
                "end": 469,
                "start": 444,
              },
              "name": "Observer",
              "type": "interfaceForward",
            },
            Object {
              "doc": undefined,
              "extends": undefined,
              "local": true,
              "location": Object {
                "end": 507,
                "start": 470,
              },
              "name": "CommunicatorObserver",
              "type": "interfaceForward",
            },
          ],
          "doc": undefined,
          "location": Object {
            "end": 510,
            "start": 383,
          },
          "metadata": Array [
            "objc:prefix:ICEINSTRUMENTATION",
          ],
          "name": "Instrumentation",
          "type": "module",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 513,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/LocalException.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
    "Ice/Version",
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 707,
                "start": 693,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised when a failure occurs during initialization.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 709,
            "start": 563,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "InitializationException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 961,
                "start": 947,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that a failure occurred while initializing
a plug-in.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 963,
            "start": 811,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "PluginInitializationException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if a feature is requested that is not
supported with collocation optimization.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1226,
            "start": 1090,
          },
          "metadata": Array [
            "cpp:ice_print",
            "deprecate:This exception is no longer used by the Ice run time",
          ],
          "name": "CollocationOptimizationException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The kind of object that could not be removed: \\"servant\\", \\"facet\\",
\\"object\\", \\"default servant\\", \\"servant locator\\", \\"value factory\\", \\"plugin\\",
\\"object adapter\\", \\"object adapter with router\\", \\"replica group\\".",
              "location": Object {
                "end": 1889,
                "start": 1869,
              },
              "metadata": undefined,
              "name": "kindOfObject",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The ID (or name) of the object that is registered already.",
              "location": Object {
                "end": 2002,
                "start": 1992,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "An attempt was made to register something more than once with
the Ice run time.

This exception is raised if an attempt is made to register a
servant, servant locator, facet, value factory, plug-in, object
adapter, object, or user exception factory more than once for the
same ID.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2004,
            "start": 1544,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "AlreadyRegisteredException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The kind of object that could not be removed: \\"servant\\", \\"facet\\",
\\"object\\", \\"default servant\\", \\"servant locator\\", \\"value factory\\", \\"plugin\\",
\\"object adapter\\", \\"object adapter with router\\", \\"replica group\\".",
              "location": Object {
                "end": 2853,
                "start": 2833,
              },
              "metadata": undefined,
              "name": "kindOfObject",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The ID (or name) of the object that could not be removed.",
              "location": Object {
                "end": 2965,
                "start": 2955,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "An attempt was made to find or deregister something that is not
registered with the Ice run time or Ice locator.

This exception is raised if an attempt is made to remove a servant,
servant locator, facet, value factory, plug-in, object adapter,
object, or user exception factory that is not currently registered.

It's also raised if the Ice locator can't find an object or object
adapter when resolving an indirect proxy or when an object adapter
is activated.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2967,
            "start": 2512,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "NotRegisteredException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the operation that was invoked.",
              "location": Object {
                "end": 3494,
                "start": 3477,
              },
              "metadata": undefined,
              "name": "operation",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "The operation can only be invoked with a twoway request.

This exception is raised if an attempt is made to invoke an
operation with <code>ice_oneway</code>, <code>ice_batchOneway</code>, <code>ice_datagram</code>,
or <code>ice_batchDatagram</code> and the operation has a return value,
out-parameters, or an exception specification.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 3496,
            "start": 3335,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "TwowayOnlyException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "An attempt was made to clone a class that does not support
cloning.

This exception is raised if <code>ice_clone</code> is called on
a class that is derived from an abstract Slice class (that is,
a class containing operations), and the derived class does not
provide an implementation of the <code>ice_clone</code> operation (C++ only).",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 3936,
            "start": 3870,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "CloneNotImplementedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "This field is set to the textual representation of the unknown
exception if available.",
              "location": Object {
                "end": 4460,
                "start": 4445,
              },
              "metadata": undefined,
              "name": "unknown",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an operation call on a server raises an
unknown exception. For example, for C++, this exception is raised
if the server throws a C++ exception that is not directly or
indirectly derived from <code>Ice::LocalException</code> or
<code>Ice::UserException</code>.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 4462,
            "start": 4256,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnknownException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if an operation call on a server raises a
local exception. Because local exceptions are not transmitted by
the Ice protocol, the client receives all local exceptions raised
by the server as {@link UnknownLocalException}. The only exception to this
rule are all exceptions derived from {@link RequestFailedException},
which are transmitted by the Ice protocol even though they are
declared <code>local</code>.",
          "extends": "UnknownException",
          "local": true,
          "location": Object {
            "end": 5018,
            "start": 4934,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnknownLocalException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "An operation raised an incorrect user exception.

This exception is raised if an operation raises a
user exception that is not declared in the exception's
<code>throws</code> clause. Such undeclared exceptions are
not transmitted from the server to the client by the Ice
protocol, but instead the client just gets an
{@link UnknownUserException}. This is necessary in order to not violate
the contract established by an operation's signature: Only local
exceptions and user exceptions declared in the
<code>throws</code> clause can be raised.",
          "extends": "UnknownException",
          "local": true,
          "location": Object {
            "end": 5693,
            "start": 5610,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnknownUserException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if the Ice library version does not match
the version in the Ice header files.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 5882,
            "start": 5820,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "VersionMismatchException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if the {@link Communicator} has been destroyed.

@see Communicator#destroy",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 6075,
            "start": 6007,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "CommunicatorDestroyedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Name of the adapter.",
              "location": Object {
                "end": 6400,
                "start": 6388,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an attempt is made to use a deactivated
{@link ObjectAdapter}.

@see ObjectAdapter#deactivate
@see Communicator#shutdown",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 6402,
            "start": 6255,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ObjectAdapterDeactivatedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Adapter ID.",
              "location": Object {
                "end": 6742,
                "start": 6732,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an {@link ObjectAdapter} cannot be activated.

This happens if the {@link Locator} detects another active {@link ObjectAdapter} with
the same adapter id.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 6744,
            "start": 6612,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ObjectAdapterIdInUseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The stringified proxy for which no suitable endpoint is
available.",
              "location": Object {
                "end": 7012,
                "start": 6999,
              },
              "metadata": undefined,
              "name": "proxy",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if no suitable endpoint is available.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 7014,
            "start": 6827,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "NoEndpointException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Describes the failure and includes the string that could not be parsed.",
              "location": Object {
                "end": 7295,
                "start": 7284,
              },
              "metadata": undefined,
              "name": "str",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if there was an error while parsing an
endpoint.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 7297,
            "start": 7111,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "EndpointParseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Describes the failure and includes the string that could not be parsed.",
              "location": Object {
                "end": 7606,
                "start": 7595,
              },
              "metadata": undefined,
              "name": "str",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if there was an error while parsing an
endpoint selection type.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 7608,
            "start": 7409,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "EndpointSelectionTypeParseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Describes the failure and includes the string that could not be parsed.",
              "location": Object {
                "end": 7886,
                "start": 7875,
              },
              "metadata": undefined,
              "name": "str",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if there was an error while parsing a
version.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 7888,
            "start": 7703,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "VersionParseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Describes the failure and includes the string that could not be parsed.",
              "location": Object {
                "end": 8180,
                "start": 8169,
              },
              "metadata": undefined,
              "name": "str",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if there was an error while parsing a
stringified identity.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 8182,
            "start": 7996,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "IdentityParseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Describes the failure and includes the string that could not be parsed.",
              "location": Object {
                "end": 8468,
                "start": 8457,
              },
              "metadata": undefined,
              "name": "str",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if there was an error while parsing a
stringified proxy.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 8470,
            "start": 8287,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ProxyParseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "Identity",
              "defaultValue": undefined,
              "doc": "The illegal identity.",
              "location": Object {
                "end": 8691,
                "start": 8679,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an illegal identity is encountered.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 8693,
            "start": 8554,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "IllegalIdentityException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Describes why this servant is illegal.",
              "location": Object {
                "end": 8952,
                "start": 8938,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised to reject an illegal servant (typically
a null servant)",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 8954,
            "start": 8797,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "IllegalServantException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "Identity",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 9344,
                "start": 9332,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 9415,
                "start": 9402,
              },
              "metadata": undefined,
              "name": "facet",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 9484,
                "start": 9467,
              },
              "metadata": undefined,
              "name": "operation",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a request failed. This exception, and
all exceptions derived from {@link RequestFailedException}, are
transmitted by the Ice protocol, even though they are declared
<code>local</code>.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 9486,
            "start": 9196,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "RequestFailedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if an object does not exist on the server,
that is, if no facets with the given identity exist.",
          "extends": "RequestFailedException",
          "local": true,
          "location": Object {
            "end": 9722,
            "start": 9630,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ObjectNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if no facet with the given name exists,
but at least one facet with the given identity exists.",
          "extends": "RequestFailedException",
          "local": true,
          "location": Object {
            "end": 9956,
            "start": 9865,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "FacetNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if an operation for a given object does
not exist on the server. Typically this is caused by either the
client or the server using an outdated Slice specification.",
          "extends": "RequestFailedException",
          "local": true,
          "location": Object {
            "end": 10266,
            "start": 10171,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "OperationNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The error number describing the system exception. For C++ and
Unix, this is equivalent to <code>errno</code>. For C++
and Windows, this is the value returned by
<code>GetLastError()</code> or
<code>WSAGetLastError()</code>.",
              "location": Object {
                "end": 10879,
                "start": 10865,
              },
              "metadata": undefined,
              "name": "error",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a system error occurred in the server
or client process. There are many possible causes for such a system
exception. For details on the cause, {@link SyscallException#error}
should be inspected.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 10930,
            "start": 10518,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "SyscallException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates socket errors.",
          "extends": "SyscallException",
          "local": true,
          "location": Object {
            "end": 11068,
            "start": 10990,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "SocketException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The domain of the error.",
              "location": Object {
                "end": 11291,
                "start": 11277,
              },
              "metadata": undefined,
              "name": "domain",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates CFNetwork errors.",
          "extends": "SocketException",
          "local": true,
          "location": Object {
            "end": 11293,
            "start": 11131,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "CFNetworkException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 11501,
                "start": 11489,
              },
              "metadata": undefined,
              "name": "path",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates file errors.",
          "extends": "SyscallException",
          "local": true,
          "location": Object {
            "end": 11503,
            "start": 11351,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "FileException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates connection failures.",
          "extends": "SocketException",
          "local": true,
          "location": Object {
            "end": 11653,
            "start": 11569,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectFailedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a connection failure for which
the server host actively refuses a connection.",
          "extends": "ConnectFailedException",
          "local": true,
          "location": Object {
            "end": 11874,
            "start": 11779,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectionRefusedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a lost connection.",
          "extends": "SocketException",
          "local": true,
          "location": Object {
            "end": 12023,
            "start": 11938,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectionLostException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The error number describing the DNS problem. For C++ and Unix,
this is equivalent to <code>h_errno</code>. For C++ and
Windows, this is the value returned by
<code>WSAGetLastError()</code>.",
              "location": Object {
                "end": 12476,
                "start": 12462,
              },
              "metadata": undefined,
              "name": "error",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The host name that could not be resolved.",
              "location": Object {
                "end": 12627,
                "start": 12615,
              },
              "metadata": undefined,
              "name": "host",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates a DNS problem. For details on the cause,
{@link DNSException#error} should be inspected.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 12629,
            "start": 12160,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "DNSException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a request was interrupted.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 12768,
            "start": 12701,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "OperationInterruptedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a timeout condition.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 12888,
            "start": 12834,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "TimeoutException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a connection establishment timeout condition.",
          "extends": "TimeoutException",
          "local": true,
          "location": Object {
            "end": 13065,
            "start": 12979,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectTimeoutException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a connection closure timeout condition.",
          "extends": "TimeoutException",
          "local": true,
          "location": Object {
            "end": 13234,
            "start": 13150,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "CloseTimeoutException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that a connection has been shut down because it has been
idle for some time.",
          "extends": "TimeoutException",
          "local": true,
          "location": Object {
            "end": 13448,
            "start": 13359,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectionTimeoutException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that an invocation failed because it timed
out.",
          "extends": "TimeoutException",
          "local": true,
          "location": Object {
            "end": 13633,
            "start": 13544,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "InvocationTimeoutException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that an asynchronous invocation failed
because it was canceled explicitly by the user.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 13833,
            "start": 13768,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "InvocationCanceledException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 14063,
                "start": 14049,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "A generic exception base for all kinds of protocol error
conditions.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 14065,
            "start": 13925,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ProtocolException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "ByteSeq",
              "defaultValue": undefined,
              "doc": "A sequence containing the first four bytes of the incorrect message.",
              "location": Object {
                "end": 14403,
                "start": 14386,
              },
              "metadata": undefined,
              "name": "badMagic",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that a message did not start with the expected
magic number ('I', 'c', 'e', 'P').",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 14405,
            "start": 14195,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "BadMagicException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "ProtocolVersion",
              "defaultValue": undefined,
              "doc": "The version of the unsupported protocol.",
              "location": Object {
                "end": 14677,
                "start": 14657,
              },
              "metadata": undefined,
              "name": "bad",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "ProtocolVersion",
              "defaultValue": undefined,
              "doc": "The version of the protocol that is supported.",
              "location": Object {
                "end": 14794,
                "start": 14768,
              },
              "metadata": undefined,
              "name": "supported",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates an unsupported protocol version.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 14796,
            "start": 14483,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnsupportedProtocolException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "EncodingVersion",
              "defaultValue": undefined,
              "doc": "The version of the unsupported encoding.",
              "location": Object {
                "end": 15073,
                "start": 15053,
              },
              "metadata": undefined,
              "name": "bad",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "EncodingVersion",
              "defaultValue": undefined,
              "doc": "The version of the encoding that is supported.",
              "location": Object {
                "end": 15190,
                "start": 15164,
              },
              "metadata": undefined,
              "name": "supported",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates an unsupported data encoding version.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 15192,
            "start": 14879,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnsupportedEncodingException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that an unknown protocol message has been received.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 15376,
            "start": 15289,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnknownMessageException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if a message is received over a connection
that is not yet validated.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 15589,
            "start": 15494,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectionNotValidatedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that a response for an unknown request ID has been
received.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 15787,
            "start": 15698,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnknownRequestIdException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that an unknown reply status has been received.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 15971,
            "start": 15880,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnknownReplyStatusException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that the connection has been gracefully shut down by the
server. The operation call that caused this exception has not been
executed by the server. In most cases you will not get this
exception, because the client will automatically retry the
operation call in case the server shut down the connection. However,
if upon retry the server shuts down the connection again, and the
retry limit has been reached, then this exception is propagated to
the application code.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 16592,
            "start": 16504,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "CloseConnectionException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 16933,
                "start": 16919,
              },
              "metadata": undefined,
              "name": "graceful",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised by an operation call if the application
closes the connection locally using {@link Connection#close}.

@see Connection#close",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 16935,
            "start": 16770,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ConnectionManuallyClosedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that a message size is less
than the minimum required size.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 17134,
            "start": 17043,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "IllegalMessageSizeException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a problem with compressing or uncompressing data.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 17313,
            "start": 17229,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "CompressionException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "A datagram exceeds the configured size.

This exception is raised if a datagram exceeds the configured send or receive buffer
size, or exceeds the maximum payload size of a UDP packet (65507 bytes).",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 17626,
            "start": 17540,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "DatagramLimitException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised for errors during marshaling or unmarshaling data.",
          "extends": "ProtocolException",
          "local": true,
          "location": Object {
            "end": 17802,
            "start": 17722,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "MarshalException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if inconsistent data is received while unmarshaling a proxy.",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 17994,
            "start": 17908,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ProxyUnmarshalException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if an out-of-bounds condition occurs during unmarshaling.",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 18189,
            "start": 18097,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnmarshalOutOfBoundsException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The Slice type ID of the class instance for which no
no factory could be found.",
              "location": Object {
                "end": 18682,
                "start": 18670,
              },
              "metadata": undefined,
              "name": "type",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if no suitable value factory was found during
unmarshaling of a Slice class instance.

@see ValueFactory
@see Communicator#getValueFactoryManager
@see ValueFactoryManager#add
@see ValueFactoryManager#find",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 18684,
            "start": 18456,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "NoValueFactoryException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The Slice type ID of the class instance that was unmarshaled.",
              "location": Object {
                "end": 19353,
                "start": 19341,
              },
              "metadata": undefined,
              "name": "type",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The Slice type ID that was expected by the receiving operation.",
              "location": Object {
                "end": 19481,
                "start": 19461,
              },
              "metadata": undefined,
              "name": "expectedType",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if the type of an unmarshaled Slice class instance does
not match its expected type.
This can happen if client and server are compiled with mismatched Slice
definitions or if a class of the wrong type is passed as a parameter
or return value using dynamic invocation. This exception can also be
raised if IceStorm is used to send Slice class instances and
an operation is subscribed to the wrong topic.",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 19483,
            "start": 19150,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "UnexpectedObjectException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised when Ice receives a request or reply
message whose size exceeds the limit specified by the
<code>Ice.MessageSizeMax</code> property.",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 19750,
            "start": 19667,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "MemoryLimitException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised when a string conversion to or from UTF-8
fails during marshaling or unmarshaling.",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 19969,
            "start": 19881,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "StringConversionException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates a malformed data encapsulation.",
          "extends": "MarshalException",
          "local": true,
          "location": Object {
            "end": 20131,
            "start": 20046,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "EncapsulationException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the unsupported feature.",
              "location": Object {
                "end": 20463,
                "start": 20437,
              },
              "metadata": undefined,
              "name": "unsupportedFeature",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an unsupported feature is used. The
unsupported feature string contains the name of the unsupported
feature",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 20465,
            "start": 20293,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "FeatureNotSupportedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 20714,
                "start": 20700,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates a failure in a security subsystem,
such as the IceSSL plug-in.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 20716,
            "start": 20576,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "SecurityException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that an attempt has been made to
change the connection properties of a fixed proxy.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 20905,
            "start": 20848,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "FixedProxyException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "Indicates that the response to a request has already been sent;
re-dispatching such a request is not possible.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 21098,
            "start": 21039,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "ResponseSentException",
          "type": "exception",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 21101,
        "start": 441,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Locator.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
    "Ice/Process",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [],
          "doc": "This exception is raised if an adapter cannot be found.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 551,
            "start": 513,
          },
          "metadata": undefined,
          "name": "AdapterNotFoundException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if the replica group provided by the
server is invalid.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 699,
            "start": 655,
          },
          "metadata": undefined,
          "name": "InvalidReplicaGroupIdException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if a server tries to set endpoints for
an adapter that is already active.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 864,
            "start": 821,
          },
          "metadata": undefined,
          "name": "AdapterAlreadyActiveException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if an object cannot be found.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 976,
            "start": 939,
          },
          "metadata": undefined,
          "name": "ObjectNotFoundException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if a server cannot be found.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1087,
            "start": 1050,
          },
          "metadata": undefined,
          "name": "ServerNotFoundException",
          "type": "exception",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1115,
            "start": 1089,
          },
          "name": "LocatorRegistry",
          "type": "interfaceForward",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Find an object by identity and return a proxy that contains
the adapter ID or endpoints which can be used to access the
object.

@param id The identity.

@return The proxy, or null if the object is not active.

@throws ObjectNotFoundException Raised if the object cannot
be found.",
              "idempotent": true,
              "location": Object {
                "end": 2044,
                "start": 1922,
              },
              "metadata": Array [
                "amd",
                "nonmutating",
                "cpp:const",
              ],
              "name": "findObjectById",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 2003,
                    "start": 1992,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "ObjectNotFoundException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Find an adapter by id and return a proxy that contains
its endpoints.

@param id The adapter id.

@return The adapter proxy, or null if the adapter is not active.

@throws AdapterNotFoundException Raised if the adapter cannot be
found.",
              "idempotent": true,
              "location": Object {
                "end": 2499,
                "start": 2377,
              },
              "metadata": Array [
                "amd",
                "nonmutating",
                "cpp:const",
              ],
              "name": "findAdapterById",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2457,
                    "start": 2448,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "AdapterNotFoundException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the locator registry.

@return The locator registry.",
              "idempotent": true,
              "location": Object {
                "end": 2684,
                "start": 2613,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getRegistry",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "LocatorRegistry*",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Ice locator interface. This interface is used by clients to
lookup adapters and objects. It is also used by servers to get the
locator registry proxy.

<p class=\\"Note\\">The {@link Locator} interface is intended to be used by
Ice internals and by locator implementations. Regular user code
should not attempt to use any functionality of this interface
directly.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2686,
            "start": 1519,
          },
          "metadata": undefined,
          "name": "Locator",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Set the adapter endpoints with the locator registry.

@param id The adapter id.

@param proxy The adapter proxy (a dummy direct proxy created
by the adapter). The direct proxy contains the adapter
endpoints.

@throws AdapterNotFoundException Raised if the adapter cannot
be found, or if the locator only allows
registered adapters to set their active proxy and the
adapter is not registered with the locator.

@throws AdapterAlreadyActiveException Raised if an adapter with the same
id is already active.",
              "idempotent": true,
              "location": Object {
                "end": 3871,
                "start": 3728,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "setAdapterDirectProxy",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3783,
                    "start": 3774,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 3798,
                    "start": 3785,
                  },
                  "metadata": undefined,
                  "name": "proxy",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AdapterNotFoundException",
                "AdapterAlreadyActiveException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Set the adapter endpoints with the locator registry.

@param adapterId The adapter id.

@param replicaGroupId The replica group id.

@param p The adapter proxy (a dummy direct proxy created
by the adapter). The direct proxy contains the adapter
endpoints.

@throws AdapterNotFoundException Raised if the adapter cannot
be found, or if the locator only allows registered adapters to
set their active proxy and the adapter is not registered with
the locator.

@throws AdapterAlreadyActiveException Raised if an adapter with the same
id is already active.

@throws InvalidReplicaGroupIdException Raised if the given
replica group doesn't match the one registered with the
locator registry for this object adapter.",
              "idempotent": true,
              "location": Object {
                "end": 4971,
                "start": 4760,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "setReplicatedAdapterDirectProxy",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4832,
                    "start": 4816,
                  },
                  "metadata": undefined,
                  "name": "adapterId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4855,
                    "start": 4834,
                  },
                  "metadata": undefined,
                  "name": "replicaGroupId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 4866,
                    "start": 4857,
                  },
                  "metadata": undefined,
                  "name": "p",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AdapterNotFoundException",
                "AdapterAlreadyActiveException",
                "InvalidReplicaGroupIdException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Set the process proxy for a server.

@param id The server id.

@param proxy The process proxy.

@throws ServerNotFoundException Raised if the server cannot
be found.",
              "idempotent": true,
              "location": Object {
                "end": 5339,
                "start": 5227,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "setServerProcessProxy",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5282,
                    "start": 5273,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Process*",
                  "location": Object {
                    "end": 5298,
                    "start": 5284,
                  },
                  "metadata": undefined,
                  "name": "proxy",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ServerNotFoundException",
              ],
              "type": "operation",
            },
          ],
          "doc": "The Ice locator registry interface. This interface is used by
servers to register adapter endpoints with the locator.

<p class=\\"Note\\"> The {@link LocatorRegistry} interface is intended to be used
by Ice internals and by locator implementations. Regular user
code should not attempt to use any functionality of this interface
directly.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5341,
            "start": 3059,
          },
          "metadata": undefined,
          "name": "LocatorRegistry",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the locator proxy implemented by the process hosting this
finder object. The proxy might point to several replicas.

@return The locator proxy.",
              "idempotent": undefined,
              "location": Object {
                "end": 5907,
                "start": 5885,
              },
              "metadata": undefined,
              "name": "getLocator",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Locator*",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This inferface should be implemented by services implementing the
Ice::Locator interface. It should be advertised through an Ice
object with the identity \`Ice/LocatorFinder'. This allows clients
to retrieve the locator proxy with just the endpoint information of
the service.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5909,
            "start": 5649,
          },
          "metadata": undefined,
          "name": "LocatorFinder",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 5912,
        "start": 405,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/LocatorF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 401,
            "start": 383,
          },
          "name": "Locator",
          "type": "interfaceForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 428,
            "start": 402,
          },
          "name": "LocatorRegistry",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 431,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Logger.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Print a message. The message is printed literally, without
any decorations such as executable name or time stamp.

@param message The message to log.",
              "idempotent": undefined,
              "location": Object {
                "end": 795,
                "start": 768,
              },
              "metadata": undefined,
              "name": "print",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 793,
                    "start": 779,
                  },
                  "metadata": undefined,
                  "name": "message",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Log a trace message.

@param category The trace category.

@param message The trace message to log.",
              "idempotent": undefined,
              "location": Object {
                "end": 1009,
                "start": 965,
              },
              "metadata": undefined,
              "name": "trace",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 991,
                    "start": 976,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1007,
                    "start": 993,
                  },
                  "metadata": undefined,
                  "name": "message",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Log a warning message.

@param message The warning message to log.

@see #error",
              "idempotent": undefined,
              "location": Object {
                "end": 1188,
                "start": 1159,
              },
              "metadata": undefined,
              "name": "warning",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1186,
                    "start": 1172,
                  },
                  "metadata": undefined,
                  "name": "message",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Log an error message.

@param message The error message to log.

@see #warning",
              "idempotent": undefined,
              "location": Object {
                "end": 1364,
                "start": 1337,
              },
              "metadata": undefined,
              "name": "error",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1362,
                    "start": 1348,
                  },
                  "metadata": undefined,
                  "name": "message",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns this logger's prefix.

@return The prefix.",
              "idempotent": undefined,
              "location": Object {
                "end": 1491,
                "start": 1472,
              },
              "metadata": undefined,
              "name": "getPrefix",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 1714,
                "start": 1676,
              },
              "metadata": undefined,
              "name": "cloneWithPrefix",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1712,
                    "start": 1699,
                  },
                  "metadata": undefined,
                  "name": "prefix",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Logger",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Ice message logger. Applications can provide their own logger
by implementing this interface and installing it in a communicator.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1716,
            "start": 538,
          },
          "metadata": undefined,
          "name": "Logger",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1719,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/LoggerF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 406,
            "start": 383,
          },
          "name": "Logger",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 409,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Metrics.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A dictionnary of strings to integers.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 700,
            "start": 662,
          },
          "metadata": undefined,
          "name": "StringIntDict",
          "type": "dictionary",
          "valueType": "int",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The metrics identifier.",
              "location": Object {
                "end": 932,
                "start": 922,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The total number of objects that were observed by this metrics.",
              "location": Object {
                "end": 1055,
                "start": 1040,
              },
              "metadata": undefined,
              "name": "total",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The current number of objects observed by this metrics.",
              "location": Object {
                "end": 1171,
                "start": 1155,
              },
              "metadata": undefined,
              "name": "current",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The sum of the lifetime of each observed objects. This does not
include the lifetime of objects which are currently observed.",
              "location": Object {
                "end": 1371,
                "start": 1348,
              },
              "metadata": undefined,
              "name": "totalLifetime",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of failures observed.",
              "location": Object {
                "end": 1465,
                "start": 1448,
              },
              "metadata": undefined,
              "name": "failures",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "The base class for metrics. A metrics object represents a
collection of measurements associated to a given a system.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1467,
            "start": 840,
          },
          "metadata": undefined,
          "name": "Metrics",
          "type": "class",
        },
        Object {
          "doc": "A structure to keep track of failures associated with a given
metrics.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The identifier of the metrics object associated to the
failures.",
              "location": Object {
                "end": 1710,
                "start": 1700,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "StringIntDict",
              "defaultValue": undefined,
              "doc": "The failures observed for this metrics.",
              "location": Object {
                "end": 1817,
                "start": 1794,
              },
              "metadata": undefined,
              "name": "failures",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1819,
            "start": 1561,
          },
          "metadata": undefined,
          "name": "MetricsFailures",
          "type": "struct",
        },
        Object {
          "dataType": "MetricsFailures",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of {@link MetricsFailures}.",
          "local": undefined,
          "location": Object {
            "end": 1923,
            "start": 1878,
          },
          "metadata": undefined,
          "name": "MetricsFailuresSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "Metrics",
          "dataTypeMetadata": undefined,
          "doc": "A metrics map is a sequence of metrics. We use a sequence here
instead of a map because the ID of the metrics is already included
in the Metrics class and using sequences of metrics objects is more
efficient than using dictionaries since lookup is not necessary.",
          "local": undefined,
          "location": Object {
            "end": 2244,
            "start": 2215,
          },
          "metadata": undefined,
          "name": "MetricsMap",
          "type": "sequence",
        },
        Object {
          "doc": "A metrics view is a dictionary of metrics map. The key of the
dictionary is the name of the metrics map.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 2415,
            "start": 2372,
          },
          "metadata": undefined,
          "name": "MetricsView",
          "type": "dictionary",
          "valueType": "MetricsMap",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [],
          "doc": "Raised if a metrics view cannot be found.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2509,
            "start": 2477,
          },
          "metadata": undefined,
          "name": "UnknownMetricsView",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the names of enabled and disabled metrics.

@param disabledViews The names of the disabled views.

@return The name of the enabled views.",
              "idempotent": undefined,
              "location": Object {
                "end": 3072,
                "start": 3003,
              },
              "metadata": undefined,
              "name": "getMetricsViewNames",
              "parameters": Array [
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 3070,
                    "start": 3038,
                  },
                  "metadata": undefined,
                  "name": "disabledViews",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Enables a metrics view.

@param name The metrics view name.

@throws UnknownMetricsView Raised if the metrics view cannot be
found.",
              "idempotent": undefined,
              "location": Object {
                "end": 3351,
                "start": 3281,
              },
              "metadata": undefined,
              "name": "enableMetricsView",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3315,
                    "start": 3304,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "UnknownMetricsView",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Disable a metrics view.

@param name The metrics view name.

@throws UnknownMetricsView Raised if the metrics view cannot be
found.",
              "idempotent": undefined,
              "location": Object {
                "end": 3631,
                "start": 3560,
              },
              "metadata": undefined,
              "name": "disableMetricsView",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3595,
                    "start": 3584,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "UnknownMetricsView",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the metrics objects for the given metrics view. This
returns a dictionnary of metric maps for each metrics class
configured with the view. The timestamp allows the client to
compute averages which are not dependent of the invocation
latency for this operation.

@param view The name of the metrics view.

@param timestamp The local time of the process when the metrics
object were retrieved.

@return The metrics view data.

@throws UnknownMetricsView Raised if the metrics view cannot be
found.",
              "idempotent": undefined,
              "location": Object {
                "end": 4363,
                "start": 4269,
              },
              "metadata": undefined,
              "name": "getMetricsView",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4307,
                    "start": 4296,
                  },
                  "metadata": undefined,
                  "name": "view",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "long",
                  "location": Object {
                    "end": 4327,
                    "start": 4309,
                  },
                  "metadata": undefined,
                  "name": "timestamp",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "MetricsView",
              "throws": Array [
                "UnknownMetricsView",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the metrics failures associated with the given view and map.

@param view The name of the metrics view.

@param map The name of the metrics map.

@return The metrics failures associated with the map.

@throws UnknownMetricsView Raised if the metrics view cannot be
found.",
              "idempotent": undefined,
              "location": Object {
                "end": 4842,
                "start": 4742,
              },
              "metadata": undefined,
              "name": "getMapMetricsFailures",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4794,
                    "start": 4783,
                  },
                  "metadata": undefined,
                  "name": "view",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4806,
                    "start": 4796,
                  },
                  "metadata": undefined,
                  "name": "map",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "MetricsFailuresSeq",
              "throws": Array [
                "UnknownMetricsView",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the metrics failure associated for the given metrics.

@param view The name of the metrics view.

@param map The name of the metrics map.

@param id The ID of the metrics.

@return The metrics failures associated with the metrics.

@throws UnknownMetricsView Raised if the metrics view cannot be
found.",
              "idempotent": undefined,
              "location": Object {
                "end": 5370,
                "start": 5265,
              },
              "metadata": undefined,
              "name": "getMetricsFailures",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5311,
                    "start": 5300,
                  },
                  "metadata": undefined,
                  "name": "view",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5323,
                    "start": 5313,
                  },
                  "metadata": undefined,
                  "name": "map",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5334,
                    "start": 5325,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "MetricsFailures",
              "throws": Array [
                "UnknownMetricsView",
              ],
              "type": "operation",
            },
          ],
          "doc": "The metrics administrative facet interface. This interface allows
remote administrative clients to access metrics of an application
that enabled the Ice administrative facility and configured some
metrics views.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5372,
            "start": 2750,
          },
          "metadata": Array [
            "format:sliced",
          ],
          "name": "MetricsAdmin",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of threads which are currently performing socket
read or writes.",
              "location": Object {
                "end": 5660,
                "start": 5641,
              },
              "metadata": undefined,
              "name": "inUseForIO",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of threads which are currently calling user code
(servant dispatch, AMI callbacks, etc).",
              "location": Object {
                "end": 5832,
                "start": 5811,
              },
              "metadata": undefined,
              "name": "inUseForUser",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of threads which are currently performing other
activities. These are all other that are not counted with
{@link #inUseForUser} or {@link #inUseForIO}, such as DNS
lookups, garbage collection).",
              "location": Object {
                "end": 6124,
                "start": 6102,
              },
              "metadata": undefined,
              "name": "inUseForOther",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on the number of threads currently in use and
their activity.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 6126,
            "start": 5478,
          },
          "metadata": undefined,
          "name": "ThreadMetrics",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of dispatch that failed with a user exception.",
              "location": Object {
                "end": 6350,
                "start": 6328,
              },
              "metadata": undefined,
              "name": "userException",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The size of the dispatch. This corresponds to the size of the
marshalled input parameters.",
              "location": Object {
                "end": 6506,
                "start": 6492,
              },
              "metadata": undefined,
              "name": "size",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The size of the dispatch reply. This corresponds to the size of
the marshalled output and return parameters.",
              "location": Object {
                "end": 6685,
                "start": 6666,
              },
              "metadata": undefined,
              "name": "replySize",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on servant dispatch.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 6687,
            "start": 6188,
          },
          "metadata": undefined,
          "name": "DispatchMetrics",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The size of the invocation. This corresponds to the size of the
marshalled input parameters.",
              "location": Object {
                "end": 7185,
                "start": 7171,
              },
              "metadata": undefined,
              "name": "size",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The size of the invocation reply. This corresponds to the size
of the marshalled output and return parameters.",
              "location": Object {
                "end": 7366,
                "start": 7347,
              },
              "metadata": undefined,
              "name": "replySize",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on child invocations. A child invocation is
either remote (sent over an Ice connection) or collocated. An
invocation can have multiple child invocation if it is
retried. Child invocation metrics are embedded within {@link
InvocationMetrics}.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 7368,
            "start": 6982,
          },
          "metadata": undefined,
          "name": "ChildInvocationMetrics",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": "Provides information on invocations that are collocated. Collocated
metrics are embedded within {@link InvocationMetrics}.",
          "extends": "ChildInvocationMetrics",
          "local": undefined,
          "location": Object {
            "end": 7572,
            "start": 7514,
          },
          "metadata": undefined,
          "name": "CollocatedMetrics",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": "Provides information on invocations that are specifically sent over
Ice connections. Remote metrics are embedded within {@link InvocationMetrics}.",
          "extends": "ChildInvocationMetrics",
          "local": undefined,
          "location": Object {
            "end": 7796,
            "start": 7742,
          },
          "metadata": undefined,
          "name": "RemoteMetrics",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of retries for the invocation(s).",
              "location": Object {
                "end": 8075,
                "start": 8061,
              },
              "metadata": undefined,
              "name": "retry",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "The number of invocations that failed with a user exception.",
              "location": Object {
                "end": 8202,
                "start": 8180,
              },
              "metadata": undefined,
              "name": "userException",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "MetricsMap",
              "defaultValue": undefined,
              "doc": "The remote invocation metrics map.

@see RemoteMetrics",
              "location": Object {
                "end": 8333,
                "start": 8314,
              },
              "metadata": undefined,
              "name": "remotes",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "MetricsMap",
              "defaultValue": undefined,
              "doc": "The collocated invocation metrics map.

@see CollocatedMetrics",
              "location": Object {
                "end": 8475,
                "start": 8453,
              },
              "metadata": undefined,
              "name": "collocated",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provide measurements for proxy invocations. Proxy invocations can
either be sent over the wire or be collocated.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 8477,
            "start": 7932,
          },
          "metadata": undefined,
          "name": "InvocationMetrics",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The number of bytes received by the connection.",
              "location": Object {
                "end": 8728,
                "start": 8705,
              },
              "metadata": undefined,
              "name": "receivedBytes",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "The number of bytes sent by the connection.",
              "location": Object {
                "end": 8835,
                "start": 8816,
              },
              "metadata": undefined,
              "name": "sentBytes",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on the data sent and received over Ice
connections.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 8837,
            "start": 8573,
          },
          "metadata": undefined,
          "name": "ConnectionMetrics",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 8840,
        "start": 568,
      },
      "metadata": Array [
        "objc:prefix:ICEMX",
      ],
      "name": "IceMX",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ObjectAdapter.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/CommunicatorF",
    "Ice/ServantLocatorF",
    "Ice/Locator",
    "Ice/Identity",
    "Ice/FacetMap",
    "Ice/Endpoint",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Get the name of this object adapter.

@return This object adapter's name.",
              "idempotent": undefined,
              "location": Object {
                "end": 1092,
                "start": 1045,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getName",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the communicator this object adapter belongs to.

@return This object adapter's communicator.

@see Communicator",
              "idempotent": undefined,
              "location": Object {
                "end": 1340,
                "start": 1279,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getCommunicator",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Communicator",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Activate all endpoints that belong to this object adapter.
After activation, the object adapter can dispatch requests
received through its endpoints.

@see #hold
@see #deactivate",
              "idempotent": undefined,
              "location": Object {
                "end": 1626,
                "start": 1597,
              },
              "metadata": Array [
                "js:async",
              ],
              "name": "activate",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Temporarily hold receiving and dispatching requests. The object
adapter can be reactivated with the {@link #activate} operation.

<p class=\\"Note\\"> Holding is not immediate, i.e., after {@link #hold}
returns, the object adapter might still be active for some
time. You can use {@link #waitForHold} to wait until holding is
complete.

@see #activate
@see #deactivate
@see #waitForHold",
              "idempotent": undefined,
              "location": Object {
                "end": 2133,
                "start": 2121,
              },
              "metadata": undefined,
              "name": "hold",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Wait until the object adapter holds requests. Calling {@link #hold}
initiates holding of requests, and {@link #waitForHold} only returns
when holding of requests has been completed.

@see #hold
@see #waitForDeactivate
@see Communicator#waitForShutdown",
              "idempotent": undefined,
              "location": Object {
                "end": 2502,
                "start": 2470,
              },
              "metadata": Array [
                "js:async",
              ],
              "name": "waitForHold",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Deactivate all endpoints that belong to this object adapter.
After deactivation, the object adapter stops receiving
requests through its endpoints. Object adapters that have been
deactivated must not be reactivated again, and cannot be used
otherwise. Attempts to use a deactivated object adapter raise
{@link ObjectAdapterDeactivatedException} however, attempts to
{@link #deactivate} an already deactivated object adapter are
ignored and do nothing. Once deactivated, it is possible to
destroy the adapter to clean up resources and then create and
activate a new adapter with the same name.

<p class=\\"Note\\"> After {@link #deactivate} returns, no new requests
are processed by the object adapter. However, requests that
have been started before {@link #deactivate} was called might
still be active. You can use {@link #waitForDeactivate} to wait
for the completion of all requests for this object adapter.

@see #activate
@see #hold
@see #waitForDeactivate
@see Communicator#shutdown",
              "idempotent": undefined,
              "location": Object {
                "end": 3717,
                "start": 3670,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "deactivate",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Wait until the object adapter has deactivated. Calling
{@link #deactivate} initiates object adapter deactivation, and
{@link #waitForDeactivate} only returns when deactivation has
been completed.

@see #deactivate
@see #waitForHold
@see Communicator#waitForShutdown",
              "idempotent": undefined,
              "location": Object {
                "end": 4129,
                "start": 4075,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "waitForDeactivate",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Check whether object adapter has been deactivated.

@return Whether adapter has been deactivated.

@see Communicator#shutdown",
              "idempotent": undefined,
              "location": Object {
                "end": 4376,
                "start": 4325,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "isDeactivated",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Destroys the object adapter and cleans up all resources held by
the object adapter. If the object adapter has not yet been
deactivated, destroy implicitly initiates the deactivation
and waits for it to finish. Subsequent calls to destroy are
ignored. Once destroy has returned, it is possible to create
another object adapter with the same name.

@see #deactivate
@see #waitForDeactivate
@see Communicator#destroy",
              "idempotent": undefined,
              "location": Object {
                "end": 4940,
                "start": 4896,
              },
              "metadata": Array [
                "cpp:noexcept",
                "js:async",
              ],
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add a servant to this object adapter's Active Servant Map. Note
that one servant can implement several Ice objects by registering
the servant with multiple identities. Adding a servant with an
identity that is in the map already throws {@link AlreadyRegisteredException}.

@param servant The servant to add.

@param id The identity of the Ice object that is implemented by
the servant.

@return A proxy that matches the given identity and this object
adapter.

@see Identity
@see #addFacet
@see #addWithUUID
@see #remove
@see #find",
              "idempotent": undefined,
              "location": Object {
                "end": 5696,
                "start": 5631,
              },
              "metadata": undefined,
              "name": "add",
              "parameters": Array [
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 5657,
                    "start": 5643,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 5694,
                    "start": 5659,
                  },
                  "metadata": Array [
                    "objc:param:identity",
                  ],
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Like {@link #add}, but with a facet. Calling <code>add(servant, id)</code>
is equivalent to calling {@link #addFacet} with an empty facet.

@param servant The servant to add.

@param id The identity of the Ice object that is implemented by
the servant.

@param facet The facet. An empty facet means the default facet.

@return A proxy that matches the given identity, facet, and
this object adapter.

@see Identity
@see #add
@see #addFacetWithUUID
@see #removeFacet
@see #findFacet",
              "idempotent": undefined,
              "location": Object {
                "end": 6420,
                "start": 6336,
              },
              "metadata": undefined,
              "name": "addFacet",
              "parameters": Array [
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 6367,
                    "start": 6353,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 6404,
                    "start": 6369,
                  },
                  "metadata": Array [
                    "objc:param:identity",
                  ],
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 6418,
                    "start": 6406,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add a servant to this object adapter's Active Servant Map,
using an automatically generated UUID as its identity. Note that
the generated UUID identity can be accessed using the proxy's
<code>ice_getIdentity</code> operation.

@param servant The servant to add.

@return A proxy that matches the generated UUID identity and
this object adapter.

@see Identity
@see #add
@see #addFacetWithUUID
@see #remove
@see #find",
              "idempotent": undefined,
              "location": Object {
                "end": 7012,
                "start": 6976,
              },
              "metadata": undefined,
              "name": "addWithUUID",
              "parameters": Array [
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 7010,
                    "start": 6996,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Like {@link #addWithUUID}, but with a facet. Calling
<code>addWithUUID(servant)</code> is equivalent to calling
{@link #addFacetWithUUID} with an empty facet.

@param servant The servant to add.

@param facet The facet. An empty facet means the default
facet.

@return A proxy that matches the generated UUID identity,
facet, and this object adapter.

@see Identity
@see #addFacet
@see #addWithUUID
@see #removeFacet
@see #findFacet",
              "idempotent": undefined,
              "location": Object {
                "end": 7652,
                "start": 7597,
              },
              "metadata": undefined,
              "name": "addFacetWithUUID",
              "parameters": Array [
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 7636,
                    "start": 7622,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 7650,
                    "start": 7638,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add a default servant to handle requests for a specific
category. Adding a default servant for a category for
which a default servant is already registered throws
{@link AlreadyRegisteredException}. To dispatch operation
calls on servants, the object adapter tries to find a servant
for a given Ice object identity and facet in the following
order:

<ol>

<li>The object adapter tries to find a servant for the identity
and facet in the Active Servant Map.</li>

<li>If no servant has been found in the Active Servant Map, the
object adapter tries to find a default servant for the category
component of the identity.</li>

<li>If no servant has been found by any of the preceding steps,
the object adapter tries to find a default servant for an empty
category, regardless of the category contained in the identity.</li>

<li>If no servant has been found by any of the preceding steps,
the object adapter gives up and the caller receives
{@link ObjectNotExistException} or {@link FacetNotExistException}.</li>

</ol>

@param servant The default servant.

@param category The category for which the default servant is
registered. An empty category means it will handle all categories.

@see #removeDefaultServant
@see #findDefaultServant",
              "idempotent": undefined,
              "location": Object {
                "end": 9211,
                "start": 9155,
              },
              "metadata": undefined,
              "name": "addDefaultServant",
              "parameters": Array [
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 9192,
                    "start": 9178,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 9209,
                    "start": 9194,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove a servant (that is, the default facet) from the object
adapter's Active Servant Map.

@param id The identity of the Ice object that is implemented by
the servant. If the servant implements multiple Ice objects,
{@link #remove} has to be called for all those Ice objects.
Removing an identity that is not in the map throws
{@link NotRegisteredException}.

@return The removed servant.

@see Identity
@see #add
@see #addWithUUID",
              "idempotent": undefined,
              "location": Object {
                "end": 9804,
                "start": 9777,
              },
              "metadata": undefined,
              "name": "remove",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 9802,
                    "start": 9791,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Like {@link #remove}, but with a facet. Calling <code>remove(id)</code>
is equivalent to calling {@link #removeFacet} with an empty facet.

@param id The identity of the Ice object that is implemented by
the servant.

@param facet The facet. An empty facet means the default facet.

@return The removed servant.

@see Identity
@see #addFacet
@see #addFacetWithUUID",
              "idempotent": undefined,
              "location": Object {
                "end": 10339,
                "start": 10293,
              },
              "metadata": undefined,
              "name": "removeFacet",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 10323,
                    "start": 10312,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 10337,
                    "start": 10325,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove all facets with the given identity from the Active
Servant Map. The operation completely removes the Ice object,
including its default facet. Removing an identity that
is not in the map throws {@link NotRegisteredException}.

@param id The identity of the Ice object to be removed.

@return A collection containing all the facet names and
servants of the removed Ice object.

@see #remove
@see #removeFacet",
              "idempotent": undefined,
              "location": Object {
                "end": 10909,
                "start": 10871,
              },
              "metadata": undefined,
              "name": "removeAllFacets",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 10907,
                    "start": 10896,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FacetMap",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove the default servant for a specific category. Attempting
to remove a default servant for a category that is not
registered throws {@link NotRegisteredException}.

@param category The category of the default servant to remove.

@return The default servant.

@see #addDefaultServant
@see #findDefaultServant",
              "idempotent": undefined,
              "location": Object {
                "end": 11370,
                "start": 11325,
              },
              "metadata": undefined,
              "name": "removeDefaultServant",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 11368,
                    "start": 11353,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Look up a servant in this object adapter's Active Servant Map
by the identity of the Ice object it implements.

<p class=\\"Note\\">This operation only tries to look up a servant in
the Active Servant Map. It does not attempt to find a servant
by using any installed {@link ServantLocator}.

@param id The identity of the Ice object for which the servant
should be returned.

@return The servant that implements the Ice object with the
given identity, or null if no such servant has been found.

@see Identity
@see #findFacet
@see #findByProxy",
              "idempotent": undefined,
              "location": Object {
                "end": 12094,
                "start": 12055,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "find",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 12092,
                    "start": 12081,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Like {@link #find}, but with a facet. Calling <code>find(id)</code>
is equivalent to calling {@link #findFacet} with an empty
facet.

@param id The identity of the Ice object for which the
servant should be returned.

@param facet The facet. An empty facet means the default
facet.

@return The servant that implements the Ice object with the
given identity and facet, or null if no such servant has been
found.

@see Identity
@see #find
@see #findByProxy",
              "idempotent": undefined,
              "location": Object {
                "end": 12760,
                "start": 12702,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "findFacet",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 12744,
                    "start": 12733,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 12758,
                    "start": 12746,
                  },
                  "metadata": undefined,
                  "name": "facet",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find all facets with the given identity in the Active Servant
Map.

@param id The identity of the Ice object for which the facets
should be returned.

@return A collection containing all the facet names and
servants that have been found, or an empty map if there is no
facet for the given identity.

@see #find
@see #findFacet",
              "idempotent": undefined,
              "location": Object {
                "end": 13255,
                "start": 13205,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "findAllFacets",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 13253,
                    "start": 13242,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FacetMap",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Look up a servant in this object adapter's Active Servant Map,
given a proxy.

<p class=\\"Note\\">This operation only tries to lookup a servant in
the Active Servant Map. It does not attempt to find a servant
by using any installed {@link ServantLocator}.

@param proxy The proxy for which the servant should be returned.

@return The servant that matches the proxy, or null if no such
servant has been found.

@see #find
@see #findFacet",
              "idempotent": undefined,
              "location": Object {
                "end": 13869,
                "start": 13821,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "findByProxy",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 13867,
                    "start": 13854,
                  },
                  "metadata": undefined,
                  "name": "proxy",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add a Servant Locator to this object adapter. Adding a servant
locator for a category for which a servant locator is already
registered throws {@link AlreadyRegisteredException}. To dispatch
operation calls on servants, the object adapter tries to find a
servant for a given Ice object identity and facet in the
following order:

<ol>

<li>The object adapter tries to find a servant for the identity
and facet in the Active Servant Map.</li>

<li>If no servant has been found in the Active Servant Map,
the object adapter tries to find a servant locator for the
category component of the identity. If a locator is found, the
object adapter tries to find a servant using this locator.</li>

<li>If no servant has been found by any of the preceding steps,
the object adapter tries to find a locator for an empty category,
regardless of the category contained in the identity. If a
locator is found, the object adapter tries to find a servant
using this locator.</li>

<li>If no servant has been found by any of the preceding steps,
the object adapter gives up and the caller receives
{@link ObjectNotExistException} or {@link FacetNotExistException}.</li>

</ol>

<p class=\\"Note\\">Only one locator for the empty category can be
installed.

@param locator The locator to add.

@param category The category for which the Servant Locator can
locate servants, or an empty string if the Servant Locator does
not belong to any specific category.

@see Identity
@see #removeServantLocator
@see #findServantLocator
@see ServantLocator",
              "idempotent": undefined,
              "location": Object {
                "end": 15778,
                "start": 15714,
              },
              "metadata": undefined,
              "name": "addServantLocator",
              "parameters": Array [
                Object {
                  "dataType": "ServantLocator",
                  "location": Object {
                    "end": 15759,
                    "start": 15737,
                  },
                  "metadata": undefined,
                  "name": "locator",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 15776,
                    "start": 15761,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove a Servant Locator from this object adapter.

@param category The category for which the Servant Locator can
locate servants, or an empty string if the Servant Locator does
not belong to any specific category.

@return The Servant Locator, or throws {@link NotRegisteredException}
if no Servant Locator was found for the given category.

@see Identity
@see #addServantLocator
@see #findServantLocator
@see ServantLocator",
              "idempotent": undefined,
              "location": Object {
                "end": 16383,
                "start": 16330,
              },
              "metadata": undefined,
              "name": "removeServantLocator",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 16381,
                    "start": 16366,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ServantLocator",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find a Servant Locator installed with this object adapter.

@param category The category for which the Servant Locator can
locate servants, or an empty string if the Servant Locator does
not belong to any specific category.

@return The Servant Locator, or null if no Servant Locator was
found for the given category.

@see Identity
@see #addServantLocator
@see #removeServantLocator
@see ServantLocator",
              "idempotent": undefined,
              "location": Object {
                "end": 16977,
                "start": 16912,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "findServantLocator",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 16975,
                    "start": 16960,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ServantLocator",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find the default servant for a specific category.

@param category The category of the default servant to find.

@return The default servant or null if no default servant was
registered for the category.

@see #addDefaultServant
@see #removeDefaultServant",
              "idempotent": undefined,
              "location": Object {
                "end": 17387,
                "start": 17330,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "findDefaultServant",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 17385,
                    "start": 17370,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a proxy for the object with the given identity. If this
object adapter is configured with an adapter id, the return
value is an indirect proxy that refers to the adapter id. If
a replica group id is also defined, the return value is an
indirect proxy that refers to the replica group id. Otherwise,
if no adapter id is defined, the return value is a direct
proxy containing this object adapter's published endpoints.

@param id The object's identity.

@return A proxy for the object with the given identity.

@see Identity",
              "idempotent": undefined,
              "location": Object {
                "end": 18089,
                "start": 18042,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "createProxy",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 18087,
                    "start": 18076,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a direct proxy for the object with the given identity.
The returned proxy contains this object adapter's published
endpoints.

@param id The object's identity.

@return A proxy for the object with the given identity.

@see Identity",
              "idempotent": undefined,
              "location": Object {
                "end": 18478,
                "start": 18425,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "createDirectProxy",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 18476,
                    "start": 18465,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create an indirect proxy for the object with the given identity.
If this object adapter is configured with an adapter id, the
return value refers to the adapter id. Otherwise, the return
value contains only the object identity.

@param id The object's identity.

@return A proxy for the object with the given identity.

@see Identity",
              "idempotent": undefined,
              "location": Object {
                "end": 18971,
                "start": 18916,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "createIndirectProxy",
              "parameters": Array [
                Object {
                  "dataType": "Identity",
                  "location": Object {
                    "end": 18969,
                    "start": 18958,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set an Ice locator for this object adapter. By doing so, the
object adapter will register itself with the locator registry
when it is activated for the first time. Furthermore, the proxies
created by this object adapter will contain the adapter identifier
instead of its endpoints. The adapter identifier must be configured
using the AdapterId property.

@param loc The locator used by this object adapter.

@see #createDirectProxy
@see Locator
@see LocatorRegistry",
              "idempotent": undefined,
              "location": Object {
                "end": 19579,
                "start": 19549,
              },
              "metadata": undefined,
              "name": "setLocator",
              "parameters": Array [
                Object {
                  "dataType": "Locator*",
                  "location": Object {
                    "end": 19577,
                    "start": 19565,
                  },
                  "metadata": undefined,
                  "name": "loc",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the Ice locator used by this object adapter.

@return  The locator used by this object adapter, or null if no locator is
used by this object adapter.

@see Locator
@see #setLocator",
              "idempotent": undefined,
              "location": Object {
                "end": 19894,
                "start": 19842,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getLocator",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Locator*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the set of endpoints configured with this object adapter.

@return The set of endpoints.

@see Endpoint",
              "idempotent": undefined,
              "location": Object {
                "end": 20129,
                "start": 20072,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getEndpoints",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "EndpointSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Refresh the set of published endpoints. The run time re-reads
the PublishedEndpoints property if it is set and re-reads the
list of local interfaces if the adapter is configured to listen
on all endpoints. This operation is useful to refresh the endpoint
information that is published in the proxies that are created by
an object adapter if the network interfaces used by a host changes.",
              "idempotent": undefined,
              "location": Object {
                "end": 20635,
                "start": 20589,
              },
              "metadata": Array [
                "js:async",
              ],
              "name": "refreshPublishedEndpoints",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the set of endpoints that proxies created by this object
adapter will contain.

@return The set of published endpoints.

@see #refreshPublishedEndpoints
@see Endpoint",
              "idempotent": undefined,
              "location": Object {
                "end": 20956,
                "start": 20890,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "getPublishedEndpoints",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "EndpointSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set of the endpoints that proxies created by this object
adapter will contain.

@param newEndpoints The new set of endpoints that the object adapter will embed in proxies.

@see #refreshPublishedEndpoints
@see Endpoint",
              "idempotent": undefined,
              "location": Object {
                "end": 21312,
                "start": 21259,
              },
              "metadata": undefined,
              "name": "setPublishedEndpoints",
              "parameters": Array [
                Object {
                  "dataType": "EndpointSeq",
                  "location": Object {
                    "end": 21310,
                    "start": 21286,
                  },
                  "metadata": undefined,
                  "name": "newEndpoints",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The object adapter provides an up-call interface from the Ice
run time to the implementation of Ice objects.

The object adapter is responsible for receiving requests
from endpoints, and for mapping between servants, identities, and
proxies.

@see Communicator
@see ServantLocator",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 21314,
            "start": 884,
          },
          "metadata": undefined,
          "name": "ObjectAdapter",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 21317,
        "start": 529,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ObjectAdapterF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 413,
            "start": 383,
          },
          "name": "ObjectAdapter",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 416,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ObjectFactory.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Create a new object for a given object type. The type is the
absolute Slice type id, i.e., the id relative to the
unnamed top-level Slice module. For example, the absolute
Slice type id for interfaces of type <code>Bar</code> in the module
<code>Foo</code> is <code>\\"::Foo::Bar\\"</code>.

<p class=\\"Note\\">The leading \\"<code>::</code>\\" is required.

@param type The object type.

@return The object created for the given type, or nil if the
factory is unable to create the object.",
              "idempotent": undefined,
              "location": Object {
                "end": 1349,
                "start": 1323,
              },
              "metadata": undefined,
              "name": "create",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1347,
                    "start": 1336,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Value",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Called when the factory is removed from the communicator, or if
the communicator is destroyed.

@see Communicator#destroy",
              "idempotent": undefined,
              "location": Object {
                "end": 1550,
                "start": 1535,
              },
              "metadata": undefined,
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A factory for objects. Object factories are used when receiving \\"objects by value\\".
An object factory must be implemented by the application writer and registered
with the communicator.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1552,
            "start": 621,
          },
          "metadata": Array [
            "deprecate:ObjectFactory has been deprecated, use ValueFactory instead.",
          ],
          "name": "ObjectFactory",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1563,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Plugin.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/LoggerF",
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Perform any necessary initialization steps.",
              "idempotent": undefined,
              "location": Object {
                "end": 905,
                "start": 887,
              },
              "metadata": undefined,
              "name": "initialize",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Called when the communicator is being destroyed.",
              "idempotent": undefined,
              "location": Object {
                "end": 1013,
                "start": 998,
              },
              "metadata": undefined,
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A communicator plug-in. A plug-in generally adds a feature to a
communicator, such as support for a protocol.

The communicator loads its plug-ins in two stages: the first stage
creates the plug-ins, and the second stage invokes {@link Plugin#initialize} on
each one.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1015,
            "start": 776,
          },
          "metadata": undefined,
          "name": "Plugin",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Initialize the configured plug-ins. The communicator automatically initializes
the plug-ins by default, but an application may need to interact directly with
a plug-in prior to initialization. In this case, the application must set
<code>Ice.InitPlugins=0</code> and then invoke {@link #initializePlugins}
manually. The plug-ins are initialized in the order in which they are loaded.
If a plug-in raises an exception during initialization, the communicator
invokes destroy on the plug-ins that have already been initialized.

@throws InitializationException Raised if the plug-ins have already been initialized.",
              "idempotent": undefined,
              "location": Object {
                "end": 1879,
                "start": 1854,
              },
              "metadata": undefined,
              "name": "initializePlugins",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a list of plugins installed.

@return The names of the plugins installed.

@see #getPlugin",
              "idempotent": undefined,
              "location": Object {
                "end": 2084,
                "start": 2044,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPlugins",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Obtain a plug-in by name.

@param name The plug-in's name.

@return The plug-in.

@throws NotRegisteredException Raised if no plug-in is found with the given name.",
              "idempotent": undefined,
              "location": Object {
                "end": 2361,
                "start": 2331,
              },
              "metadata": undefined,
              "name": "getPlugin",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2359,
                    "start": 2348,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Plugin",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Install a new plug-in.

@param name The plug-in's name.

@param pi The plug-in.

@throws AlreadyRegisteredException Raised if a plug-in already exists with the given name.",
              "idempotent": undefined,
              "location": Object {
                "end": 2655,
                "start": 2616,
              },
              "metadata": undefined,
              "name": "addPlugin",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2642,
                    "start": 2631,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Plugin",
                  "location": Object {
                    "end": 2653,
                    "start": 2644,
                  },
                  "metadata": undefined,
                  "name": "pi",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Called when the communicator is being destroyed.",
              "idempotent": undefined,
              "location": Object {
                "end": 2780,
                "start": 2748,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "Each communicator has a plug-in manager to administer the set of
plug-ins.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2782,
            "start": 1113,
          },
          "metadata": undefined,
          "name": "PluginManager",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 2793,
        "start": 414,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/PluginF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 435,
            "start": 412,
          },
          "name": "Plugin",
          "type": "interfaceForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 466,
            "start": 436,
          },
          "name": "PluginManager",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 477,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Process.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Initiate a graceful shut-down.

@see Communicator#shutdown",
              "idempotent": undefined,
              "location": Object {
                "end": 975,
                "start": 959,
              },
              "metadata": undefined,
              "name": "shutdown",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Write a message on the process' stdout or stderr.

@param message The message.

@param fd 1 for stdout, 2 for stderr.",
              "idempotent": undefined,
              "location": Object {
                "end": 1205,
                "start": 1163,
              },
              "metadata": undefined,
              "name": "writeMessage",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1195,
                    "start": 1181,
                  },
                  "metadata": undefined,
                  "name": "message",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 1203,
                    "start": 1197,
                  },
                  "metadata": undefined,
                  "name": "fd",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An administrative interface for process management. Managed servers must
implement this interface.

<p class=\\"Note\\">A servant implementing this interface is a potential target
for denial-of-service attacks, therefore proper security precautions
should be taken. For example, the servant can use a UUID to make its
identity harder to guess, and be registered in an object adapter with
a secured endpoint.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1207,
            "start": 825,
          },
          "metadata": undefined,
          "name": "Process",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1210,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ProcessF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 401,
            "start": 383,
          },
          "name": "Process",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 404,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Properties.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/PropertiesAdmin",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Get a property by key. If the property is not set, an empty
string is returned.

@param key The property key.

@return The property value.

@see #setProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 1067,
                "start": 1019,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getProperty",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1065,
                    "start": 1055,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a property by key. If the property is not set, the
given default value is returned.

@param key The property key.

@param value The default value to use if the property does not
exist.

@return The property value or the default value.

@see #setProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 1509,
                "start": 1435,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPropertyWithDefault",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1492,
                    "start": 1482,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1507,
                    "start": 1494,
                  },
                  "metadata": undefined,
                  "name": "value",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a property as an integer. If the property is not set, 0
is returned.

@param key The property key.

@return The property value interpreted as an integer.

@see #setProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 1826,
                "start": 1776,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPropertyAsInt",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1824,
                    "start": 1814,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a property as an integer. If the property is not set, the
given default value is returned.

@param key The property key.

@param value The default value to use if the property does not
exist.

@return The property value interpreted as an integer, or the
default value.

@see #setProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 2308,
                "start": 2235,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPropertyAsIntWithDefault",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2294,
                    "start": 2284,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 2306,
                    "start": 2296,
                  },
                  "metadata": undefined,
                  "name": "value",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a property as a list of strings. The strings must be
separated by whitespace or comma. If the property is not set,
an empty list is returned. The strings in the list can contain
whitespace and commas if they are enclosed in single or double
quotes. If quotes are mismatched, an empty list is returned.
Within single quotes or double quotes, you can escape the
quote in question with \\\\, e.g. O'Reilly can be written as
O'Reilly, \\"O'Reilly\\" or 'O\\\\'Reilly'.

@param key The property key.

@return The property value interpreted as a list of strings.

@see #setProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 3068,
                "start": 3011,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPropertyAsList",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3066,
                    "start": 3056,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a property as a list of strings.  The strings must be
separated by whitespace or comma. If the property is not set,
the default list is returned. The strings in the list can contain
whitespace and commas if they are enclosed in single or double
quotes. If quotes are mismatched, the default list is returned.
Within single quotes or double quotes, you can escape the
quote in question with \\\\, e.g. O'Reilly can be written as
O'Reilly, \\"O'Reilly\\" or 'O\\\\'Reilly'.

@param key The property key.

@param value The default value to use if the property is not set.

@return The property value interpreted as list of strings, or the
default value.

@see #setProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 3970,
                "start": 3884,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPropertyAsListWithDefault",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3950,
                    "start": 3940,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "StringSeq",
                  "location": Object {
                    "end": 3968,
                    "start": 3952,
                  },
                  "metadata": undefined,
                  "name": "value",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get all properties whose keys begins with
<em>prefix</em>. If
<em>prefix</em> is an empty string,
then all properties are returned.

@param prefix The prefix to search for (empty string if none).
@return The matching property set.",
              "idempotent": undefined,
              "location": Object {
                "end": 4354,
                "start": 4286,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getPropertiesForPrefix",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4352,
                    "start": 4339,
                  },
                  "metadata": undefined,
                  "name": "prefix",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "PropertyDict",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set a property. To unset a property, set it to
the empty string.

@param key The property key.
@param value The property value.

@see #getProperty",
              "idempotent": undefined,
              "location": Object {
                "end": 4629,
                "start": 4585,
              },
              "metadata": undefined,
              "name": "setProperty",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4612,
                    "start": 4602,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4627,
                    "start": 4614,
                  },
                  "metadata": undefined,
                  "name": "value",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a sequence of command-line options that is equivalent to
this property set. Each element of the returned sequence is
a command-line option of the form
<code>--<em>key</em>=<em>value</em></code>.

@return The command line options for this property set.",
              "idempotent": undefined,
              "location": Object {
                "end": 5014,
                "start": 4963,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "getCommandLineOptions",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a sequence of command-line options into properties.
All options that begin with
<code>--<em>prefix</em>.</code> are
converted into properties. If the prefix is empty, all options
that begin with <code>--</code> are converted to properties.

@param prefix The property prefix, or an empty string to
convert all options starting with <code>--</code>.

@param options The command-line options.

@return The command-line options that do not start with the specified
prefix, in their original order.",
              "idempotent": undefined,
              "location": Object {
                "end": 5710,
                "start": 5642,
              },
              "metadata": undefined,
              "name": "parseCommandLineOptions",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5689,
                    "start": 5676,
                  },
                  "metadata": undefined,
                  "name": "prefix",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "StringSeq",
                  "location": Object {
                    "end": 5708,
                    "start": 5691,
                  },
                  "metadata": undefined,
                  "name": "options",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Convert a sequence of command-line options into properties.
All options that begin with one of the following prefixes
are converted into properties: <code>--Ice</code>, <code>--IceBox</code>, <code>--IceGrid</code>,
<code>--IcePatch2</code>, <code>--IceSSL</code>, <code>--IceStorm</code>, <code>--Freeze</code>, and <code>--Glacier2</code>.

@param options The command-line options.

@return The command-line options that do not start with one of
the listed prefixes, in their original order.",
              "idempotent": undefined,
              "location": Object {
                "end": 6358,
                "start": 6302,
              },
              "metadata": undefined,
              "name": "parseIceCommandLineOptions",
              "parameters": Array [
                Object {
                  "dataType": "StringSeq",
                  "location": Object {
                    "end": 6356,
                    "start": 6339,
                  },
                  "metadata": undefined,
                  "name": "options",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Load properties from a file.

@param file The property file.",
              "idempotent": undefined,
              "location": Object {
                "end": 6520,
                "start": 6497,
              },
              "metadata": undefined,
              "name": "load",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 6518,
                    "start": 6507,
                  },
                  "metadata": undefined,
                  "name": "file",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a copy of this property set.

@return A copy of this property set.",
              "idempotent": undefined,
              "location": Object {
                "end": 6694,
                "start": 6658,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "clone",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Properties",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A property set used to configure Ice and Ice applications.
Properties are key/value pairs, with both keys and values
being strings. By convention, property keys should have the form
<em>application-name</em>\\\\[.<em>category</em>\\\\[.<em>sub-category</em>]].<em>name</em>.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 6696,
            "start": 744,
          },
          "metadata": undefined,
          "name": "Properties",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 6707,
        "start": 385,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/PropertiesAdmin.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A simple collection of properties, represented as a dictionary of
key/value pairs. Both key and value are strings.

@see Properties#getPropertiesForPrefix",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 641,
            "start": 601,
          },
          "metadata": undefined,
          "name": "PropertyDict",
          "type": "dictionary",
          "valueType": "string",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get a property by key. If the property is not set, an empty
string is returned.

@param key The property key.

@return The property value.",
              "idempotent": undefined,
              "location": Object {
                "end": 1027,
                "start": 996,
              },
              "metadata": undefined,
              "name": "getProperty",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1025,
                    "start": 1015,
                  },
                  "metadata": undefined,
                  "name": "key",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get all properties whose keys begin with <em>prefix</em>. If
<em>prefix</em> is an empty string then all properties are returned.

@param prefix The prefix to search for (empty string if none).
@return The matching property set.",
              "idempotent": undefined,
              "location": Object {
                "end": 1426,
                "start": 1327,
              },
              "metadata": Array [
                "java:type:java.util.TreeMap<String, String>",
              ],
              "name": "getPropertiesForPrefix",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1424,
                    "start": 1411,
                  },
                  "metadata": undefined,
                  "name": "prefix",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "PropertyDict",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Update the communicator's properties with the given property set.

@param newProperties Properties to be added, changed, or removed.
If an entry in <em>newProperties</em> matches the name of an existing property,
that property's value is replaced with the new value. If the new value
is an empty string, the property is removed. Any existing properties
that are not modified or removed by the entries in newProperties are
retained with their original values.",
              "idempotent": undefined,
              "location": Object {
                "end": 2024,
                "start": 1977,
              },
              "metadata": undefined,
              "name": "setProperties",
              "parameters": Array [
                Object {
                  "dataType": "PropertyDict",
                  "location": Object {
                    "end": 2022,
                    "start": 1996,
                  },
                  "metadata": undefined,
                  "name": "newProperties",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The PropertiesAdmin interface provides remote access to the properties
of a communicator.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2026,
            "start": 754,
          },
          "metadata": undefined,
          "name": "PropertiesAdmin",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 2029,
        "start": 386,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/PropertiesF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 410,
            "start": 383,
          },
          "name": "Properties",
          "type": "interfaceForward",
        },
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 437,
            "start": 411,
          },
          "name": "PropertiesAdmin",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 440,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/RemoteLogger.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "cpp:include:list",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "An enumeration representing the different types of log messages.",
          "enums": Array [
            Object {
              "doc": "The {@link Logger} received a print message.",
              "location": Object {
                "end": 647,
                "start": 635,
              },
              "name": "PrintMessage",
              "value": undefined,
            },
            Object {
              "doc": "The {@link Logger} received a trace message.",
              "location": Object {
                "end": 749,
                "start": 737,
              },
              "name": "TraceMessage",
              "value": undefined,
            },
            Object {
              "doc": "The {@link Logger} received a warning message.",
              "location": Object {
                "end": 855,
                "start": 841,
              },
              "name": "WarningMessage",
              "value": undefined,
            },
            Object {
              "doc": "The {@link Logger} received an error message.",
              "location": Object {
                "end": 958,
                "start": 946,
              },
              "name": "ErrorMessage",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 960,
            "start": 526,
          },
          "metadata": undefined,
          "name": "LogMessageType",
          "type": "enum",
        },
        Object {
          "dataType": "LogMessageType",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of {@link LogMessageType}",
          "local": undefined,
          "location": Object {
            "end": 1060,
            "start": 1017,
          },
          "metadata": undefined,
          "name": "LogMessageTypeSeq",
          "type": "sequence",
        },
        Object {
          "doc": "A complete log message.",
          "fields": Array [
            Object {
              "dataType": "LogMessageType",
              "defaultValue": undefined,
              "doc": "The type of message sent to the {@link Logger}.",
              "location": Object {
                "end": 1234,
                "start": 1214,
              },
              "metadata": undefined,
              "name": "type",
            },
            Object {
              "dataType": "long",
              "defaultValue": undefined,
              "doc": "The date and time when the {@link Logger} received this message, expressed
as the number of microseconds since the Unix Epoch (00:00:00 UTC on 1 January 1970)",
              "location": Object {
                "end": 1459,
                "start": 1444,
              },
              "metadata": undefined,
              "name": "timestamp",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "For a message of type trace, the trace category of this log message;
otherwise, the empty string.",
              "location": Object {
                "end": 1629,
                "start": 1608,
              },
              "metadata": undefined,
              "name": "traceCategory",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The log message itself.",
              "location": Object {
                "end": 1713,
                "start": 1698,
              },
              "metadata": undefined,
              "name": "message",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1715,
            "start": 1104,
          },
          "metadata": undefined,
          "name": "LogMessage",
          "type": "struct",
        },
        Object {
          "dataType": "LogMessage",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of {@link LogMessage}.",
          "local": undefined,
          "location": Object {
            "end": 1839,
            "start": 1769,
          },
          "metadata": Array [
            "cpp:type:std::list<LogMessage>",
          ],
          "name": "LogMessageSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "doc": "init is called by attachRemoteLogger when a RemoteLogger proxy is attached.

@param prefix The prefix of the associated local Logger.

@param logMessages Old log messages generated before \\"now\\".",
              "idempotent": undefined,
              "location": Object {
                "end": 2371,
                "start": 2319,
              },
              "metadata": undefined,
              "name": "init",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2342,
                    "start": 2329,
                  },
                  "metadata": undefined,
                  "name": "prefix",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LogMessageSeq",
                  "location": Object {
                    "end": 2369,
                    "start": 2344,
                  },
                  "metadata": undefined,
                  "name": "logMessages",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Log a LogMessage. Note that log may be called by LoggerAdmin before init.

@param message The message to log.",
              "idempotent": undefined,
              "location": Object {
                "end": 2567,
                "start": 2538,
              },
              "metadata": undefined,
              "name": "log",
              "parameters": Array [
                Object {
                  "dataType": "LogMessage",
                  "location": Object {
                    "end": 2565,
                    "start": 2547,
                  },
                  "metadata": undefined,
                  "name": "message",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Ice remote logger interface. An application can implement a
RemoteLogger to receive the log messages sent to the local {@link Logger}
of another Ice application.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2569,
            "start": 2031,
          },
          "metadata": undefined,
          "name": "RemoteLogger",
          "type": "interface",
        },
        Object {
          "content": Array [],
          "doc": "Thrown when the provided RemoteLogger was previously attached to a LoggerAdmin.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2719,
            "start": 2669,
          },
          "metadata": undefined,
          "name": "RemoteLoggerAlreadyAttachedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Attaches a RemoteLogger object to the local logger.
attachRemoteLogger calls init on the provided RemoteLogger proxy.

@param prx A proxy to the remote logger.

@param messageTypes The list of message types that the remote logger wishes to receive.
An empty list means no filtering (send all message types).

@param traceCategories The categories of traces that the remote logger wishes to receive.
This parameter is ignored if messageTypes is not empty and does not include trace.
An empty list means no filtering (send all trace categories).

@param messageMax The maximum number of log messages (of all types) to be provided
to init. A negative value requests all messages available.

@throws RemoteLoggerAlreadyAttachedException Raised if this remote logger is already
attached to this admin object.",
              "idempotent": undefined,
              "location": Object {
                "end": 4081,
                "start": 3883,
              },
              "metadata": undefined,
              "name": "attachRemoteLogger",
              "parameters": Array [
                Object {
                  "dataType": "RemoteLogger*",
                  "location": Object {
                    "end": 3924,
                    "start": 3907,
                  },
                  "metadata": undefined,
                  "name": "prx",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LogMessageTypeSeq",
                  "location": Object {
                    "end": 3956,
                    "start": 3926,
                  },
                  "metadata": undefined,
                  "name": "messageTypes",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "StringSeq",
                  "location": Object {
                    "end": 3983,
                    "start": 3958,
                  },
                  "metadata": undefined,
                  "name": "traceCategories",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 4027,
                    "start": 4013,
                  },
                  "metadata": undefined,
                  "name": "messageMax",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "RemoteLoggerAlreadyAttachedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Detaches a RemoteLogger object from the local logger.

@param prx A proxy to the remote logger.

@return True if the provided remote logger proxy was detached, and false otherwise.",
              "idempotent": undefined,
              "location": Object {
                "end": 4375,
                "start": 4332,
              },
              "metadata": undefined,
              "name": "detachRemoteLogger",
              "parameters": Array [
                Object {
                  "dataType": "RemoteLogger*",
                  "location": Object {
                    "end": 4373,
                    "start": 4356,
                  },
                  "metadata": undefined,
                  "name": "prx",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Retrieves log messages recently logged.

@param messageTypes The list of message types that the caller wishes to receive.
An empty list means no filtering (send all message types).

@param traceCategories The categories of traces that caller wish to receive.
This parameter is ignored if messageTypes is not empty and does not include trace.
An empty list means no filtering (send all trace categories).

@param messageMax The maximum number of log messages (of all types) to be returned.
A negative value requests all messages available.

@param prefix The prefix of the associated local logger.

@return The Log messages.",
              "idempotent": undefined,
              "location": Object {
                "end": 5251,
                "start": 5136,
              },
              "metadata": undefined,
              "name": "getLog",
              "parameters": Array [
                Object {
                  "dataType": "LogMessageTypeSeq",
                  "location": Object {
                    "end": 5187,
                    "start": 5157,
                  },
                  "metadata": undefined,
                  "name": "messageTypes",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "StringSeq",
                  "location": Object {
                    "end": 5214,
                    "start": 5189,
                  },
                  "metadata": undefined,
                  "name": "traceCategories",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 5230,
                    "start": 5216,
                  },
                  "metadata": undefined,
                  "name": "messageMax",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5249,
                    "start": 5232,
                  },
                  "metadata": undefined,
                  "name": "prefix",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "LogMessageSeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The interface of the admin object that allows an Ice application the attach its
{@link RemoteLogger} to the {@link Logger} of this admin object's Ice communicator.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5253,
            "start": 2906,
          },
          "metadata": undefined,
          "name": "LoggerAdmin",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 5256,
        "start": 409,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Router.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Get the router's client proxy, i.e., the proxy to use for
forwarding requests from the client to the router.

If a null proxy is returned, the client will forward requests
to the router's endpoints.

@param hasRoutingTable Indicates whether or not the router supports a routing
table. If it is supported, the Ice runtime will call addProxies to populate the
routing table. This out parameter is only supported starting with Ice 3.7.
The Ice runtime assumes the router has a routing table if the optional is not
set.

@return The router's client proxy.",
              "idempotent": true,
              "location": Object {
                "end": 1397,
                "start": 1296,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getClientProxy",
              "parameters": Array [
                Object {
                  "dataType": "bool",
                  "location": Object {
                    "end": 1395,
                    "start": 1359,
                  },
                  "metadata": undefined,
                  "name": "hasRoutingTable",
                  "optional": 1,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the router's server proxy, i.e., the proxy to use for
forwarding requests from the server to the router.

@return The router's server proxy.",
              "idempotent": true,
              "location": Object {
                "end": 1671,
                "start": 1606,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getServerProxy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add new proxy information to the router's routing table.

@param proxies The proxies to add.

@return Proxies discarded by the router.",
              "idempotent": true,
              "location": Object {
                "end": 1937,
                "start": 1876,
              },
              "metadata": undefined,
              "name": "addProxies",
              "parameters": Array [
                Object {
                  "dataType": "ObjectProxySeq",
                  "location": Object {
                    "end": 1935,
                    "start": 1913,
                  },
                  "metadata": undefined,
                  "name": "proxies",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectProxySeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Ice router interface. Routers can be set either globally with
{@link Communicator#setDefaultRouter}, or with <code>ice_router</code> on specific
proxies.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1939,
            "start": 602,
          },
          "metadata": undefined,
          "name": "Router",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the router proxy implemented by the process hosting this
finder object. The proxy might point to several replicas.

@return The router proxy.",
              "idempotent": undefined,
              "location": Object {
                "end": 2497,
                "start": 2477,
              },
              "metadata": undefined,
              "name": "getRouter",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Router*",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This inferface should be implemented by services implementing the
Ice::Router interface. It should be advertised through an Ice
object with the identity \`Ice/RouterFinder'. This allows clients to
retrieve the router proxy with just the endpoint information of the
service.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2499,
            "start": 2244,
          },
          "metadata": undefined,
          "name": "RouterFinder",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 2502,
        "start": 386,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/RouterF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 400,
            "start": 383,
          },
          "name": "Router",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 403,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ServantLocator.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/ObjectAdapterF",
    "Ice/Current",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Called before a request is dispatched if a
servant cannot be found in the object adapter's active servant
map. Note that the object adapter does not automatically insert
the returned servant into its active servant map. This must be
done by the servant locator implementation, if this is desired.

<code>locate</code> can throw any user exception. If it does, that exception
is marshaled back to the client. If the Slice definition for the
corresponding operation includes that user exception, the client
receives that user exception; otherwise, the client receives
{@link UnknownUserException}.

If <code>locate</code> throws any exception, the Ice run time does <em>not</em>
call <code>finished</code>.

<p class=\\"Note\\">If you call <code>locate</code> from your own code, you
must also call <code>finished</code> when you have finished using the
servant, provided that <code>locate</code> returned a non-null servant;
otherwise, you will get undefined behavior if you use
servant locators such as the Freeze Evictor.

@param curr Information about the current operation for which
a servant is required.

@param cookie A \\"cookie\\" that will be passed to <code>finished</code>.

@return The located servant, or null if no suitable servant has
been found.

@throws UserException The implementation can raise a UserException
and the run time will marshal it as the result of the invocation.

@see ObjectAdapter
@see Current
@see #finished",
              "idempotent": undefined,
              "location": Object {
                "end": 2502,
                "start": 2427,
              },
              "metadata": Array [
                "java:UserException",
              ],
              "name": "locate",
              "parameters": Array [
                Object {
                  "dataType": "Current",
                  "location": Object {
                    "end": 2476,
                    "start": 2464,
                  },
                  "metadata": undefined,
                  "name": "curr",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LocalObject",
                  "location": Object {
                    "end": 2500,
                    "start": 2478,
                  },
                  "metadata": undefined,
                  "name": "cookie",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Called by the object adapter after a request has been
made. This operation is only called if <code>locate</code> was called
prior to the request and returned a non-null servant. This
operation can be used for cleanup purposes after a request.

<code>finished</code> can throw any user exception. If it does, that exception
is marshaled back to the client. If the Slice definition for the
corresponding operation includes that user exception, the client
receives that user exception; otherwise, the client receives
{@link UnknownUserException}.

If both the operation and <code>finished</code> throw an exception, the
exception thrown by <code>finished</code> is marshaled back to the client.

@param curr Information about the current operation call for
which a servant was located by <code>locate</code>.

@param servant The servant that was returned by <code>locate</code>.

@param cookie The cookie that was returned by <code>locate</code>.

@throws UserException The implementation can raise a UserException
and the run time will marshal it as the result of the invocation.

@see ObjectAdapter
@see Current
@see #locate",
              "idempotent": undefined,
              "location": Object {
                "end": 3932,
                "start": 3845,
              },
              "metadata": Array [
                "java:UserException",
              ],
              "name": "finished",
              "parameters": Array [
                Object {
                  "dataType": "Current",
                  "location": Object {
                    "end": 3894,
                    "start": 3882,
                  },
                  "metadata": undefined,
                  "name": "curr",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Object",
                  "location": Object {
                    "end": 3910,
                    "start": 3896,
                  },
                  "metadata": undefined,
                  "name": "servant",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LocalObject",
                  "location": Object {
                    "end": 3930,
                    "start": 3912,
                  },
                  "metadata": undefined,
                  "name": "cookie",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Called when the object adapter in which this servant locator is
installed is destroyed.

@param category Indicates for which category the servant locator
is being deactivated.

@see ObjectAdapter#destroy
@see Communicator#shutdown
@see Communicator#destroy",
              "idempotent": undefined,
              "location": Object {
                "end": 4320,
                "start": 4287,
              },
              "metadata": undefined,
              "name": "deactivate",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4318,
                    "start": 4303,
                  },
                  "metadata": undefined,
                  "name": "category",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A servant locator is called by an object adapter to
locate a servant that is not found in its active servant map.

@see ObjectAdapter
@see ObjectAdapter#addServantLocator
@see ObjectAdapter#findServantLocator",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 4322,
            "start": 686,
          },
          "metadata": undefined,
          "name": "ServantLocator",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 4325,
        "start": 411,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ServantLocatorF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 414,
            "start": 383,
          },
          "name": "ServantLocator",
          "type": "interfaceForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 417,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/SliceChecksumDict.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A mapping from type IDs to Slice checksums. The dictionary
allows verification at run time that client and server
use matching Slice definitions.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 592,
            "start": 547,
          },
          "metadata": undefined,
          "name": "SliceChecksumDict",
          "type": "dictionary",
          "valueType": "string",
          "valueTypeMetadata": undefined,
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 595,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/ValueFactory.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Create a new value for a given value type. The type is the
absolute Slice type id, i.e., the id relative to the
unnamed top-level Slice module. For example, the absolute
Slice type id for an interface <code>Bar</code> in the module
<code>Foo</code> is <code>\\"::Foo::Bar\\"</code>.

Note that the leading \\"<code>::</code>\\" is required.

@param type The value type.

@return The value created for the given type, or nil if the
factory is unable to create the value.",
              "idempotent": undefined,
              "location": Object {
                "end": 1343,
                "start": 1317,
              },
              "metadata": undefined,
              "name": "create",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1341,
                    "start": 1330,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Value",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A factory for values. Value factories are used in several
places, such as when Ice receives a class instance and
when Freeze restores a persistent value. Value factories
must be implemented by the application writer and registered
with the communicator.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1345,
            "start": 695,
          },
          "metadata": Array [
            "delegate",
          ],
          "name": "ValueFactory",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Add a value factory. Attempting to add a factory with an id for
which a factory is already registered throws AlreadyRegisteredException.

When unmarshaling an Ice value, the Ice run time reads the
most-derived type id off the wire and attempts to create an
instance of the type using a factory. If no instance is created,
either because no factory was found, or because all factories
returned nil, the behavior of the Ice run time depends on the
format with which the value was marshaled:

If the value uses the \\"sliced\\" format, Ice ascends the class
hierarchy until it finds a type that is recognized by a factory,
or it reaches the least-derived type. If no factory is found that
can create an instance, the run time throws NoValueFactoryException.

If the value uses the \\"compact\\" format, Ice immediately raises
NoValueFactoryException.

The following order is used to locate a factory for a type:

<ol>

<li>The Ice run-time looks for a factory registered
specifically for the type.</li>

<li>If no instance has been created, the Ice run-time looks
for the default factory, which is registered with an empty type id.
</li>

<li>If no instance has been created by any of the preceding
steps, the Ice run-time looks for a factory that may have been
statically generated by the language mapping for non-abstract classes.
</li>

</ol>

@param factory The factory to add.

@param id The type id for which the factory can create instances, or
an empty string for the default factory.",
              "idempotent": undefined,
              "location": Object {
                "end": 3486,
                "start": 3421,
              },
              "metadata": undefined,
              "name": "add",
              "parameters": Array [
                Object {
                  "dataType": "ValueFactory",
                  "location": Object {
                    "end": 3450,
                    "start": 3430,
                  },
                  "metadata": undefined,
                  "name": "factory",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3484,
                    "start": 3452,
                  },
                  "metadata": Array [
                    "objc:param:sliceId",
                  ],
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find an value factory registered with this communicator.

@param id The type id for which the factory can create instances,
or an empty string for the default factory.

@return The value factory, or null if no value factory was
found for the given id.",
              "idempotent": undefined,
              "location": Object {
                "end": 3881,
                "start": 3822,
              },
              "metadata": Array [
                "cpp:const",
                "cpp:noexcept",
              ],
              "name": "find",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3879,
                    "start": 3870,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ValueFactory",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A value factory manager maintains a collection of value factories.
An application can supply a custom implementation during communicator
initialization, otherwise Ice provides a default implementation.

@see ValueFactory",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 3883,
            "start": 1597,
          },
          "metadata": undefined,
          "name": "ValueFactoryManager",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 3893,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices Ice/Version.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICE_API",
    "cpp:doxygen:include:Ice/Ice.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICE_API",
    "objc:header-dir:objc",
    "python:pkgdir:Ice",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A version structure for the protocol version.",
          "fields": Array [
            Object {
              "dataType": "byte",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 487,
                "start": 476,
              },
              "metadata": undefined,
              "name": "major",
            },
            Object {
              "dataType": "byte",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 503,
                "start": 492,
              },
              "metadata": undefined,
              "name": "minor",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 505,
            "start": 447,
          },
          "metadata": undefined,
          "name": "ProtocolVersion",
          "type": "struct",
        },
        Object {
          "doc": "A version structure for the encoding version.",
          "fields": Array [
            Object {
              "dataType": "byte",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 611,
                "start": 600,
              },
              "metadata": undefined,
              "name": "major",
            },
            Object {
              "dataType": "byte",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 627,
                "start": 616,
              },
              "metadata": undefined,
              "name": "minor",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 629,
            "start": 571,
          },
          "metadata": undefined,
          "name": "EncodingVersion",
          "type": "struct",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 632,
        "start": 349,
      },
      "metadata": Array [
        "objc:prefix:ICE",
      ],
      "name": "Ice",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceBT/ConnectionInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEBT_API",
    "cpp:doxygen:include:IceBT/IceBT.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceBT",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Connection",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": "\\"\\"",
              "doc": undefined,
              "location": Object {
                "end": 598,
                "start": 573,
              },
              "metadata": undefined,
              "name": "localAddress",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "-1",
              "doc": undefined,
              "location": Object {
                "end": 663,
                "start": 641,
              },
              "metadata": undefined,
              "name": "localChannel",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": "\\"\\"",
              "doc": undefined,
              "location": Object {
                "end": 736,
                "start": 710,
              },
              "metadata": undefined,
              "name": "remoteAddress",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "-1",
              "doc": undefined,
              "location": Object {
                "end": 803,
                "start": 780,
              },
              "metadata": undefined,
              "name": "remoteChannel",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": "\\"\\"",
              "doc": undefined,
              "location": Object {
                "end": 916,
                "start": 899,
              },
              "metadata": undefined,
              "name": "uuid",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": undefined,
              "location": Object {
                "end": 986,
                "start": 970,
              },
              "metadata": undefined,
              "name": "rcvSize",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": undefined,
              "location": Object {
                "end": 1053,
                "start": 1037,
              },
              "metadata": undefined,
              "name": "sndSize",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the details of a Bluetooth connection.",
          "extends": "Ice::ConnectionInfo",
          "local": true,
          "location": Object {
            "end": 1055,
            "start": 472,
          },
          "metadata": undefined,
          "name": "ConnectionInfo",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1058,
        "start": 358,
      },
      "metadata": Array [
        "objc:prefix:ICEBT",
      ],
      "name": "IceBT",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceBT/EndpointInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEBT_API",
    "cpp:doxygen:include:IceBT/IceBT.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceBT",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Endpoint",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The address configured with the endpoint.",
              "location": Object {
                "end": 676,
                "start": 664,
              },
              "metadata": undefined,
              "name": "addr",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The UUID configured with the endpoint.",
              "location": Object {
                "end": 771,
                "start": 759,
              },
              "metadata": undefined,
              "name": "uuid",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to Bluetooth endpoint information.",
          "extends": "Ice::EndpointInfo",
          "local": true,
          "location": Object {
            "end": 773,
            "start": 527,
          },
          "metadata": undefined,
          "name": "EndpointInfo",
          "type": "class",
        },
      ],
      "doc": "IceBT provides a Bluetooth transport for Ice.",
      "location": Object {
        "end": 776,
        "start": 420,
      },
      "metadata": Array [
        "objc:prefix:ICEBT",
      ],
      "name": "IceBT",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceBT/Types.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEBT_API",
    "cpp:doxygen:include:IceBT/IceBT.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceBT",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 622,
                "start": 608,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Indicates a failure in the Bluetooth plug-in.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 624,
            "start": 493,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "BluetoothException",
          "type": "exception",
        },
      ],
      "doc": "IceBT provides a Bluetooth transport for Ice.",
      "location": Object {
        "end": 627,
        "start": 391,
      },
      "metadata": Array [
        "objc:prefix:ICEBT",
      ],
      "name": "IceBT",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceBox/IceBox.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEBOX_API",
    "cpp:doxygen:include:IceBox/IceBox.h",
    "cpp:header-ext:h",
    "cpp:include:IceBox/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceBox",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
    "Ice/CommunicatorF",
    "Ice/PropertiesF",
    "Ice/SliceChecksumDict",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 1100,
                "start": 1086,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is a general failure notification. It is thrown
for errors such as a service encountering an error during
initialization, or the service manager being unable
to load a service executable.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1102,
            "start": 963,
          },
          "metadata": Array [
            "cpp:ice_print",
          ],
          "name": "FailureException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is thrown if an attempt is made to start an
already-started service.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1246,
            "start": 1209,
          },
          "metadata": undefined,
          "name": "AlreadyStartedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is thrown if an attempt is made to stop an
already-stopped service.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1389,
            "start": 1352,
          },
          "metadata": undefined,
          "name": "AlreadyStoppedException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is thrown if a service name does not refer
to an existing service.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1530,
            "start": 1494,
          },
          "metadata": undefined,
          "name": "NoSuchServiceException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Start the service. The given communicator is created by the
{@link ServiceManager} for use by the service. This communicator may
also be used by other services, depending on the service
configuration.

<p class=\\"Note\\">The {@link ServiceManager} owns this communicator, and is
responsible for destroying it.

@param name The service's name, as determined by the
configuration.

@param communicator A communicator for use by the service.

@param args The service arguments that were not converted into
properties.

@throws FailureException Raised if {@link #start} failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 2433,
                "start": 2356,
              },
              "metadata": undefined,
              "name": "start",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2378,
                    "start": 2367,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Communicator",
                  "location": Object {
                    "end": 2410,
                    "start": 2380,
                  },
                  "metadata": undefined,
                  "name": "communicator",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 2431,
                    "start": 2412,
                  },
                  "metadata": undefined,
                  "name": "args",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Stop the service.",
              "idempotent": undefined,
              "location": Object {
                "end": 2507,
                "start": 2495,
              },
              "metadata": undefined,
              "name": "stop",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An application service managed by a {@link ServiceManager}.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2509,
            "start": 1610,
          },
          "metadata": undefined,
          "name": "Service",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 2724,
                "start": 2678,
              },
              "metadata": undefined,
              "name": "servicesStarted",
              "parameters": Array [
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 2722,
                    "start": 2699,
                  },
                  "metadata": undefined,
                  "name": "services",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 2775,
                "start": 2729,
              },
              "metadata": undefined,
              "name": "servicesStopped",
              "parameters": Array [
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 2773,
                    "start": 2750,
                  },
                  "metadata": undefined,
                  "name": "services",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "An Observer interface implemented by admin clients
interested in the status of services

@see ServiceManager",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2777,
            "start": 2646,
          },
          "metadata": undefined,
          "name": "ServiceObserver",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Returns the checksums for the IceBox Slice definitions.

@return A dictionary mapping Slice type ids to their checksums.",
              "idempotent": true,
              "location": Object {
                "end": 3150,
                "start": 3067,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getSliceChecksums",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::SliceChecksumDict",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Start an individual service.

@param service The service name.

@throws AlreadyStartedException If the service is already running.
@throws NoSuchServiceException If no service could be found with the given name.",
              "idempotent": undefined,
              "location": Object {
                "end": 3529,
                "start": 3432,
              },
              "metadata": undefined,
              "name": "startService",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3464,
                    "start": 3450,
                  },
                  "metadata": undefined,
                  "name": "service",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AlreadyStartedException",
                "NoSuchServiceException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Stop an individual service.

@param service The service name.

@throws AlreadyStoppedException If the service is already stopped.
@throws NoSuchServiceException If no service could be found with the given name.",
              "idempotent": undefined,
              "location": Object {
                "end": 3906,
                "start": 3810,
              },
              "metadata": undefined,
              "name": "stopService",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3841,
                    "start": 3827,
                  },
                  "metadata": undefined,
                  "name": "service",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AlreadyStoppedException",
                "NoSuchServiceException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Registers a new observer with the ServiceManager.

@param observer The new observer",
              "idempotent": undefined,
              "location": Object {
                "end": 4091,
                "start": 4047,
              },
              "metadata": undefined,
              "name": "addObserver",
              "parameters": Array [
                Object {
                  "dataType": "ServiceObserver*",
                  "location": Object {
                    "end": 4089,
                    "start": 4064,
                  },
                  "metadata": undefined,
                  "name": "observer",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Shut down all services. This causes stop to be invoked on all configured services.",
              "idempotent": undefined,
              "location": Object {
                "end": 4234,
                "start": 4218,
              },
              "metadata": undefined,
              "name": "shutdown",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "Administers a set of {@link Service} instances.

@see Service",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4236,
            "start": 2864,
          },
          "metadata": undefined,
          "name": "ServiceManager",
          "type": "interface",
        },
      ],
      "doc": "IceBox is an application server specifically for Ice
applications. IceBox can easily run and administer Ice services
that are dynamically loaded as a DLL, shared library, or Java
class.",
      "location": Object {
        "end": 4239,
        "start": 716,
      },
      "metadata": undefined,
      "name": "IceBox",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceDiscovery/IceDiscovery.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:doxygen:include:IceDiscovery/IceDiscovery.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceDiscovery",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 449,
                "start": 397,
              },
              "metadata": undefined,
              "name": "foundObjectById",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 434,
                    "start": 418,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 447,
                    "start": 436,
                  },
                  "metadata": undefined,
                  "name": "prx",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 522,
                "start": 455,
              },
              "metadata": undefined,
              "name": "foundAdapterById",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 486,
                    "start": 477,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 499,
                    "start": 488,
                  },
                  "metadata": undefined,
                  "name": "prx",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "bool",
                  "location": Object {
                    "end": 520,
                    "start": 501,
                  },
                  "metadata": undefined,
                  "name": "isReplicaGroup",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 524,
            "start": 369,
          },
          "metadata": undefined,
          "name": "LookupReply",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": undefined,
              "idempotent": true,
              "location": Object {
                "end": 635,
                "start": 549,
              },
              "metadata": undefined,
              "name": "findObjectById",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 595,
                    "start": 580,
                  },
                  "metadata": undefined,
                  "name": "domainId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 613,
                    "start": 597,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LookupReply*",
                  "location": Object {
                    "end": 633,
                    "start": 615,
                  },
                  "metadata": undefined,
                  "name": "reply",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": undefined,
              "idempotent": true,
              "location": Object {
                "end": 721,
                "start": 641,
              },
              "metadata": undefined,
              "name": "findAdapterById",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 688,
                    "start": 673,
                  },
                  "metadata": undefined,
                  "name": "domainId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 699,
                    "start": 690,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LookupReply*",
                  "location": Object {
                    "end": 719,
                    "start": 701,
                  },
                  "metadata": undefined,
                  "name": "reply",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 723,
            "start": 526,
          },
          "metadata": undefined,
          "name": "Lookup",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 726,
        "start": 346,
      },
      "metadata": undefined,
      "name": "IceDiscovery",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/Admin.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEGRID_API",
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICEGRID_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
    "Ice/BuiltinSequences",
    "Ice/Properties",
    "Ice/SliceChecksumDict",
    "Glacier2/Session",
    "IceGrid/Exception",
    "IceGrid/Descriptor",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "An enumeration representing the state of the server.",
          "enums": Array [
            Object {
              "doc": "The server is not running.",
              "location": Object {
                "end": 844,
                "start": 836,
              },
              "name": "Inactive",
              "value": undefined,
            },
            Object {
              "doc": "The server is being activated and will change to the active
state when the registered server object adapters are activated
or to the activation timed out state if the activation timeout
expires.",
              "location": Object {
                "end": 1115,
                "start": 1105,
              },
              "name": "Activating",
              "value": undefined,
            },
            Object {
              "doc": "The activation timed out state indicates that the server
activation timed out.",
              "location": Object {
                "end": 1264,
                "start": 1246,
              },
              "name": "ActivationTimedOut",
              "value": undefined,
            },
            Object {
              "doc": "The server is running.",
              "location": Object {
                "end": 1338,
                "start": 1332,
              },
              "name": "Active",
              "value": undefined,
            },
            Object {
              "doc": "The server is being deactivated.",
              "location": Object {
                "end": 1428,
                "start": 1416,
              },
              "name": "Deactivating",
              "value": undefined,
            },
            Object {
              "doc": "The server is being destroyed.",
              "location": Object {
                "end": 1514,
                "start": 1504,
              },
              "name": "Destroying",
              "value": undefined,
            },
            Object {
              "doc": "The server is destroyed.",
              "location": Object {
                "end": 1593,
                "start": 1584,
              },
              "name": "Destroyed",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 1595,
            "start": 748,
          },
          "metadata": undefined,
          "name": "ServerState",
          "type": "enum",
        },
        Object {
          "doc": "A dictionary of proxies.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 1690,
            "start": 1640,
          },
          "metadata": undefined,
          "name": "StringObjectProxyDict",
          "type": "dictionary",
          "valueType": "Object*",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": "Information about an Ice object.",
          "fields": Array [
            Object {
              "dataType": "Object*",
              "defaultValue": undefined,
              "doc": "The proxy of the object.",
              "location": Object {
                "end": 1863,
                "start": 1849,
              },
              "metadata": undefined,
              "name": "proxy",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The type of the object.",
              "location": Object {
                "end": 1943,
                "start": 1931,
              },
              "metadata": undefined,
              "name": "type",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1945,
            "start": 1743,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "ObjectInfo",
          "type": "struct",
        },
        Object {
          "dataType": "ObjectInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of object information structures.",
          "local": undefined,
          "location": Object {
            "end": 2045,
            "start": 2010,
          },
          "metadata": undefined,
          "name": "ObjectInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Information about an adapter registered with the IceGrid registry.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the adapter.",
              "location": Object {
                "end": 2247,
                "start": 2237,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "Object*",
              "defaultValue": undefined,
              "doc": "A dummy direct proxy that contains the adapter endpoints.",
              "location": Object {
                "end": 2363,
                "start": 2349,
              },
              "metadata": undefined,
              "name": "proxy",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The replica group id of the object adapter, or empty if the
adapter doesn't belong to a replica group.",
              "location": Object {
                "end": 2539,
                "start": 2517,
              },
              "metadata": undefined,
              "name": "replicaGroupId",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 2541,
            "start": 2132,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "AdapterInfo",
          "type": "struct",
        },
        Object {
          "dataType": "AdapterInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of adapter information structures.",
          "local": undefined,
          "location": Object {
            "end": 2644,
            "start": 2607,
          },
          "metadata": undefined,
          "name": "AdapterInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Information about a server managed by an IceGrid node.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The server application.",
              "location": Object {
                "end": 2824,
                "start": 2805,
              },
              "metadata": undefined,
              "name": "application",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The application uuid.",
              "location": Object {
                "end": 2902,
                "start": 2890,
              },
              "metadata": undefined,
              "name": "uuid",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The application revision.",
              "location": Object {
                "end": 2985,
                "start": 2972,
              },
              "metadata": undefined,
              "name": "revision",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The server node.",
              "location": Object {
                "end": 3058,
                "start": 3046,
              },
              "metadata": undefined,
              "name": "node",
            },
            Object {
              "dataType": "ServerDescriptor",
              "defaultValue": undefined,
              "doc": "The server descriptor.",
              "location": Object {
                "end": 3153,
                "start": 3125,
              },
              "metadata": undefined,
              "name": "descriptor",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the session which allocated the server.",
              "location": Object {
                "end": 3264,
                "start": 3247,
              },
              "metadata": undefined,
              "name": "sessionId",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 3266,
            "start": 2719,
          },
          "metadata": undefined,
          "name": "ServerInfo",
          "type": "struct",
        },
        Object {
          "doc": "Information about an IceGrid node.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the node.",
              "location": Object {
                "end": 3415,
                "start": 3403,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The operating system name.",
              "location": Object {
                "end": 3496,
                "start": 3486,
              },
              "metadata": undefined,
              "name": "os",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The network name of the host running this node (as defined in
uname()).",
              "location": Object {
                "end": 3635,
                "start": 3619,
              },
              "metadata": undefined,
              "name": "hostname",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The operation system release level (as defined in uname()).",
              "location": Object {
                "end": 3754,
                "start": 3739,
              },
              "metadata": undefined,
              "name": "release",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The operation system version (as defined in uname()).",
              "location": Object {
                "end": 3867,
                "start": 3852,
              },
              "metadata": undefined,
              "name": "version",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The machine hardware type (as defined in uname()).",
              "location": Object {
                "end": 3977,
                "start": 3962,
              },
              "metadata": undefined,
              "name": "machine",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The number of processor threads on the node.
For example, nProcessors is 8 on a computer with a single quad-core
processor and two HT threads per core.",
              "location": Object {
                "end": 4203,
                "start": 4187,
              },
              "metadata": undefined,
              "name": "nProcessors",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The path to the node data directory.",
              "location": Object {
                "end": 4299,
                "start": 4284,
              },
              "metadata": undefined,
              "name": "dataDir",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 4301,
            "start": 3321,
          },
          "metadata": undefined,
          "name": "NodeInfo",
          "type": "struct",
        },
        Object {
          "doc": "Information about an IceGrid registry replica.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the registry.",
              "location": Object {
                "end": 4470,
                "start": 4458,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The network name of the host running this registry (as defined in
uname()).",
              "location": Object {
                "end": 4613,
                "start": 4597,
              },
              "metadata": undefined,
              "name": "hostname",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 4615,
            "start": 4368,
          },
          "metadata": undefined,
          "name": "RegistryInfo",
          "type": "struct",
        },
        Object {
          "dataType": "RegistryInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of {@link RegistryInfo} structures.",
          "local": undefined,
          "location": Object {
            "end": 4721,
            "start": 4682,
          },
          "metadata": undefined,
          "name": "RegistryInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Information about the load of a node.",
          "fields": Array [
            Object {
              "dataType": "float",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 4862,
                "start": 4851,
              },
              "metadata": undefined,
              "name": "avg1",
            },
            Object {
              "dataType": "float",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 4932,
                "start": 4921,
              },
              "metadata": undefined,
              "name": "avg5",
            },
            Object {
              "dataType": "float",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5004,
                "start": 4992,
              },
              "metadata": undefined,
              "name": "avg15",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 5006,
            "start": 4779,
          },
          "metadata": undefined,
          "name": "LoadInfo",
          "type": "struct",
        },
        Object {
          "doc": "Information about an IceGrid application.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5151,
                "start": 5139,
              },
              "metadata": undefined,
              "name": "uuid",
            },
            Object {
              "dataType": "long",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5203,
                "start": 5187,
              },
              "metadata": undefined,
              "name": "createTime",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5276,
                "start": 5258,
              },
              "metadata": undefined,
              "name": "createUser",
            },
            Object {
              "dataType": "long",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5326,
                "start": 5310,
              },
              "metadata": undefined,
              "name": "updateTime",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5399,
                "start": 5381,
              },
              "metadata": undefined,
              "name": "updateUser",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5462,
                "start": 5449,
              },
              "metadata": undefined,
              "name": "revision",
            },
            Object {
              "dataType": "ApplicationDescriptor",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5539,
                "start": 5506,
              },
              "metadata": undefined,
              "name": "descriptor",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 5541,
            "start": 5068,
          },
          "metadata": undefined,
          "name": "ApplicationInfo",
          "type": "struct",
        },
        Object {
          "dataType": "ApplicationInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of {@link ApplicationInfo} structures.",
          "local": undefined,
          "location": Object {
            "end": 5708,
            "start": 5611,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ApplicationInfo>",
          ],
          "name": "ApplicationInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Information about updates to an IceGrid application.",
          "fields": Array [
            Object {
              "dataType": "long",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5860,
                "start": 5844,
              },
              "metadata": undefined,
              "name": "updateTime",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5933,
                "start": 5915,
              },
              "metadata": undefined,
              "name": "updateUser",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5996,
                "start": 5983,
              },
              "metadata": undefined,
              "name": "revision",
            },
            Object {
              "dataType": "ApplicationUpdateDescriptor",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 6075,
                "start": 6036,
              },
              "metadata": undefined,
              "name": "descriptor",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 6077,
            "start": 5781,
          },
          "metadata": undefined,
          "name": "ApplicationUpdateInfo",
          "type": "struct",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Add an application to IceGrid.

@param descriptor The application descriptor.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if application deployment
failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 6787,
                "start": 6675,
              },
              "metadata": undefined,
              "name": "addApplication",
              "parameters": Array [
                Object {
                  "dataType": "ApplicationDescriptor",
                  "location": Object {
                    "end": 6727,
                    "start": 6695,
                  },
                  "metadata": undefined,
                  "name": "descriptor",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Synchronize a deployed application with the given application
descriptor. This operation will replace the current descriptor
with this new descriptor.

@param descriptor The application descriptor.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if application deployment
failed.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 7543,
                "start": 7400,
              },
              "metadata": undefined,
              "name": "syncApplication",
              "parameters": Array [
                Object {
                  "dataType": "ApplicationDescriptor",
                  "location": Object {
                    "end": 7453,
                    "start": 7421,
                  },
                  "metadata": undefined,
                  "name": "descriptor",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "DeploymentException",
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Update a deployed application with the given update application
descriptor.

@param descriptor The update descriptor.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if application deployment
failed.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 8220,
                "start": 8069,
              },
              "metadata": undefined,
              "name": "updateApplication",
              "parameters": Array [
                Object {
                  "dataType": "ApplicationUpdateDescriptor",
                  "location": Object {
                    "end": 8130,
                    "start": 8092,
                  },
                  "metadata": undefined,
                  "name": "descriptor",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "DeploymentException",
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Synchronize a deployed application with the given application
descriptor. This operation will replace the current descriptor
with this new descriptor only if no server restarts are
necessary for the update of the application. If some servers
need to be restarted, the synchronization is rejected with a
DeploymentException.

@param descriptor The application descriptor.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if application deployment
failed.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 9184,
                "start": 9027,
              },
              "metadata": undefined,
              "name": "syncApplicationWithoutRestart",
              "parameters": Array [
                Object {
                  "dataType": "ApplicationDescriptor",
                  "location": Object {
                    "end": 9094,
                    "start": 9062,
                  },
                  "metadata": undefined,
                  "name": "descriptor",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "DeploymentException",
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Update a deployed application with the given update application
descriptor only if no server restarts are necessary for the
update of the application. If some servers need to be
restarted, the synchronization is rejected with a
DeploymentException.

@param descriptor The update descriptor.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if application deployment
failed.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 10069,
                "start": 9904,
              },
              "metadata": undefined,
              "name": "updateApplicationWithoutRestart",
              "parameters": Array [
                Object {
                  "dataType": "ApplicationUpdateDescriptor",
                  "location": Object {
                    "end": 9979,
                    "start": 9941,
                  },
                  "metadata": undefined,
                  "name": "descriptor",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "DeploymentException",
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Remove an application from IceGrid.

@param name The application name.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if application deployment failed.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 10658,
                "start": 10534,
              },
              "metadata": undefined,
              "name": "removeApplication",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 10568,
                    "start": 10557,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "DeploymentException",
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Instantiate a server template from an application on the given
node.

@param application The application name.

@param node The name of the node where the server will be
deployed.

@param desc The descriptor of the server instance to deploy.

@throws AccessDeniedException Raised if the session doesn't
hold the exclusive lock or if another session is holding the
lock.

@throws DeploymentException Raised if server instantiation
failed.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 11514,
                "start": 11339,
              },
              "metadata": undefined,
              "name": "instantiateServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 11380,
                    "start": 11362,
                  },
                  "metadata": undefined,
                  "name": "application",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 11393,
                    "start": 11382,
                  },
                  "metadata": undefined,
                  "name": "node",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ServerInstanceDescriptor",
                  "location": Object {
                    "end": 11424,
                    "start": 11395,
                  },
                  "metadata": undefined,
                  "name": "desc",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
                "ApplicationNotExistException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Patch the given application data.

@param name The application name.

@param shutdown If true, the servers depending on the data to
patch will be shut down if necessary.

@throws ApplicationNotExistException Raised if the application
doesn't exist.

@throws PatchException Raised if the patch failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 12043,
                "start": 11925,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "patchApplication",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 11966,
                    "start": 11955,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "bool",
                  "location": Object {
                    "end": 11981,
                    "start": 11968,
                  },
                  "metadata": undefined,
                  "name": "shutdown",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ApplicationNotExistException",
                "PatchException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get an application descriptor.

@param name The application name.

@return The application descriptor.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 12447,
                "start": 12315,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getApplicationInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 12401,
                    "start": 12390,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ApplicationInfo",
              "throws": Array [
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the default application descriptor.

@return The default application descriptor.

@throws DeploymentException Raised if the default application
descriptor can't be accessed or is invalid.",
              "idempotent": true,
              "location": Object {
                "end": 12847,
                "start": 12716,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getDefaultApplicationDescriptor",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ApplicationDescriptor",
              "throws": Array [
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get all the IceGrid applications currently registered.

@return The application names.",
              "idempotent": true,
              "location": Object {
                "end": 13071,
                "start": 12991,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAllApplicationNames",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the server information for the server with the given id.

@param id The server id.

@throws ServerNotExistException Raised if the server doesn't exist.

@return The server information.",
              "idempotent": true,
              "location": Object {
                "end": 13458,
                "start": 13343,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getServerInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 13417,
                    "start": 13408,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ServerInfo",
              "throws": Array [
                "ServerNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get a server's state.

@param id The server id.

@return The server state.

@throws ServerNotExistException Raised if the server doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": true,
              "location": Object {
                "end": 14048,
                "start": 13884,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getServerState",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 13960,
                    "start": 13951,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ServerState",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get a server's system process id. The process id is operating
system dependent.

@param id The server id.

@return The server's process id.

@throws ServerNotExistException Raised if the server doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": true,
              "location": Object {
                "end": 14700,
                "start": 14546,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getServerPid",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 14612,
                    "start": 14603,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the category for server admin objects. You can manufacture a server admin
proxy from the admin proxy by changing its identity: use the server ID as name
and the returned category as category.

@return The category for server admin objects.",
              "idempotent": true,
              "location": Object {
                "end": 15076,
                "start": 15015,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getServerAdminCategory",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a proxy to the server's admin object.

@param id The server id.

@return A proxy to the server's admin object

@throws ServerNotExistException Raised if the server doesn't exist.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": true,
              "location": Object {
                "end": 15690,
                "start": 15541,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getServerAdmin",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 15602,
                    "start": 15593,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Enable or disable a server. A disabled server can't be started
on demand or administratively. The enable state of the server
is not persistent: if the node is shut down and restarted, the
server will be enabled by default.

@param id The server id.

@param enabled True to enable the server, false to disable it.

@throws ServerNotExistException Raised if the server doesn't exist.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": true,
              "location": Object {
                "end": 16515,
                "start": 16375,
              },
              "metadata": undefined,
              "name": "enableServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 16413,
                    "start": 16404,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "bool",
                  "location": Object {
                    "end": 16427,
                    "start": 16415,
                  },
                  "metadata": undefined,
                  "name": "enabled",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Check if the server is enabled or disabled.

@param id The server id.

@return True if the server is enabled.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": true,
              "location": Object {
                "end": 17141,
                "start": 16983,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "isServerEnabled",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 17053,
                    "start": 17044,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Start a server and wait for its activation.

@param id The server id.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws ServerStartException Raised if the server couldn't be
started.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": undefined,
              "location": Object {
                "end": 17792,
                "start": 17648,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "startServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 17682,
                    "start": 17673,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ServerNotExistException",
                "ServerStartException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Stop a server.

@param id The server id.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws ServerStopException Raised if the server couldn't be
stopped.

@throws NodeUnreachableException Raised if the node could not be
reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": undefined,
              "location": Object {
                "end": 18411,
                "start": 18269,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "stopServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 18302,
                    "start": 18293,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ServerNotExistException",
                "ServerStopException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Patch a server.

@param id The server id.

@param shutdown If true, servers depending on the data to patch
will be shut down if necessary.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws NodeUnreachableException Raised if the node could not be
reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.

@throws PatchException Raised if the patch failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 19133,
                "start": 18980,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "patchServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 19014,
                    "start": 19005,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "bool",
                  "location": Object {
                    "end": 19029,
                    "start": 19016,
                  },
                  "metadata": undefined,
                  "name": "shutdown",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
                "PatchException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Send signal to a server.

@param id The server id.

@param signal The signal, for example SIGTERM or 15.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws NodeUnreachableException Raised if the node could not be
reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.

@throws BadSignalException Raised if the signal is not recognized
by the target server.",
              "idempotent": undefined,
              "location": Object {
                "end": 19852,
                "start": 19705,
              },
              "metadata": undefined,
              "name": "sendSignal",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 19730,
                    "start": 19721,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 19745,
                    "start": 19732,
                  },
                  "metadata": undefined,
                  "name": "signal",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
                "BadSignalException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get all the server ids registered with IceGrid.

@return The server ids.",
              "idempotent": true,
              "location": Object {
                "end": 20055,
                "start": 19982,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAllServerIds",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the adapter information for the replica group or adapter
with the given id.

@param id The adapter id.

@return A sequence of adapter information structures. If the
given id refers to an adapter, this sequence will contain only
one element. If the given id refers to a replica group, the
sequence will contain the adapter information of each member of
the replica group.

@throws AdapterNotExistException Raised if the adapter or
replica group doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 20764,
                "start": 20643,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAdapterInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 20722,
                    "start": 20713,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "AdapterInfoSeq",
              "throws": Array [
                "AdapterNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Remove the adapter with the given id.

@param id The adapter id.
@throws AdapterNotExistException Raised if the adapter doesn't
exist.

@throws DeploymentException Raised if application deployment failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 21144,
                "start": 21053,
              },
              "metadata": undefined,
              "name": "removeAdapter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 21081,
                    "start": 21072,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AdapterNotExistException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get all the adapter ids registered with IceGrid.

@return The adapter ids.",
              "idempotent": true,
              "location": Object {
                "end": 21350,
                "start": 21276,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAllAdapterIds",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add an object to the object registry. IceGrid will get the
object type by calling <code>ice_id</code> on the given proxy. The object
must be reachable.

@param obj The object to be added to the registry.

@throws ObjectExistsException Raised if the object is already
registered.

@throws DeploymentException Raised if the object can't be
added. This might be raised if the invocation on the proxy to
get the object type failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 21982,
                "start": 21896,
              },
              "metadata": undefined,
              "name": "addObject",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 21922,
                    "start": 21911,
                  },
                  "metadata": undefined,
                  "name": "obj",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObjectExistsException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Update an object in the object registry. Only objects added
with this interface can be updated with this operation. Objects
added with deployment descriptors should be updated with the
deployment mechanism.

@param obj The object to be updated to the registry.

@throws ObjectNotRegisteredException Raised if the object isn't
registered with the registry.

@throws DeploymentException Raised if the object can't be
updated. This might happen if the object was added with a
deployment descriptor.",
              "idempotent": undefined,
              "location": Object {
                "end": 22699,
                "start": 22603,
              },
              "metadata": undefined,
              "name": "updateObject",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 22632,
                    "start": 22621,
                  },
                  "metadata": undefined,
                  "name": "obj",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObjectNotRegisteredException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Add an object to the object registry and explicitly specify
its type.

@param obj The object to be added to the registry.

@param type The object type.

@throws ObjectExistsException Raised if the object is already
registered.

@throws DeploymentException Raised if application deployment failed.",
              "idempotent": undefined,
              "location": Object {
                "end": 23213,
                "start": 23106,
              },
              "metadata": undefined,
              "name": "addObjectWithType",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 23140,
                    "start": 23129,
                  },
                  "metadata": undefined,
                  "name": "obj",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 23153,
                    "start": 23142,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObjectExistsException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Remove an object from the object registry. Only objects added
with this interface can be removed with this operation. Objects
added with deployment descriptors should be removed with the
deployment mechanism.

@param id The identity of the object to be removed from the
registry.

@throws ObjectNotRegisteredException Raised if the object isn't
registered with the registry.

@throws DeploymentException Raised if the object can't be
removed. This might happen if the object was added with a
deployment descriptor.",
              "idempotent": undefined,
              "location": Object {
                "end": 23961,
                "start": 23860,
              },
              "metadata": undefined,
              "name": "removeObject",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 23894,
                    "start": 23878,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObjectNotRegisteredException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the object info for the object with the given identity.

@param id The identity of the object.

@return The object info.

@throws ObjectNotRegisteredException Raised if the object isn't
registered with the registry.",
              "idempotent": true,
              "location": Object {
                "end": 24398,
                "start": 24271,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getObjectInfo",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 24352,
                    "start": 24336,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectInfo",
              "throws": Array [
                "ObjectNotRegisteredException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the object info of all the registered objects with the
given type.

@param type The type of the object.

@return The object infos.",
              "idempotent": true,
              "location": Object {
                "end": 24698,
                "start": 24610,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getObjectInfosByType",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 24696,
                    "start": 24685,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectInfoSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the object info of all the registered objects whose stringified
identities match the given expression.

@param expr The expression to match against the stringified
identities of registered objects. The expression may contain
a trailing wildcard (<code>*</code>) character.

@return All the object infos with a stringified identity
matching the given expression.",
              "idempotent": true,
              "location": Object {
                "end": 25247,
                "start": 25162,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAllObjectInfos",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 25245,
                    "start": 25234,
                  },
                  "metadata": undefined,
                  "name": "expr",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectInfoSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Ping an IceGrid node to see if it is active.

@param name The node name.

@return true if the node ping succeeded, false otherwise.

@throws NodeNotExistException Raised if the node doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 25631,
                "start": 25527,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "pingNode",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 25592,
                    "start": 25581,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": Array [
                "NodeNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the load averages of the node.

@param name The node name.

@return The node load information.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 26110,
                "start": 25973,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNodeLoad",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 26045,
                    "start": 26034,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "LoadInfo",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the node information for the node with the given name.

@param name The node name.

@return The node information.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 26608,
                "start": 26471,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNodeInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 26543,
                    "start": 26532,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "NodeInfo",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get a proxy to the IceGrid node's admin object.

@param name The IceGrid node name

@return A proxy to the IceGrid node's admin object

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 27109,
                "start": 26986,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getNodeAdmin",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 27043,
                    "start": 27032,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the number of physical processor sockets for the machine
running the node with the given name.

Note that this method will return 1 on operating systems where
this can't be automatically determined and where the
IceGrid.Node.ProcessorSocketCount property for the node is not
set.

@param name The node name.

@return The number of processor sockets or 1 if the number of
sockets can't determined.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 27949,
                "start": 27801,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNodeProcessorSocketCount",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 27884,
                    "start": 27873,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Shutdown an IceGrid node.

@param name The node name.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": undefined,
              "location": Object {
                "end": 28327,
                "start": 28233,
              },
              "metadata": undefined,
              "name": "shutdownNode",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 28262,
                    "start": 28251,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the hostname of this node.

@param name The node name.

@return The node hostname.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 28796,
                "start": 28657,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNodeHostname",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 28731,
                    "start": 28720,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get all the IceGrid nodes currently registered.

@return The node names.",
              "idempotent": true,
              "location": Object {
                "end": 28999,
                "start": 28926,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAllNodeNames",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Ping an IceGrid registry to see if it is active.

@param name The registry name.

@return true if the registry ping succeeded, false otherwise.

@throws RegistryNotExistException Raised if the registry doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 29396,
                "start": 29299,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "pingRegistry",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 29353,
                    "start": 29342,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": Array [
                "RegistryNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the registry information for the registry with the given name.

@param name The registry name.

@return The registry information.

@throws RegistryNotExistException Raised if the registry doesn't exist.

@throws RegistryUnreachableException Raised if the registry could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 29927,
                "start": 29789,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getRegistryInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 29854,
                    "start": 29843,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "RegistryInfo",
              "throws": Array [
                "RegistryNotExistException",
                "RegistryUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get a proxy to the IceGrid registry's admin object.

@param name The registry name

@return A proxy to the IceGrid registry's admin object

@throws RegistryNotExistException Raised if the registry doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 30326,
                "start": 30222,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getRegistryAdmin",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 30283,
                    "start": 30272,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "RegistryNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Shutdown an IceGrid registry.

@param name The registry name.

@throws RegistryNotExistException Raised if the registry doesn't exist.

@throws RegistryUnreachableException Raised if the registry could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 30751,
                "start": 30634,
              },
              "metadata": undefined,
              "name": "shutdownRegistry",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 30678,
                    "start": 30667,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "RegistryNotExistException",
                "RegistryUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get all the IceGrid registries currently registered.

@return The registry names.",
              "idempotent": true,
              "location": Object {
                "end": 30952,
                "start": 30890,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getAllRegistryNames",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Shut down the IceGrid registry.",
              "idempotent": undefined,
              "location": Object {
                "end": 31044,
                "start": 31028,
              },
              "metadata": undefined,
              "name": "shutdown",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns the checksums for the IceGrid Slice definitions.

@return A dictionary mapping Slice type ids to their checksums.",
              "idempotent": true,
              "location": Object {
                "end": 31306,
                "start": 31223,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getSliceChecksums",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::SliceChecksumDict",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The IceGrid administrative interface.
<p class=\\"Warning\\">Allowing access to this interface
is a security risk! Please see the IceGrid documentation
for further information.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 31308,
            "start": 6279,
          },
          "metadata": undefined,
          "name": "Admin",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Read lines from the log file.

@param size Specifies the maximum number of bytes to be
received. The server will ensure that the returned message
doesn't exceed the given size.

@param lines The lines read from the file. If there was nothing to
read from the file since the last call to read, an empty
sequence is returned. The last line of the sequence is always
incomplete (and therefore no '\\\\n' should be added when writing
the last line to the to the output device).

@return True if EOF is encountered.

@throws FileNotAvailableException Raised if there was a problem
to read lines from the file.",
              "idempotent": undefined,
              "location": Object {
                "end": 32246,
                "start": 32159,
              },
              "metadata": undefined,
              "name": "read",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 32177,
                    "start": 32169,
                  },
                  "metadata": undefined,
                  "name": "size",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 32203,
                    "start": 32179,
                  },
                  "metadata": undefined,
                  "name": "lines",
                  "optional": undefined,
                  "out": true,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": Array [
                "FileNotAvailableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Destroy the iterator.",
              "idempotent": undefined,
              "location": Object {
                "end": 32327,
                "start": 32312,
              },
              "metadata": undefined,
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This interface provides access to IceGrid log file contents.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 32329,
            "start": 31389,
          },
          "metadata": undefined,
          "name": "FileIterator",
          "type": "interface",
        },
        Object {
          "doc": "Dynamic information about the state of a server.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the server.",
              "location": Object {
                "end": 32499,
                "start": 32489,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "ServerState",
              "defaultValue": undefined,
              "doc": "The state of the server.",
              "location": Object {
                "end": 32586,
                "start": 32568,
              },
              "metadata": undefined,
              "name": "state",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The process id of the server.",
              "location": Object {
                "end": 32668,
                "start": 32660,
              },
              "metadata": undefined,
              "name": "pid",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": "Indicates whether the server is enabled.",
              "location": Object {
                "end": 32766,
                "start": 32753,
              },
              "metadata": undefined,
              "name": "enabled",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 32768,
            "start": 32398,
          },
          "metadata": undefined,
          "name": "ServerDynamicInfo",
          "type": "struct",
        },
        Object {
          "dataType": "ServerDynamicInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of server dynamic information structures.",
          "local": undefined,
          "location": Object {
            "end": 32944,
            "start": 32841,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ServerDynamicInfo>",
          ],
          "name": "ServerDynamicInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Dynamic information about the state of an adapter.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the adapter.",
              "location": Object {
                "end": 33118,
                "start": 33108,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "Object*",
              "defaultValue": undefined,
              "doc": "The direct proxy containing the adapter endpoints.",
              "location": Object {
                "end": 33227,
                "start": 33213,
              },
              "metadata": undefined,
              "name": "proxy",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 33229,
            "start": 33015,
          },
          "metadata": undefined,
          "name": "AdapterDynamicInfo",
          "type": "struct",
        },
        Object {
          "dataType": "AdapterDynamicInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of adapter dynamic information structures.",
          "local": undefined,
          "location": Object {
            "end": 33409,
            "start": 33303,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<AdapterDynamicInfo>",
          ],
          "name": "AdapterDynamicInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Dynamic information about the state of a node.",
          "fields": Array [
            Object {
              "dataType": "NodeInfo",
              "defaultValue": undefined,
              "doc": "Some static information about the node.",
              "location": Object {
                "end": 33597,
                "start": 33583,
              },
              "metadata": undefined,
              "name": "info",
            },
            Object {
              "dataType": "ServerDynamicInfoSeq",
              "defaultValue": undefined,
              "doc": "The dynamic information of the servers deployed on this node.",
              "location": Object {
                "end": 33732,
                "start": 33703,
              },
              "metadata": undefined,
              "name": "servers",
            },
            Object {
              "dataType": "AdapterDynamicInfoSeq",
              "defaultValue": undefined,
              "doc": "The dynamic information of the adapters deployed on this node.",
              "location": Object {
                "end": 33870,
                "start": 33839,
              },
              "metadata": undefined,
              "name": "adapters",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 33872,
            "start": 33476,
          },
          "metadata": undefined,
          "name": "NodeDynamicInfo",
          "type": "struct",
        },
        Object {
          "content": Array [
            Object {
              "doc": "The <code>registryInit</code> operation is called after registration of
an observer to indicate the state of the registries.

@param registries The current state of the registries.",
              "idempotent": undefined,
              "location": Object {
                "end": 34294,
                "start": 34248,
              },
              "metadata": undefined,
              "name": "registryInit",
              "parameters": Array [
                Object {
                  "dataType": "RegistryInfoSeq",
                  "location": Object {
                    "end": 34292,
                    "start": 34266,
                  },
                  "metadata": undefined,
                  "name": "registries",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>nodeUp</code> operation is called to notify an observer that a node
came up.

@param node The node state.",
              "idempotent": undefined,
              "location": Object {
                "end": 34509,
                "start": 34474,
              },
              "metadata": undefined,
              "name": "registryUp",
              "parameters": Array [
                Object {
                  "dataType": "RegistryInfo",
                  "location": Object {
                    "end": 34507,
                    "start": 34490,
                  },
                  "metadata": undefined,
                  "name": "node",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>nodeDown</code> operation is called to notify an observer that a node
went down.

@param name The node name.",
              "idempotent": undefined,
              "location": Object {
                "end": 34723,
                "start": 34692,
              },
              "metadata": undefined,
              "name": "registryDown",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 34721,
                    "start": 34710,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This interface allows applications to monitor changes the state
of the registry.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 34725,
            "start": 33976,
          },
          "metadata": undefined,
          "name": "RegistryObserver",
          "type": "interface",
        },
        Object {
          "dataType": "NodeDynamicInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of node dynamic information structures.",
          "local": undefined,
          "location": Object {
            "end": 34841,
            "start": 34796,
          },
          "metadata": undefined,
          "name": "NodeDynamicInfoSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "doc": "The <code>nodeInit</code> operation indicates the current state
of nodes. It is called after the registration of an observer.

@param nodes The current state of the nodes.",
              "idempotent": undefined,
              "location": Object {
                "end": 35298,
                "start": 35258,
              },
              "metadata": undefined,
              "name": "nodeInit",
              "parameters": Array [
                Object {
                  "dataType": "NodeDynamicInfoSeq",
                  "location": Object {
                    "end": 35296,
                    "start": 35272,
                  },
                  "metadata": undefined,
                  "name": "nodes",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>nodeUp</code> operation is called to notify an observer that a node
came up.

@param node The node state.",
              "idempotent": undefined,
              "location": Object {
                "end": 35512,
                "start": 35478,
              },
              "metadata": undefined,
              "name": "nodeUp",
              "parameters": Array [
                Object {
                  "dataType": "NodeDynamicInfo",
                  "location": Object {
                    "end": 35510,
                    "start": 35490,
                  },
                  "metadata": undefined,
                  "name": "node",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>nodeDown</code> operation is called to notify an observer that a node
went down.

@param name The node name.",
              "idempotent": undefined,
              "location": Object {
                "end": 35722,
                "start": 35695,
              },
              "metadata": undefined,
              "name": "nodeDown",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 35720,
                    "start": 35709,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>updateServer</code> operation is called to notify an observer that
the state of a server changed.

@param node The node hosting the server.

@param updatedInfo The new server state.",
              "idempotent": undefined,
              "location": Object {
                "end": 36053,
                "start": 35991,
              },
              "metadata": undefined,
              "name": "updateServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 36020,
                    "start": 36009,
                  },
                  "metadata": undefined,
                  "name": "node",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ServerDynamicInfo",
                  "location": Object {
                    "end": 36051,
                    "start": 36022,
                  },
                  "metadata": undefined,
                  "name": "updatedInfo",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>updateAdapter</code> operation is called to notify an observer that
the state of an adapter changed.

@param node The node hosting the adapter.

@param updatedInfo The new adapter state.",
              "idempotent": undefined,
              "location": Object {
                "end": 36392,
                "start": 36328,
              },
              "metadata": undefined,
              "name": "updateAdapter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 36358,
                    "start": 36347,
                  },
                  "metadata": undefined,
                  "name": "node",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "AdapterDynamicInfo",
                  "location": Object {
                    "end": 36390,
                    "start": 36360,
                  },
                  "metadata": undefined,
                  "name": "updatedInfo",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The node observer interface. Observers should implement this
interface to receive information about the state of the IceGrid
nodes.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 36394,
            "start": 34999,
          },
          "metadata": undefined,
          "name": "NodeObserver",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "<code>applicationInit</code> is called after the registration
of an observer to indicate the state of the registry.

@param serial The current serial number of the registry
database. This serial number allows observers to make sure that
their internal state is synchronized with the registry.

@param applications The applications currently registered with
the registry.",
              "idempotent": undefined,
              "location": Object {
                "end": 37133,
                "start": 37067,
              },
              "metadata": undefined,
              "name": "applicationInit",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 37098,
                    "start": 37088,
                  },
                  "metadata": undefined,
                  "name": "serial",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ApplicationInfoSeq",
                  "location": Object {
                    "end": 37131,
                    "start": 37100,
                  },
                  "metadata": undefined,
                  "name": "applications",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>applicationAdded</code> operation is called to notify an observer
that an application was added.

@param serial The new serial number of the registry database.

@param desc The descriptor of the new application.",
              "idempotent": undefined,
              "location": Object {
                "end": 37488,
                "start": 37432,
              },
              "metadata": undefined,
              "name": "applicationAdded",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 37464,
                    "start": 37454,
                  },
                  "metadata": undefined,
                  "name": "serial",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ApplicationInfo",
                  "location": Object {
                    "end": 37486,
                    "start": 37466,
                  },
                  "metadata": undefined,
                  "name": "desc",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>applicationRemoved</code> operation is called to notify an observer
that an application was removed.

@param serial The new serial number of the registry database.

@param name The name of the application that was removed.",
              "idempotent": undefined,
              "location": Object {
                "end": 37847,
                "start": 37798,
              },
              "metadata": undefined,
              "name": "applicationRemoved",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 37832,
                    "start": 37822,
                  },
                  "metadata": undefined,
                  "name": "serial",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 37845,
                    "start": 37834,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>applicationUpdated</code> operation is called to notify an observer
that an application was updated.

@param serial The new serial number of the registry database.

@param desc The descriptor of the update.",
              "idempotent": undefined,
              "location": Object {
                "end": 38205,
                "start": 38141,
              },
              "metadata": undefined,
              "name": "applicationUpdated",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 38175,
                    "start": 38165,
                  },
                  "metadata": undefined,
                  "name": "serial",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ApplicationUpdateInfo",
                  "location": Object {
                    "end": 38203,
                    "start": 38177,
                  },
                  "metadata": undefined,
                  "name": "desc",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The database observer interface. Observers should implement this
interface to receive information about the state of the IceGrid
registry database.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 38207,
            "start": 36568,
          },
          "metadata": undefined,
          "name": "ApplicationObserver",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "<code>adapterInit</code> is called after registration of
an observer to indicate the state of the registry.

@param adpts The adapters that were dynamically registered
with the registry (not through the deployment mechanism).",
              "idempotent": undefined,
              "location": Object {
                "end": 38701,
                "start": 38662,
              },
              "metadata": undefined,
              "name": "adapterInit",
              "parameters": Array [
                Object {
                  "dataType": "AdapterInfoSeq",
                  "location": Object {
                    "end": 38699,
                    "start": 38679,
                  },
                  "metadata": undefined,
                  "name": "adpts",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>adapterAdded</code> operation is called to notify an observer when
a dynamically-registered adapter was added.

@param info The details of the new adapter.",
              "idempotent": undefined,
              "location": Object {
                "end": 38960,
                "start": 38924,
              },
              "metadata": undefined,
              "name": "adapterAdded",
              "parameters": Array [
                Object {
                  "dataType": "AdapterInfo",
                  "location": Object {
                    "end": 38958,
                    "start": 38942,
                  },
                  "metadata": undefined,
                  "name": "info",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The adapterUpdated operation is called to notify an observer when
a dynamically-registered adapter was updated.

@param info The details of the updated adapter.",
              "idempotent": undefined,
              "location": Object {
                "end": 39223,
                "start": 39185,
              },
              "metadata": undefined,
              "name": "adapterUpdated",
              "parameters": Array [
                Object {
                  "dataType": "AdapterInfo",
                  "location": Object {
                    "end": 39221,
                    "start": 39205,
                  },
                  "metadata": undefined,
                  "name": "info",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The adapterRemoved operation is called to notify an observer when
a dynamically-registered adapter was removed.

@param id The ID of the removed adapter.",
              "idempotent": undefined,
              "location": Object {
                "end": 39472,
                "start": 39441,
              },
              "metadata": undefined,
              "name": "adapterRemoved",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 39470,
                    "start": 39461,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This interface allows applications to monitor the state of object
adapters that are registered with IceGrid.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 39474,
            "start": 38339,
          },
          "metadata": undefined,
          "name": "AdapterObserver",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "<code>objectInit</code> is called after the registration of
an observer to indicate the state of the registry.

@param objects The objects registered with the {@link Admin}
interface (not through the deployment mechanism).",
              "idempotent": undefined,
              "location": Object {
                "end": 39926,
                "start": 39887,
              },
              "metadata": undefined,
              "name": "objectInit",
              "parameters": Array [
                Object {
                  "dataType": "ObjectInfoSeq",
                  "location": Object {
                    "end": 39924,
                    "start": 39903,
                  },
                  "metadata": undefined,
                  "name": "objects",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "The <code>objectAdded</code> operation is called to notify an observer when an
object was added to the {@link Admin} interface.

@param info The details of the added object.",
              "idempotent": undefined,
              "location": Object {
                "end": 40198,
                "start": 40164,
              },
              "metadata": undefined,
              "name": "objectAdded",
              "parameters": Array [
                Object {
                  "dataType": "ObjectInfo",
                  "location": Object {
                    "end": 40196,
                    "start": 40181,
                  },
                  "metadata": undefined,
                  "name": "info",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "<code>objectUpdated</code> is called to notify an observer when
an object registered with the {@link Admin} interface was updated.

@param info The details of the updated object.",
              "idempotent": undefined,
              "location": Object {
                "end": 40477,
                "start": 40441,
              },
              "metadata": undefined,
              "name": "objectUpdated",
              "parameters": Array [
                Object {
                  "dataType": "ObjectInfo",
                  "location": Object {
                    "end": 40475,
                    "start": 40460,
                  },
                  "metadata": undefined,
                  "name": "info",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "<code>objectRemoved</code> is called to notify an observer when
an object registered with the {@link Admin} interface was removed.

@param id The identity of the removed object.",
              "idempotent": undefined,
              "location": Object {
                "end": 40756,
                "start": 40719,
              },
              "metadata": undefined,
              "name": "objectRemoved",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 40754,
                    "start": 40738,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This interface allows applications to monitor IceGrid well-known objects.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 40758,
            "start": 39568,
          },
          "metadata": undefined,
          "name": "ObjectObserver",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Keep the session alive. Clients should call this operation
regularly to prevent the server from reaping the session.

@see Registry#getSessionTimeout",
              "idempotent": true,
              "location": Object {
                "end": 41330,
                "start": 41302,
              },
              "metadata": undefined,
              "name": "keepAlive",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the admin interface. The admin object returned by this
operation can only be accessed by the session.

@return The admin interface proxy.",
              "idempotent": true,
              "location": Object {
                "end": 41594,
                "start": 41536,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAdmin",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Admin*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a \\"template\\" proxy for admin callback objects.
An Admin client uses this proxy to set the category of its callback
objects, and the published endpoints of the object adapter hosting
the admin callback objects.

@return A template proxy. The returned proxy is null when the Admin
session was established using Glacier2.",
              "idempotent": true,
              "location": Object {
                "end": 42062,
                "start": 42002,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getAdminCallbackTemplate",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Set the observer proxies that receive
notifications when the state of the registry
or nodes changes.

@param registryObs The registry observer.

@param nodeObs The node observer.

@param appObs The application observer.

@param adptObs The adapter observer.

@param objObs The object observer.

@throws ObserverAlreadyRegisteredException Raised if an
observer is already registered with this registry.",
              "idempotent": true,
              "location": Object {
                "end": 42852,
                "start": 42607,
              },
              "metadata": undefined,
              "name": "setObservers",
              "parameters": Array [
                Object {
                  "dataType": "RegistryObserver*",
                  "location": Object {
                    "end": 42665,
                    "start": 42636,
                  },
                  "metadata": undefined,
                  "name": "registryObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "NodeObserver*",
                  "location": Object {
                    "end": 42688,
                    "start": 42667,
                  },
                  "metadata": undefined,
                  "name": "nodeObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ApplicationObserver*",
                  "location": Object {
                    "end": 42717,
                    "start": 42690,
                  },
                  "metadata": undefined,
                  "name": "appObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "AdapterObserver*",
                  "location": Object {
                    "end": 42776,
                    "start": 42752,
                  },
                  "metadata": undefined,
                  "name": "adptObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ObjectObserver*",
                  "location": Object {
                    "end": 42800,
                    "start": 42778,
                  },
                  "metadata": undefined,
                  "name": "objObs",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObserverAlreadyRegisteredException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Set the observer identities that receive
notifications the state of the registry
or nodes changes. This operation should be used by clients that
are using a bidirectional connection to communicate with the
session.

@param registryObs The registry observer identity.

@param nodeObs The node observer identity.

@param appObs The application observer.

@param adptObs The adapter observer.

@param objObs The object observer.

@throws ObserverAlreadyRegisteredException Raised if an
observer is already registered with this registry.",
              "idempotent": true,
              "location": Object {
                "end": 43792,
                "start": 43543,
              },
              "metadata": undefined,
              "name": "setObserversByIdentity",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 43607,
                    "start": 43582,
                  },
                  "metadata": undefined,
                  "name": "registryObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 43630,
                    "start": 43609,
                  },
                  "metadata": undefined,
                  "name": "nodeObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 43652,
                    "start": 43632,
                  },
                  "metadata": undefined,
                  "name": "appObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 43718,
                    "start": 43697,
                  },
                  "metadata": undefined,
                  "name": "adptObs",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 43740,
                    "start": 43720,
                  },
                  "metadata": undefined,
                  "name": "objObs",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObserverAlreadyRegisteredException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Acquires an exclusive lock to start updating the registry applications.

@return The current serial.

@throws AccessDeniedException Raised if the exclusive lock can't be
acquired. This might happen if the lock is currently acquired by
another session.",
              "idempotent": undefined,
              "location": Object {
                "end": 44183,
                "start": 44128,
              },
              "metadata": undefined,
              "name": "startUpdate",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": Array [
                "AccessDeniedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Finish updating the registry and release the exclusive lock.

@throws AccessDeniedException Raised if the session doesn't hold the
exclusive lock.",
              "idempotent": undefined,
              "location": Object {
                "end": 44451,
                "start": 44394,
              },
              "metadata": undefined,
              "name": "finishUpdate",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "AccessDeniedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the name of the registry replica hosting this session.

@return The replica name of the registry.",
              "idempotent": true,
              "location": Object {
                "end": 44659,
                "start": 44610,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getReplicaName",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Open the given server log file for reading. The file can be
read with the returned file iterator.

@param id The server id.

@param path The path of the log file. A log file can be opened
only if it's declared in the server or service deployment
descriptor.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": undefined,
              "location": Object {
                "end": 45821,
                "start": 45645,
              },
              "metadata": undefined,
              "name": "openServerLog",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 45682,
                    "start": 45673,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 45695,
                    "start": 45684,
                  },
                  "metadata": undefined,
                  "name": "path",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 45706,
                    "start": 45697,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator*",
              "throws": Array [
                "FileNotAvailableException",
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Open the given server stderr file for reading. The file can be
read with the returned file iterator.

@param id The server id.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": undefined,
              "location": Object {
                "end": 46815,
                "start": 46649,
              },
              "metadata": undefined,
              "name": "openServerStdErr",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 46689,
                    "start": 46680,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 46700,
                    "start": 46691,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator*",
              "throws": Array [
                "FileNotAvailableException",
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Open the given server stdout file for reading. The file can be
read with the returned file iterator.

@param id The server id.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws ServerNotExistException Raised if the server doesn't
exist.

@throws NodeUnreachableException Raised if the node could not
be reached.

@throws DeploymentException Raised if the server couldn't be
deployed on the node.",
              "idempotent": undefined,
              "location": Object {
                "end": 47809,
                "start": 47643,
              },
              "metadata": undefined,
              "name": "openServerStdOut",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 47683,
                    "start": 47674,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 47694,
                    "start": 47685,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator*",
              "throws": Array [
                "FileNotAvailableException",
                "ServerNotExistException",
                "NodeUnreachableException",
                "DeploymentException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Open the given node stderr file for reading. The file can be
read with the returned file iterator.

@param name The node name.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not
be reached.",
              "idempotent": undefined,
              "location": Object {
                "end": 48665,
                "start": 48522,
              },
              "metadata": undefined,
              "name": "openNodeStdErr",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 48562,
                    "start": 48551,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 48573,
                    "start": 48564,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator*",
              "throws": Array [
                "FileNotAvailableException",
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Open the given node stdout file for reading. The file can be
read with the returned file iterator.

@param name The node name.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not
be reached.",
              "idempotent": undefined,
              "location": Object {
                "end": 49521,
                "start": 49378,
              },
              "metadata": undefined,
              "name": "openNodeStdOut",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 49418,
                    "start": 49407,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 49429,
                    "start": 49420,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator*",
              "throws": Array [
                "FileNotAvailableException",
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Open the given registry stderr file for reading. The file can be
read with the returned file iterator.

@param name The registry name.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws RegistryNotExistException Raised if the registry
doesn't exist.

@throws RegistryUnreachableException Raised if the registry
could not be reached.",
              "idempotent": undefined,
              "location": Object {
                "end": 50420,
                "start": 50265,
              },
              "metadata": undefined,
              "name": "openRegistryStdErr",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 50309,
                    "start": 50298,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 50320,
                    "start": 50311,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator*",
              "throws": Array [
                "FileNotAvailableException",
                "RegistryNotExistException",
                "RegistryUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Open the given registry stdout file for reading. The file can be
read with the returned file iterator.

@param name The registry name.

@param count Specifies where to start reading the file. If
negative, the file is read from the begining. If 0 or positive,
the file is read from the last <code>count</code> lines.

@return An iterator to read the file.

@throws FileNotAvailableException Raised if the file can't be
read.

@throws RegistryNotExistException Raised if the registry
doesn't exist.

@throws RegistryUnreachableException Raised if the registry
could not be reached.",
              "idempotent": undefined,
              "location": Object {
                "end": 51320,
                "start": 51164,
              },
              "metadata": undefined,
              "name": "openRegistryStdOut",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 51209,
                    "start": 51198,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 51220,
                    "start": 51211,
                  },
                  "metadata": undefined,
                  "name": "count",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileIterator *",
              "throws": Array [
                "FileNotAvailableException",
                "RegistryNotExistException",
                "RegistryUnreachableException",
              ],
              "type": "operation",
            },
          ],
          "doc": "Used by administrative clients to view,
update, and receive observer updates from the IceGrid
registry. Admin sessions are created either via the {@link Registry}
object or via the registry admin <code>SessionManager</code> object.

@see Registry",
          "extends": Array [
            "Glacier2::Session",
          ],
          "local": undefined,
          "location": Object {
            "end": 51323,
            "start": 41039,
          },
          "metadata": undefined,
          "name": "AdminSession",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 51326,
        "start": 635,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/Descriptor.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "cpp:dll-export:ICEGRID_API",
    "objc:dll-export:ICEGRID_API",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "A mapping of string to string.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 644,
            "start": 600,
          },
          "metadata": undefined,
          "name": "StringStringDict",
          "type": "dictionary",
          "valueType": "string",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": "Property descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the property.",
              "location": Object {
                "end": 793,
                "start": 781,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The value of the property.",
              "location": Object {
                "end": 877,
                "start": 864,
              },
              "metadata": undefined,
              "name": "value",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 879,
            "start": 685,
          },
          "metadata": undefined,
          "name": "PropertyDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "PropertyDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of property descriptors.",
          "local": undefined,
          "location": Object {
            "end": 1041,
            "start": 935,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<PropertyDescriptor>",
          ],
          "name": "PropertyDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "doc": "A property set descriptor.",
          "fields": Array [
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "References to named property sets.",
              "location": Object {
                "end": 1241,
                "start": 1215,
              },
              "metadata": undefined,
              "name": "references",
            },
            Object {
              "dataType": "PropertyDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The property set properties.",
              "location": Object {
                "end": 1347,
                "start": 1314,
              },
              "metadata": undefined,
              "name": "properties",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1349,
            "start": 1088,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "PropertySetDescriptor",
          "type": "struct",
        },
        Object {
          "doc": "A mapping of property set name to property set descriptor.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 1496,
            "start": 1428,
          },
          "metadata": undefined,
          "name": "PropertySetDescriptorDict",
          "type": "dictionary",
          "valueType": "PropertySetDescriptor",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": "An Ice object descriptor.",
          "fields": Array [
            Object {
              "dataType": "Ice::Identity",
              "defaultValue": undefined,
              "doc": "The identity of the object.",
              "location": Object {
                "end": 1655,
                "start": 1638,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The object type.",
              "location": Object {
                "end": 1728,
                "start": 1716,
              },
              "metadata": undefined,
              "name": "type",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Proxy options to use with the proxy created for this Ice object. If empty,
the proxy will be created with the proxy options specified on the object
adapter or replica group.",
              "location": Object {
                "end": 1980,
                "start": 1960,
              },
              "metadata": undefined,
              "name": "proxyOptions",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1982,
            "start": 1542,
          },
          "metadata": undefined,
          "name": "ObjectDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "ObjectDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of object descriptors.",
          "local": undefined,
          "location": Object {
            "end": 2136,
            "start": 2036,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ObjectDescriptor>",
          ],
          "name": "ObjectDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "doc": "An Ice object adapter descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The object adapter name.",
              "location": Object {
                "end": 2315,
                "start": 2303,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The description of this object adapter.",
              "location": Object {
                "end": 2418,
                "start": 2399,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The object adapter id.",
              "location": Object {
                "end": 2495,
                "start": 2485,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The replica id of this adapter.",
              "location": Object {
                "end": 2593,
                "start": 2571,
              },
              "metadata": undefined,
              "name": "replicaGroupId",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The adapter priority. This is eventually used when the adapter
is member of a replica group to sort the adapter endpoints by
priority.",
              "location": Object {
                "end": 2802,
                "start": 2786,
              },
              "metadata": undefined,
              "name": "priority",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": "Flag to specify if the object adapter will register a process object.",
              "location": Object {
                "end": 2937,
                "start": 2916,
              },
              "metadata": undefined,
              "name": "registerProcess",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": "If true the lifetime of this object adapter is the same of the
server lifetime. This information is used by the IceGrid node
to figure out the server state: the server is active only if
all its \\"server lifetime\\" adapters are active.",
              "location": Object {
                "end": 3255,
                "start": 3235,
              },
              "metadata": undefined,
              "name": "serverLifetime",
            },
            Object {
              "dataType": "ObjectDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The well-known object descriptors associated with this object adapter.",
              "location": Object {
                "end": 3398,
                "start": 3370,
              },
              "metadata": undefined,
              "name": "objects",
            },
            Object {
              "dataType": "ObjectDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The allocatable object descriptors associated with this object adapter.",
              "location": Object {
                "end": 3547,
                "start": 3514,
              },
              "metadata": undefined,
              "name": "allocatables",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 3549,
            "start": 2190,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "AdapterDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "AdapterDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of adapter descriptors.",
          "local": undefined,
          "location": Object {
            "end": 3707,
            "start": 3604,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<AdapterDescriptor>",
          ],
          "name": "AdapterDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "doc": "A Freeze database environment descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the database environment.",
              "location": Object {
                "end": 3905,
                "start": 3893,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The description of this database environment.",
              "location": Object {
                "end": 4014,
                "start": 3995,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The home of the database environment (i.e., the directory where
the database files will be stored). If empty, the node will
provide a default database directory, otherwise the directory
must exist.",
              "location": Object {
                "end": 4291,
                "start": 4277,
              },
              "metadata": undefined,
              "name": "dbHome",
            },
            Object {
              "dataType": "PropertyDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The configuration properties of the database environment.",
              "location": Object {
                "end": 4426,
                "start": 4393,
              },
              "metadata": undefined,
              "name": "properties",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 4428,
            "start": 3769,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "DbEnvDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "DbEnvDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of database environment descriptors.",
          "local": undefined,
          "location": Object {
            "end": 4593,
            "start": 4496,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<DbEnvDescriptor>",
          ],
          "name": "DbEnvDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "AdapterDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The object adapters.",
              "location": Object {
                "end": 4764,
                "start": 4734,
              },
              "metadata": undefined,
              "name": "adapters",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "PropertySetDescriptor",
              "defaultValue": undefined,
              "doc": "The property set.",
              "location": Object {
                "end": 4860,
                "start": 4826,
              },
              "metadata": undefined,
              "name": "propertySet",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "DbEnvDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The database environments.",
              "location": Object {
                "end": 4957,
                "start": 4931,
              },
              "metadata": undefined,
              "name": "dbEnvs",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The path of each log file.",
              "location": Object {
                "end": 5048,
                "start": 5028,
              },
              "metadata": undefined,
              "name": "logs",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "A description of this descriptor.",
              "location": Object {
                "end": 5145,
                "start": 5126,
              },
              "metadata": undefined,
              "name": "description",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "A communicator descriptor.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5147,
            "start": 4640,
          },
          "metadata": undefined,
          "name": "CommunicatorDescriptor",
          "type": "class",
        },
        Object {
          "doc": "A distribution descriptor defines an IcePatch2 server and the
directories to retrieve from the patch server.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5396,
                "start": 5380,
              },
              "metadata": undefined,
              "name": "icepatch",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 5507,
                "start": 5437,
              },
              "metadata": Array [
                "java:type:java.util.LinkedList<String>",
              ],
              "name": "directories",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 5509,
            "start": 5279,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "DistributionDescriptor",
          "type": "struct",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The server id.",
              "location": Object {
                "end": 5678,
                "start": 5668,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The path of the server executable.",
              "location": Object {
                "end": 5768,
                "start": 5757,
              },
              "metadata": undefined,
              "name": "exe",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The Ice version used by this server. This is only required if
backward compatibility with servers using old Ice versions is
needed (otherwise the registry will assume the server is using
the same Ice version).
For example \\"3.1.1\\", \\"3.2\\", \\"3.3.0\\".",
              "location": Object {
                "end": 6105,
                "start": 6087,
              },
              "metadata": undefined,
              "name": "iceVersion",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The path to the server working directory.",
              "location": Object {
                "end": 6202,
                "start": 6191,
              },
              "metadata": undefined,
              "name": "pwd",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The command line options to pass to the server executable.",
              "location": Object {
                "end": 6371,
                "start": 6305,
              },
              "metadata": Array [
                "java:type:java.util.LinkedList<String>",
              ],
              "name": "options",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The server environment variables.",
              "location": Object {
                "end": 6512,
                "start": 6449,
              },
              "metadata": Array [
                "java:type:java.util.LinkedList<String>",
              ],
              "name": "envs",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The server activation mode (possible values are \\"on-demand\\" or
\\"manual\\").",
              "location": Object {
                "end": 6655,
                "start": 6637,
              },
              "metadata": undefined,
              "name": "activation",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The activation timeout (an integer value representing the
number of seconds to wait for activation).",
              "location": Object {
                "end": 6832,
                "start": 6807,
              },
              "metadata": undefined,
              "name": "activationTimeout",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The deactivation timeout (an integer value representing the
number of seconds to wait for deactivation).",
              "location": Object {
                "end": 7015,
                "start": 6988,
              },
              "metadata": undefined,
              "name": "deactivationTimeout",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": "Specifies if the server depends on the application
distribution.",
              "location": Object {
                "end": 7155,
                "start": 7131,
              },
              "metadata": undefined,
              "name": "applicationDistrib",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "DistributionDescriptor",
              "defaultValue": undefined,
              "doc": "The distribution descriptor.",
              "location": Object {
                "end": 7259,
                "start": 7228,
              },
              "metadata": undefined,
              "name": "distrib",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": "Specifies if the server is allocatable.",
              "location": Object {
                "end": 7360,
                "start": 7343,
              },
              "metadata": undefined,
              "name": "allocatable",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The user account used to run the server.",
              "location": Object {
                "end": 7457,
                "start": 7445,
              },
              "metadata": undefined,
              "name": "user",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "An Ice server descriptor.",
          "extends": "CommunicatorDescriptor",
          "local": undefined,
          "location": Object {
            "end": 7459,
            "start": 5555,
          },
          "metadata": undefined,
          "name": "ServerDescriptor",
          "type": "class",
        },
        Object {
          "dataType": "ServerDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of server descriptors.",
          "local": undefined,
          "location": Object {
            "end": 7613,
            "start": 7513,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ServerDescriptor>",
          ],
          "name": "ServerDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The service name.",
              "location": Object {
                "end": 7792,
                "start": 7780,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The entry point of the IceBox service.",
              "location": Object {
                "end": 7888,
                "start": 7875,
              },
              "metadata": undefined,
              "name": "entry",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "An IceBox service descriptor.",
          "extends": "CommunicatorDescriptor",
          "local": undefined,
          "location": Object {
            "end": 7890,
            "start": 7663,
          },
          "metadata": undefined,
          "name": "ServiceDescriptor",
          "type": "class",
        },
        Object {
          "dataType": "ServiceDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of service descriptors.",
          "local": undefined,
          "location": Object {
            "end": 8048,
            "start": 7945,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ServiceDescriptor>",
          ],
          "name": "ServiceDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "doc": "A server template instance descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The template used by this instance.",
              "location": Object {
                "end": 8254,
                "start": 8238,
              },
              "metadata": undefined,
              "name": "template",
            },
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The template parameter values.",
              "location": Object {
                "end": 8362,
                "start": 8329,
              },
              "metadata": undefined,
              "name": "parameterValues",
            },
            Object {
              "dataType": "PropertySetDescriptor",
              "defaultValue": undefined,
              "doc": "The property set.",
              "location": Object {
                "end": 8458,
                "start": 8424,
              },
              "metadata": undefined,
              "name": "propertySet",
            },
            Object {
              "dataType": "PropertySetDescriptorDict",
              "defaultValue": undefined,
              "doc": "The services property sets. It's only valid to set these
property sets if the template is an IceBox server template.",
              "location": Object {
                "end": 8672,
                "start": 8626,
              },
              "metadata": undefined,
              "name": "servicePropertySets",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 8674,
            "start": 8107,
          },
          "metadata": Array [
            "cpp:comparable",
          ],
          "name": "ServerInstanceDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "ServerInstanceDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of server instance descriptors.",
          "local": undefined,
          "location": Object {
            "end": 8861,
            "start": 8737,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ServerInstanceDescriptor>",
          ],
          "name": "ServerInstanceDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "doc": "A template descriptor for server or service templates.",
          "fields": Array [
            Object {
              "dataType": "CommunicatorDescriptor",
              "defaultValue": undefined,
              "doc": "The template.",
              "location": Object {
                "end": 9054,
                "start": 9020,
              },
              "metadata": undefined,
              "name": "descriptor",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The parameters required to instantiate the template.",
              "location": Object {
                "end": 9220,
                "start": 9151,
              },
              "metadata": Array [
                "java:type:java.util.LinkedList<String>",
              ],
              "name": "parameters",
            },
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The parameters default values.",
              "location": Object {
                "end": 9330,
                "start": 9295,
              },
              "metadata": undefined,
              "name": "parameterDefaults",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 9332,
            "start": 8936,
          },
          "metadata": undefined,
          "name": "TemplateDescriptor",
          "type": "struct",
        },
        Object {
          "doc": "A mapping of template identifier to template descriptor.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 9471,
            "start": 9409,
          },
          "metadata": undefined,
          "name": "TemplateDescriptorDict",
          "type": "dictionary",
          "valueType": "TemplateDescriptor",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": "A service template instance descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The template used by this instance.",
              "location": Object {
                "end": 9660,
                "start": 9644,
              },
              "metadata": undefined,
              "name": "template",
            },
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The template parameter values.",
              "location": Object {
                "end": 9768,
                "start": 9735,
              },
              "metadata": undefined,
              "name": "parameterValues",
            },
            Object {
              "dataType": "ServiceDescriptor",
              "defaultValue": undefined,
              "doc": "The service definition if the instance isn't a template
instance (i.e.: if the template attribute is empty).",
              "location": Object {
                "end": 9957,
                "start": 9928,
              },
              "metadata": undefined,
              "name": "descriptor",
            },
            Object {
              "dataType": "PropertySetDescriptor",
              "defaultValue": undefined,
              "doc": "The property set.",
              "location": Object {
                "end": 10053,
                "start": 10019,
              },
              "metadata": undefined,
              "name": "propertySet",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 10055,
            "start": 9531,
          },
          "metadata": undefined,
          "name": "ServiceInstanceDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "ServiceInstanceDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of service instance descriptors.",
          "local": undefined,
          "location": Object {
            "end": 10246,
            "start": 10119,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ServiceInstanceDescriptor>",
          ],
          "name": "ServiceInstanceDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "ServiceInstanceDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The service instances.",
              "location": Object {
                "end": 10448,
                "start": 10410,
              },
              "metadata": undefined,
              "name": "services",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "An IceBox server descriptor.",
          "extends": "ServerDescriptor",
          "local": undefined,
          "location": Object {
            "end": 10450,
            "start": 10295,
          },
          "metadata": undefined,
          "name": "IceBoxDescriptor",
          "type": "class",
        },
        Object {
          "doc": "A node descriptor.",
          "fields": Array [
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The variables defined for the node.",
              "location": Object {
                "end": 10666,
                "start": 10591,
              },
              "metadata": Array [
                "java:type:java.util.TreeMap<String, String>",
              ],
              "name": "variables",
            },
            Object {
              "dataType": "ServerInstanceDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The server instances.",
              "location": Object {
                "end": 10776,
                "start": 10732,
              },
              "metadata": undefined,
              "name": "serverInstances",
            },
            Object {
              "dataType": "ServerDescriptorSeq",
              "defaultValue": undefined,
              "doc": "Servers (which are not template instances).",
              "location": Object {
                "end": 10892,
                "start": 10864,
              },
              "metadata": undefined,
              "name": "servers",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Load factor of the node.",
              "location": Object {
                "end": 10979,
                "start": 10961,
              },
              "metadata": undefined,
              "name": "loadFactor",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The description of this node.",
              "location": Object {
                "end": 11072,
                "start": 11053,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "PropertySetDescriptorDict",
              "defaultValue": undefined,
              "doc": "Property set descriptors.",
              "location": Object {
                "end": 11181,
                "start": 11142,
              },
              "metadata": undefined,
              "name": "propertySets",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 11183,
            "start": 10489,
          },
          "metadata": undefined,
          "name": "NodeDescriptor",
          "type": "struct",
        },
        Object {
          "doc": "Mapping of node name to node descriptor.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 11298,
            "start": 11244,
          },
          "metadata": undefined,
          "name": "NodeDescriptorDict",
          "type": "dictionary",
          "valueType": "NodeDescriptor",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The number of replicas that will be used to gather the
endpoints of a replica group.",
              "location": Object {
                "end": 11539,
                "start": 11522,
              },
              "metadata": undefined,
              "name": "nReplicas",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "A base class for load balancing policies.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 11541,
            "start": 11360,
          },
          "metadata": undefined,
          "name": "LoadBalancingPolicy",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": "Random load balancing policy.",
          "extends": "LoadBalancingPolicy",
          "local": undefined,
          "location": Object {
            "end": 11654,
            "start": 11591,
          },
          "metadata": undefined,
          "name": "RandomLoadBalancingPolicy",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": "Ordered load balancing policy.",
          "extends": "LoadBalancingPolicy",
          "local": undefined,
          "location": Object {
            "end": 11769,
            "start": 11705,
          },
          "metadata": undefined,
          "name": "OrderedLoadBalancingPolicy",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": "Round robin load balancing policy.",
          "extends": "LoadBalancingPolicy",
          "local": undefined,
          "location": Object {
            "end": 11891,
            "start": 11824,
          },
          "metadata": undefined,
          "name": "RoundRobinLoadBalancingPolicy",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The load sample to use for the load balancing. The allowed
values for this attribute are \\"1\\", \\"5\\" and \\"15\\", representing
respectively the load average over the past minute, the past 5
minutes and the past 15 minutes.",
              "location": Object {
                "end": 12305,
                "start": 12287,
              },
              "metadata": undefined,
              "name": "loadSample",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Adaptive load balancing policy.",
          "extends": "LoadBalancingPolicy",
          "local": undefined,
          "location": Object {
            "end": 12307,
            "start": 11943,
          },
          "metadata": undefined,
          "name": "AdaptiveLoadBalancingPolicy",
          "type": "class",
        },
        Object {
          "doc": "A replica group descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the replica group.",
              "location": Object {
                "end": 12468,
                "start": 12458,
              },
              "metadata": undefined,
              "name": "id",
            },
            Object {
              "dataType": "LoadBalancingPolicy",
              "defaultValue": undefined,
              "doc": "The load balancing policy.",
              "location": Object {
                "end": 12573,
                "start": 12539,
              },
              "metadata": undefined,
              "name": "loadBalancing",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "Default options for proxies created for the replica group.",
              "location": Object {
                "end": 12696,
                "start": 12676,
              },
              "metadata": undefined,
              "name": "proxyOptions",
            },
            Object {
              "dataType": "ObjectDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The object descriptors associated with this object adapter.",
              "location": Object {
                "end": 12828,
                "start": 12800,
              },
              "metadata": undefined,
              "name": "objects",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The description of this replica group.",
              "location": Object {
                "end": 12930,
                "start": 12911,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The filter to use for this replica group.",
              "location": Object {
                "end": 13030,
                "start": 13016,
              },
              "metadata": undefined,
              "name": "filter",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 13032,
            "start": 12355,
          },
          "metadata": undefined,
          "name": "ReplicaGroupDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "ReplicaGroupDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of replica groups.",
          "local": undefined,
          "location": Object {
            "end": 13200,
            "start": 13082,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ReplicaGroupDescriptor>",
          ],
          "name": "ReplicaGroupDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "doc": "An application descriptor.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The application name.",
              "location": Object {
                "end": 13354,
                "start": 13342,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The variables defined in the application descriptor.",
              "location": Object {
                "end": 13526,
                "start": 13451,
              },
              "metadata": Array [
                "java:type:java.util.TreeMap<String, String>",
              ],
              "name": "variables",
            },
            Object {
              "dataType": "ReplicaGroupDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The replica groups.",
              "location": Object {
                "end": 13630,
                "start": 13590,
              },
              "metadata": undefined,
              "name": "replicaGroups",
            },
            Object {
              "dataType": "TemplateDescriptorDict",
              "defaultValue": undefined,
              "doc": "The server templates.",
              "location": Object {
                "end": 13735,
                "start": 13696,
              },
              "metadata": undefined,
              "name": "serverTemplates",
            },
            Object {
              "dataType": "TemplateDescriptorDict",
              "defaultValue": undefined,
              "doc": "The service templates.",
              "location": Object {
                "end": 13842,
                "start": 13802,
              },
              "metadata": undefined,
              "name": "serviceTemplates",
            },
            Object {
              "dataType": "NodeDescriptorDict",
              "defaultValue": undefined,
              "doc": "The application nodes.",
              "location": Object {
                "end": 13934,
                "start": 13909,
              },
              "metadata": undefined,
              "name": "nodes",
            },
            Object {
              "dataType": "DistributionDescriptor",
              "defaultValue": undefined,
              "doc": "The application distribution.",
              "location": Object {
                "end": 14039,
                "start": 14008,
              },
              "metadata": undefined,
              "name": "distrib",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The description of this application.",
              "location": Object {
                "end": 14139,
                "start": 14120,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "PropertySetDescriptorDict",
              "defaultValue": undefined,
              "doc": "Property set descriptors.",
              "location": Object {
                "end": 14248,
                "start": 14209,
              },
              "metadata": undefined,
              "name": "propertySets",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 14250,
            "start": 13247,
          },
          "metadata": undefined,
          "name": "ApplicationDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "ApplicationDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of application descriptors.",
          "local": undefined,
          "location": Object {
            "end": 14424,
            "start": 14309,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<ApplicationDescriptor>",
          ],
          "name": "ApplicationDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 14541,
                "start": 14528,
              },
              "metadata": undefined,
              "name": "value",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "A \\"boxed\\" string.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 14543,
            "start": 14462,
          },
          "metadata": undefined,
          "name": "BoxedString",
          "type": "class",
        },
        Object {
          "doc": "A node update descriptor to describe the updates to apply to a
node of a deployed application.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the node to update.",
              "location": Object {
                "end": 14777,
                "start": 14765,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "BoxedString",
              "defaultValue": undefined,
              "doc": "The updated description (or null if the description wasn't
updated.)",
              "location": Object {
                "end": 14921,
                "start": 14897,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The variables to update.",
              "location": Object {
                "end": 15065,
                "start": 14990,
              },
              "metadata": Array [
                "java:type:java.util.TreeMap<String, String>",
              ],
              "name": "variables",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The variables to remove.",
              "location": Object {
                "end": 15165,
                "start": 15134,
              },
              "metadata": undefined,
              "name": "removeVariables",
            },
            Object {
              "dataType": "PropertySetDescriptorDict",
              "defaultValue": undefined,
              "doc": "The property sets to update.",
              "location": Object {
                "end": 15277,
                "start": 15238,
              },
              "metadata": undefined,
              "name": "propertySets",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The property sets to remove.",
              "location": Object {
                "end": 15384,
                "start": 15350,
              },
              "metadata": undefined,
              "name": "removePropertySets",
            },
            Object {
              "dataType": "ServerInstanceDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The server instances to update.",
              "location": Object {
                "end": 15504,
                "start": 15460,
              },
              "metadata": undefined,
              "name": "serverInstances",
            },
            Object {
              "dataType": "ServerDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The servers which are not template instances to update.",
              "location": Object {
                "end": 15632,
                "start": 15604,
              },
              "metadata": undefined,
              "name": "servers",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The ids of the servers to remove.",
              "location": Object {
                "end": 15739,
                "start": 15710,
              },
              "metadata": undefined,
              "name": "removeServers",
            },
            Object {
              "dataType": "BoxedString",
              "defaultValue": undefined,
              "doc": "The updated load factor of the node (or null if the load factor
was not updated).",
              "location": Object {
                "end": 15895,
                "start": 15872,
              },
              "metadata": undefined,
              "name": "loadFactor",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 15897,
            "start": 14661,
          },
          "metadata": undefined,
          "name": "NodeUpdateDescriptor",
          "type": "struct",
        },
        Object {
          "dataType": "NodeUpdateDescriptor",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of node update descriptors.",
          "local": undefined,
          "location": Object {
            "end": 16068,
            "start": 15956,
          },
          "metadata": Array [
            "java:type:java.util.LinkedList<NodeUpdateDescriptor>",
          ],
          "name": "NodeUpdateDescriptorSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "DistributionDescriptor",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 16251,
                "start": 16222,
              },
              "metadata": undefined,
              "name": "value",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "A \\"boxed\\" distribution descriptor.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 16253,
            "start": 16123,
          },
          "metadata": undefined,
          "name": "BoxedDistributionDescriptor",
          "type": "class",
        },
        Object {
          "doc": "An application update descriptor to describe the updates to apply
to a deployed application.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the application to update.",
              "location": Object {
                "end": 16499,
                "start": 16487,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "BoxedString",
              "defaultValue": undefined,
              "doc": "The updated description (or null if the description wasn't
updated.)",
              "location": Object {
                "end": 16643,
                "start": 16619,
              },
              "metadata": undefined,
              "name": "description",
            },
            Object {
              "dataType": "BoxedDistributionDescriptor",
              "defaultValue": undefined,
              "doc": "The updated distribution application descriptor.",
              "location": Object {
                "end": 16772,
                "start": 16736,
              },
              "metadata": undefined,
              "name": "distrib",
            },
            Object {
              "dataType": "StringStringDict",
              "defaultValue": undefined,
              "doc": "The variables to update.",
              "location": Object {
                "end": 16916,
                "start": 16841,
              },
              "metadata": Array [
                "java:type:java.util.TreeMap<String, String>",
              ],
              "name": "variables",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The variables to remove.",
              "location": Object {
                "end": 17016,
                "start": 16985,
              },
              "metadata": undefined,
              "name": "removeVariables",
            },
            Object {
              "dataType": "PropertySetDescriptorDict",
              "defaultValue": undefined,
              "doc": "The property sets to update.",
              "location": Object {
                "end": 17128,
                "start": 17089,
              },
              "metadata": undefined,
              "name": "propertySets",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The property sets to remove.",
              "location": Object {
                "end": 17235,
                "start": 17201,
              },
              "metadata": undefined,
              "name": "removePropertySets",
            },
            Object {
              "dataType": "ReplicaGroupDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The replica groups to update.",
              "location": Object {
                "end": 17349,
                "start": 17309,
              },
              "metadata": undefined,
              "name": "replicaGroups",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The replica groups to remove.",
              "location": Object {
                "end": 17458,
                "start": 17423,
              },
              "metadata": undefined,
              "name": "removeReplicaGroups",
            },
            Object {
              "dataType": "TemplateDescriptorDict",
              "defaultValue": undefined,
              "doc": "The server templates to update.",
              "location": Object {
                "end": 17573,
                "start": 17534,
              },
              "metadata": undefined,
              "name": "serverTemplates",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The ids of the server template to remove.",
              "location": Object {
                "end": 17696,
                "start": 17659,
              },
              "metadata": undefined,
              "name": "removeServerTemplates",
            },
            Object {
              "dataType": "TemplateDescriptorDict",
              "defaultValue": undefined,
              "doc": "The service templates to update.",
              "location": Object {
                "end": 17813,
                "start": 17773,
              },
              "metadata": undefined,
              "name": "serviceTemplates",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The ids of the service template to remove.",
              "location": Object {
                "end": 17938,
                "start": 17900,
              },
              "metadata": undefined,
              "name": "removeServiceTemplates",
            },
            Object {
              "dataType": "NodeUpdateDescriptorSeq",
              "defaultValue": undefined,
              "doc": "The application nodes to update.",
              "location": Object {
                "end": 18045,
                "start": 18015,
              },
              "metadata": undefined,
              "name": "nodes",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The nodes to remove.",
              "location": Object {
                "end": 18137,
                "start": 18110,
              },
              "metadata": undefined,
              "name": "removeNodes",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 18139,
            "start": 16369,
          },
          "metadata": undefined,
          "name": "ApplicationUpdateDescriptor",
          "type": "struct",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 18142,
        "start": 509,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/Exception.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "cpp:dll-export:ICEGRID_API",
    "objc:dll-export:ICEGRID_API",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the application.",
              "location": Object {
                "end": 752,
                "start": 740,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an application does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 754,
            "start": 628,
          },
          "metadata": undefined,
          "name": "ApplicationNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 944,
                "start": 934,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a server does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 946,
            "start": 827,
          },
          "metadata": undefined,
          "name": "ServerNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The identifier of the server.",
              "location": Object {
                "end": 1135,
                "start": 1125,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 1221,
                "start": 1207,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a server failed to start.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1223,
            "start": 1020,
          },
          "metadata": undefined,
          "name": "ServerStartException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The identifier of the server.",
              "location": Object {
                "end": 1410,
                "start": 1400,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 1496,
                "start": 1482,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a server failed to stop.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1498,
            "start": 1296,
          },
          "metadata": undefined,
          "name": "ServerStopException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the object adapter.",
              "location": Object {
                "end": 1692,
                "start": 1682,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an adapter does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1694,
            "start": 1573,
          },
          "metadata": undefined,
          "name": "AdapterNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "Ice::Identity",
              "defaultValue": undefined,
              "doc": "The identity of the object.",
              "location": Object {
                "end": 1889,
                "start": 1872,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an object already exists.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1891,
            "start": 1768,
          },
          "metadata": undefined,
          "name": "ObjectExistsException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "Ice::Identity",
              "defaultValue": undefined,
              "doc": "The identity of the object.",
              "location": Object {
                "end": 2096,
                "start": 2079,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an object is not registered.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2098,
            "start": 1968,
          },
          "metadata": undefined,
          "name": "ObjectNotRegisteredException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The node name.",
              "location": Object {
                "end": 2272,
                "start": 2260,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a node does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2274,
            "start": 2169,
          },
          "metadata": undefined,
          "name": "NodeNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The registry name.",
              "location": Object {
                "end": 2460,
                "start": 2448,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a registry does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2462,
            "start": 2349,
          },
          "metadata": undefined,
          "name": "RegistryNotExistException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 2634,
                "start": 2620,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "An exception for deployment errors.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2636,
            "start": 2518,
          },
          "metadata": undefined,
          "name": "DeploymentException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the node that is not reachable.",
              "location": Object {
                "end": 2848,
                "start": 2836,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why the node couldn't be reached.",
              "location": Object {
                "end": 2951,
                "start": 2937,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a node could not be reached.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2953,
            "start": 2713,
          },
          "metadata": undefined,
          "name": "NodeUnreachableException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the server that is not reachable.",
              "location": Object {
                "end": 3169,
                "start": 3157,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why the server couldn't be reached.",
              "location": Object {
                "end": 3274,
                "start": 3260,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a server could not be reached.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 3276,
            "start": 3032,
          },
          "metadata": undefined,
          "name": "ServerUnreachableException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the registry that is not reachable.",
              "location": Object {
                "end": 3500,
                "start": 3488,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why the registry couldn't be reached.",
              "location": Object {
                "end": 3607,
                "start": 3593,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a registry could not be reached.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 3609,
            "start": 3357,
          },
          "metadata": undefined,
          "name": "RegistryUnreachableException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The details of the unknown signal.",
              "location": Object {
                "end": 3825,
                "start": 3811,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an unknown signal was sent to
to a server.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 3827,
            "start": 3703,
          },
          "metadata": undefined,
          "name": "BadSignalException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": "The reasons why the patch failed.",
              "location": Object {
                "end": 4017,
                "start": 3994,
              },
              "metadata": undefined,
              "name": "reasons",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a patch failed.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4019,
            "start": 3891,
          },
          "metadata": undefined,
          "name": "PatchException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The id of the user holding the lock (if any).",
              "location": Object {
                "end": 4276,
                "start": 4258,
              },
              "metadata": undefined,
              "name": "lockUserId",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "*
* This exception is raised if a registry lock wasn't
 * acquired or is already held by a session.
*",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4278,
            "start": 4136,
          },
          "metadata": undefined,
          "name": "AccessDeniedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why the object couldn't be allocated.",
              "location": Object {
                "end": 4499,
                "start": 4485,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if the allocation of an object failed.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4501,
            "start": 4362,
          },
          "metadata": undefined,
          "name": "AllocationException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if the request to allocate an object times
out.",
          "extends": "AllocationException",
          "local": undefined,
          "location": Object {
            "end": 4665,
            "start": 4597,
          },
          "metadata": undefined,
          "name": "AllocationTimeoutException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason why permission was denied.",
              "location": Object {
                "end": 4913,
                "start": 4899,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a client is denied the ability to create
a session with IceGrid.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 4915,
            "start": 4781,
          },
          "metadata": undefined,
          "name": "PermissionDeniedException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "Ice::Identity",
              "defaultValue": undefined,
              "doc": "The identity of the observer.",
              "location": Object {
                "end": 5236,
                "start": 5219,
              },
              "metadata": undefined,
              "name": "id",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an observer is already registered with
the registry.

@see AdminSession#setObservers
@see AdminSession#setObserversByIdentity",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5238,
            "start": 5100,
          },
          "metadata": undefined,
          "name": "ObserverAlreadyRegisteredException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 5664,
                "start": 5650,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a file is not available.

@see AdminSession#openServerStdOut
@see AdminSession#openServerStdErr
@see AdminSession#openNodeStdOut
@see AdminSession#openNodeStdErr
@see AdminSession#openRegistryStdOut
@see AdminSession#openRegistryStdErr",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5666,
            "start": 5542,
          },
          "metadata": undefined,
          "name": "FileNotAvailableException",
          "type": "exception",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 5669,
        "start": 509,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/FileParser.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEGRID_API",
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICEGRID_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "IceGrid/Admin",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 638,
                "start": 624,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if an error occurs during parsing.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 640,
            "start": 554,
          },
          "metadata": undefined,
          "name": "ParseException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Parse a file.

@param xmlFile Full pathname to the file.

@param adminProxy An Admin proxy, used only to retrieve default
templates when needed. May be null.

@return The application descriptor.

@throws ParseException Raised if an error occurred during parsing.",
              "idempotent": true,
              "location": Object {
                "end": 1289,
                "start": 1185,
              },
              "metadata": undefined,
              "name": "parse",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1238,
                    "start": 1224,
                  },
                  "metadata": undefined,
                  "name": "xmlFile",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Admin*",
                  "location": Object {
                    "end": 1257,
                    "start": 1240,
                  },
                  "metadata": undefined,
                  "name": "adminProxy",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ApplicationDescriptor",
              "throws": Array [
                "ParseException",
              ],
              "type": "operation",
            },
          ],
          "doc": "<code>icegridadmin</code> provides a {@link FileParser}
object to transform XML files into {@link ApplicationDescriptor}
objects.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1291,
            "start": 796,
          },
          "metadata": undefined,
          "name": "FileParser",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1294,
        "start": 434,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/PluginFacade.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEGRID_API",
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICEGRID_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
    "Ice/Current",
    "IceGrid/Admin",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Filter the the given set of adapters.

@param replicaGroupId The replica group ID.

@param adapterIds The adpater IDs to filter.

@param con The connection from the Ice client which is
resolving the replica group endpoints.

@param ctx The context from the Ice client which is resolving
the replica group endpoints.

@return The filtered adapter IDs.",
              "idempotent": undefined,
              "location": Object {
                "end": 1498,
                "start": 1387,
              },
              "metadata": undefined,
              "name": "filter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1430,
                    "start": 1409,
                  },
                  "metadata": undefined,
                  "name": "replicaGroupId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::StringSeq",
                  "location": Object {
                    "end": 1457,
                    "start": 1432,
                  },
                  "metadata": undefined,
                  "name": "adapterIds",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Connection",
                  "location": Object {
                    "end": 1478,
                    "start": 1459,
                  },
                  "metadata": undefined,
                  "name": "con",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Context",
                  "location": Object {
                    "end": 1496,
                    "start": 1480,
                  },
                  "metadata": undefined,
                  "name": "ctx",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::StringSeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The ReplicaGroupFilter is used by IceGrid to filter adapters
returned to the client when it resolves a filtered replica group.

IceGrid provides the list of available adapters. The implementation
of this method can use the provided context and connection to
filter and return the filtered set of adapters.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 1500,
            "start": 878,
          },
          "metadata": undefined,
          "name": "ReplicaGroupFilter",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Filter the the given set of proxies.

@param type The type.

@param proxies The proxies to filter.

@param con The connection from the Ice client which is
looking up well-known objects by type.

@param ctx The context from the Ice client which is looking up
well-known objects by type.

@return The filtered proxies.",
              "idempotent": undefined,
              "location": Object {
                "end": 2421,
                "start": 2313,
              },
              "metadata": undefined,
              "name": "filter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2351,
                    "start": 2340,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::ObjectProxySeq",
                  "location": Object {
                    "end": 2380,
                    "start": 2353,
                  },
                  "metadata": undefined,
                  "name": "proxies",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Connection",
                  "location": Object {
                    "end": 2401,
                    "start": 2382,
                  },
                  "metadata": undefined,
                  "name": "con",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Ice::Context",
                  "location": Object {
                    "end": 2419,
                    "start": 2403,
                  },
                  "metadata": undefined,
                  "name": "ctx",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::ObjectProxySeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The TypeFilter is used by IceGrid to filter well-known proxies
returned to the client when it searches a well-known object by
type.

IceGrid provides the list of available proxies. The implementation
of this method can use the provided context and connection to
filter and return the filtered set of proxies.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 2423,
            "start": 1846,
          },
          "metadata": undefined,
          "name": "TypeFilter",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get an application descriptor.

@param name The application name.

@return The application descriptor.

@throws ApplicationNotExistException Raised if the application
doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 3147,
                "start": 3015,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getApplicationInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3101,
                    "start": 3090,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ApplicationInfo",
              "throws": Array [
                "ApplicationNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the server information for the server with the given id.

@param id The server id.

@throws ServerNotExistException Raised if the server doesn't exist.

@return The server information.",
              "idempotent": true,
              "location": Object {
                "end": 3534,
                "start": 3419,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getServerInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3493,
                    "start": 3484,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ServerInfo",
              "throws": Array [
                "ServerNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the ID of the server to which the given adapter belongs.

@param adapterId The adapter ID.

@return The server ID or the empty string if the given
identifier is not associated to an object adapter defined with
an application descriptor.

@throws AdapterNotExistException Raised if the adapter doesn't
exist.",
              "idempotent": true,
              "location": Object {
                "end": 4072,
                "start": 3950,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAdapterServer",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4030,
                    "start": 4014,
                  },
                  "metadata": undefined,
                  "name": "adapterId",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": Array [
                "AdapterNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the name of the application to which the given adapter belongs.

@param adapterId The adapter ID.

@return The application name or the empty string if the given
identifier is not associated to a replica group or object
adapter defined with an application descriptor.

@throws AdapterNotExistException Raised if the adapter doesn't
exist.",
              "idempotent": true,
              "location": Object {
                "end": 4645,
                "start": 4518,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAdapterApplication",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4603,
                    "start": 4587,
                  },
                  "metadata": undefined,
                  "name": "adapterId",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": Array [
                "AdapterNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the name of the node to which the given adapter belongs.

@param adapterId The adapter ID.

@return The node name or the empty string if the given
identifier is not associated to an object adapter defined with
an application descriptor.

@throws AdapterNotExistException Raised if the adapter doesn't
exist.",
              "idempotent": true,
              "location": Object {
                "end": 5181,
                "start": 5061,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAdapterNode",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5139,
                    "start": 5123,
                  },
                  "metadata": undefined,
                  "name": "adapterId",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": Array [
                "AdapterNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the adapter information for the replica group or adapter
with the given id.

@param id The adapter id.

@return A sequence of adapter information structures. If the
given id refers to an adapter, this sequence will contain only
one element. If the given id refers to a replica group, the
sequence will contain the adapter information of each member of
the replica group.

@throws AdapterNotExistException Raised if the adapter or
replica group doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 5890,
                "start": 5769,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getAdapterInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5848,
                    "start": 5839,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "AdapterInfoSeq",
              "throws": Array [
                "AdapterNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the object info for the object with the given identity.

@param id The identity of the object.

@return The object info.

@throws ObjectNotRegisteredException Raised if the object isn't
registered with the registry.",
              "idempotent": true,
              "location": Object {
                "end": 6327,
                "start": 6200,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getObjectInfo",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 6281,
                    "start": 6265,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "ObjectInfo",
              "throws": Array [
                "ObjectNotRegisteredException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the node information for the node with the given name.

@param name The node name.

@return The node information.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 6825,
                "start": 6688,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNodeInfo",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 6760,
                    "start": 6749,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "NodeInfo",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the load averages of the node.

@param name The node name.

@return The node load information.

@throws NodeNotExistException Raised if the node doesn't exist.

@throws NodeUnreachableException Raised if the node could not be
reached.",
              "idempotent": true,
              "location": Object {
                "end": 7304,
                "start": 7167,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNodeLoad",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 7239,
                    "start": 7228,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "LoadInfo",
              "throws": Array [
                "NodeNotExistException",
                "NodeUnreachableException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the property value for the given property and adapter. The
property is looked up in the server or service descriptor where
the adapter is defined.

@param adapterId The adapter ID

@param name The name of the property.

@return The property value.

@throws AdapterNotExistException Raised if the adapter doesn't exist.",
              "idempotent": true,
              "location": Object {
                "end": 7877,
                "start": 7737,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getPropertyForAdapter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 7822,
                    "start": 7806,
                  },
                  "metadata": undefined,
                  "name": "adapterId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 7835,
                    "start": 7824,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": Array [
                "AdapterNotExistException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Add a replica group filter.

@param id The identifier of the filter. This identifier must
match the value of the \\"filter\\" attribute specified in the
replica group descriptor. To filter dynamically registered
replica groups, you should use the empty filter id.

@param filter The filter implementation.",
              "idempotent": undefined,
              "location": Object {
                "end": 8352,
                "start": 8270,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "addReplicaGroupFilter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 8323,
                    "start": 8314,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ReplicaGroupFilter",
                  "location": Object {
                    "end": 8350,
                    "start": 8325,
                  },
                  "metadata": undefined,
                  "name": "filter",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove a replica group filter.

@param id The identifier of the filter.

@param filter The filter implementation.

@return True of the filter was removed, false otherwise.",
              "idempotent": undefined,
              "location": Object {
                "end": 8692,
                "start": 8607,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "removeReplicaGroupFilter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 8663,
                    "start": 8654,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "ReplicaGroupFilter",
                  "location": Object {
                    "end": 8690,
                    "start": 8665,
                  },
                  "metadata": undefined,
                  "name": "filter",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Add a type filter.

@param type The type to register this filter with.

@param filter The filter implementation.",
              "idempotent": undefined,
              "location": Object {
                "end": 8943,
                "start": 8875,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "addTypeFilter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 8922,
                    "start": 8911,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "TypeFilter",
                  "location": Object {
                    "end": 8941,
                    "start": 8924,
                  },
                  "metadata": undefined,
                  "name": "filter",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Remove a type filter.

@param type The type to register this filter with.

@param filter The filter implementation.

@return True of the filter was removed, false otherwise.",
              "idempotent": undefined,
              "location": Object {
                "end": 9271,
                "start": 9200,
              },
              "metadata": Array [
                "cpp:noexcept",
              ],
              "name": "removeTypeFilter",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 9250,
                    "start": 9239,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "TypeFilter",
                  "location": Object {
                    "end": 9269,
                    "start": 9252,
                  },
                  "metadata": undefined,
                  "name": "filter",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "bool",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The RegistryPluginFacade is implemented by IceGrid and can be used
by plugins and filter implementations to retrieve information from
IceGrid about the well-known objects or adapters. It's also used to
register/unregister replica group and type filters.",
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 9273,
            "start": 2706,
          },
          "metadata": undefined,
          "name": "RegistryPluginFacade",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 9276,
        "start": 498,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/Registry.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEGRID_API",
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICEGRID_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "IceGrid/Exception",
    "IceGrid/Session",
    "IceGrid/Admin",
    "Ice/Locator",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "Determines which load sampling interval to use.",
          "enums": Array [
            Object {
              "doc": "Sample every minute.",
              "location": Object {
                "end": 711,
                "start": 700,
              },
              "name": "LoadSample1",
              "value": undefined,
            },
            Object {
              "doc": "Sample every five minutes.",
              "location": Object {
                "end": 780,
                "start": 769,
              },
              "name": "LoadSample5",
              "value": undefined,
            },
            Object {
              "doc": "Sample every fifteen minutes.",
              "location": Object {
                "end": 853,
                "start": 841,
              },
              "name": "LoadSample15",
              "value": undefined,
            },
          ],
          "location": Object {
            "end": 855,
            "start": 633,
          },
          "metadata": undefined,
          "name": "LoadSample",
          "type": "enum",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Find a well-known object by identity.

@param id The identity.

@return The proxy or null if no such object has been found.",
              "idempotent": true,
              "location": Object {
                "end": 1282,
                "start": 1201,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "findObjectById",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 1280,
                    "start": 1264,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find a well-known object by type. If there are several objects
registered for the given type, the object is randomly
selected.

@param type The object type.

@return The proxy or null, if no such object has been found.",
              "idempotent": true,
              "location": Object {
                "end": 1663,
                "start": 1585,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "findObjectByType",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1661,
                    "start": 1650,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find a well-known object by type on the least-loaded node. If
the registry does not know which node hosts the object
(for example, because the object was registered with a direct proxy), the
registry assumes the object is hosted on a node that has a load
average of 1.0.

@param type The object type.

@param sample The sampling interval.

@return The proxy or null, if no such object has been found.",
              "idempotent": true,
              "location": Object {
                "end": 2289,
                "start": 2175,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "findObjectByTypeOnLeastLoadedNode",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2268,
                    "start": 2257,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LoadSample",
                  "location": Object {
                    "end": 2287,
                    "start": 2270,
                  },
                  "metadata": undefined,
                  "name": "sample",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find all the well-known objects with the given type.

@param type The object type.

@return The proxies or an empty sequence, if no such objects
have been found.",
              "idempotent": true,
              "location": Object {
                "end": 2622,
                "start": 2528,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "findAllObjectsByType",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2620,
                    "start": 2609,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::ObjectProxySeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Find all the object replicas associated with the given
proxy. If the given proxy is not an indirect proxy from a
replica group, an empty sequence is returned.

@param proxy The object proxy.

@return The proxies of each object replica or an empty sequence,
if the given proxy is not from a replica group.",
              "idempotent": true,
              "location": Object {
                "end": 3094,
                "start": 3018,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "findAllReplicas",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 3092,
                    "start": 3079,
                  },
                  "metadata": undefined,
                  "name": "proxy",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::ObjectProxySeq",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The IceGrid query interface. This interface is accessible to
Ice clients who wish to look up well-known objects.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 3096,
            "start": 991,
          },
          "metadata": undefined,
          "name": "Query",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Create a client session.

@return A proxy for the newly created session.

@param userId The user id.

@param password The password for the given user id.

@throws PermissionDeniedException Raised if the password for
the given user id is not correct, or if the user is not allowed
access.",
              "idempotent": undefined,
              "location": Object {
                "end": 3752,
                "start": 3656,
              },
              "metadata": undefined,
              "name": "createSession",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3692,
                    "start": 3679,
                  },
                  "metadata": undefined,
                  "name": "userId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 3709,
                    "start": 3694,
                  },
                  "metadata": undefined,
                  "name": "password",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Session*",
              "throws": Array [
                "PermissionDeniedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Create an administrative session.

@return A proxy for the newly created session.

@param userId The user id.

@param password The password for the given user id.

@throws PermissionDeniedException Raised if the password for
the given user id is not correct, or if the user is not allowed
access.",
              "idempotent": undefined,
              "location": Object {
                "end": 4265,
                "start": 4159,
              },
              "metadata": undefined,
              "name": "createAdminSession",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4205,
                    "start": 4192,
                  },
                  "metadata": undefined,
                  "name": "userId",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4222,
                    "start": 4207,
                  },
                  "metadata": undefined,
                  "name": "password",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "AdminSession*",
              "throws": Array [
                "PermissionDeniedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Create a client session from a secure connection.

@return A proxy for the newly created session.

@throws PermissionDeniedException Raised if the password for
the given user id is not correct, or if the user is not allowed
access.",
              "idempotent": undefined,
              "location": Object {
                "end": 4667,
                "start": 4581,
              },
              "metadata": undefined,
              "name": "createSessionFromSecureConnection",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Session*",
              "throws": Array [
                "PermissionDeniedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Create an administrative session from a secure connection.

@return A proxy for the newly created session.

@throws PermissionDeniedException Raised if the password for
the given user id is not correct, or if the user is not allowed
access.",
              "idempotent": undefined,
              "location": Object {
                "end": 5088,
                "start": 4992,
              },
              "metadata": undefined,
              "name": "createAdminSessionFromSecureConnection",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "AdminSession*",
              "throws": Array [
                "PermissionDeniedException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Get the session timeout. If a client or administrative client
doesn't call the session keepAlive method in the time interval
defined by this timeout, IceGrid might reap the session.

@see Session#keepAlive
@see AdminSession#keepAlive

@return The timeout (in seconds).",
              "idempotent": true,
              "location": Object {
                "end": 5512,
                "start": 5448,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getSessionTimeout",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the value of the ACM timeout. Clients supporting ACM
connection heartbeats can enable them instead of explicitly
sending keep alives requests.

NOTE: This method is only available since Ice 3.6.

@return The timeout (in seconds).",
              "idempotent": true,
              "location": Object {
                "end": 5890,
                "start": 5830,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getACMTimeout",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The IceGrid registry allows clients create sessions
directly with the registry.

@see Session
@see AdminSession",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5892,
            "start": 3239,
          },
          "metadata": undefined,
          "name": "Registry",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the proxy of the registry object hosted by this IceGrid
registry.

@return The proxy of the registry object.",
              "idempotent": true,
              "location": Object {
                "end": 6339,
                "start": 6285,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getLocalRegistry",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Registry*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get the proxy of the query object hosted by this IceGrid
registry.

@return The proxy of the query object.",
              "idempotent": true,
              "location": Object {
                "end": 6558,
                "start": 6510,
              },
              "metadata": Array [
                "cpp:const",
              ],
              "name": "getLocalQuery",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Query*",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The IceGrid locator interface provides access to the {@link Query}
and {@link Registry} object of the IceGrid registry.

@see Query
@see Registry",
          "extends": Array [
            "Ice::Locator",
          ],
          "local": undefined,
          "location": Object {
            "end": 6560,
            "start": 6069,
          },
          "metadata": undefined,
          "name": "Locator",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 6563,
        "start": 525,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/Session.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEGRID_API",
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICEGRID_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Glacier2/Session",
    "IceGrid/Exception",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "Keep the session alive. Clients should call this operation
regularly to prevent the server from reaping the session.

@see Registry#getSessionTimeout",
              "idempotent": true,
              "location": Object {
                "end": 1052,
                "start": 1024,
              },
              "metadata": undefined,
              "name": "keepAlive",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Allocate an object. Depending on the allocation timeout, this
operation might hang until the object is available or until the
timeout is reached.

@param id The identity of the object to allocate.

@return The proxy of the allocated object.

@throws ObjectNotRegisteredException Raised if the object with
the given identity is not registered with the registry.

@throws AllocationException Raised if the object can't be
allocated.

@see #setAllocationTimeout
@see #releaseObject",
              "idempotent": undefined,
              "location": Object {
                "end": 1793,
                "start": 1675,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "allocateObjectById",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 1726,
                    "start": 1710,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "ObjectNotRegisteredException",
                "AllocationException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Allocate an object with the given type. Depending on the
allocation timeout, this operation can block until an object
becomes available or until the timeout is reached.

@param type The type of the object.

@return The proxy of the allocated object.

@throws AllocationException Raised if the object could not be allocated.

@see #setAllocationTimeout
@see #releaseObject",
              "idempotent": undefined,
              "location": Object {
                "end": 2367,
                "start": 2282,
              },
              "metadata": Array [
                "amd",
              ],
              "name": "allocateObjectByType",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 2330,
                    "start": 2319,
                  },
                  "metadata": undefined,
                  "name": "type",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "AllocationException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Release an object that was allocated using <code>allocateObjectById</code> or
<code>allocateObjectByType</code>.

@param id The identity of the object to release.

@throws ObjectNotRegisteredException Raised if the object with
the given identity is not registered with the registry.

@throws AllocationException Raised if the given object can't be
released. This might happen if the object isn't allocatable or
isn't allocated by the session.",
              "idempotent": undefined,
              "location": Object {
                "end": 3023,
                "start": 2921,
              },
              "metadata": undefined,
              "name": "releaseObject",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Identity",
                  "location": Object {
                    "end": 2956,
                    "start": 2940,
                  },
                  "metadata": undefined,
                  "name": "id",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "ObjectNotRegisteredException",
                "AllocationException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Set the allocation timeout. If no objects are available for an
allocation request, a call to <code>allocateObjectById</code> or
<code>allocateObjectByType</code> will block for the duration of this
timeout.

@param timeout The timeout in milliseconds.",
              "idempotent": true,
              "location": Object {
                "end": 3403,
                "start": 3353,
              },
              "metadata": undefined,
              "name": "setAllocationTimeout",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 3401,
                    "start": 3390,
                  },
                  "metadata": undefined,
                  "name": "timeout",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A session object is used by IceGrid clients to allocate and
release objects. Client sessions are created either via the
{@link Registry} object or via the registry client <code>SessionManager</code>
object.

@see Registry",
          "extends": Array [
            "Glacier2::Session",
          ],
          "local": undefined,
          "location": Object {
            "end": 3405,
            "start": 766,
          },
          "metadata": undefined,
          "name": "Session",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 3408,
        "start": 470,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceGrid/UserAccountMapper.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEGRID_API",
    "cpp:doxygen:include:IceGrid/IceGrid.h",
    "cpp:header-ext:h",
    "cpp:include:IceGrid/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICEGRID_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceGrid",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [],
          "doc": "This exception is raised if a user account for a given session
identifier can't be found.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 599,
            "start": 557,
          },
          "metadata": undefined,
          "name": "UserAccountNotFoundException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the name of the user account for the given user. This is
used by IceGrid nodes to figure out the user account to use
to run servers.

@param user The value of the server descriptor's <code>user</code>
attribute. If this attribute is not defined, and the server's
activation mode is <code>session</code>, the default value of
<code>user</code> is the session identifier.

@return The user account name.

@throws UserAccountNotFoundException Raised if no user account
is found for the given user.",
              "idempotent": undefined,
              "location": Object {
                "end": 1452,
                "start": 1373,
              },
              "metadata": undefined,
              "name": "getUserAccount",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1406,
                    "start": 1395,
                  },
                  "metadata": undefined,
                  "name": "user",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": Array [
                "UserAccountNotFoundException",
              ],
              "type": "operation",
            },
          ],
          "doc": "A user account mapper object is used by IceGrid nodes to map
session identifiers to user accounts.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1454,
            "start": 721,
          },
          "metadata": undefined,
          "name": "UserAccountMapper",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1457,
        "start": 404,
      },
      "metadata": Array [
        "objc:prefix:ICEGRID",
      ],
      "name": "IceGrid",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceIAP/ConnectionInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEIAP_API",
    "cpp:doxygen:include:IceIAP/IceIAP.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
  ],
  "includes": Array [
    "Ice/Connection",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory name.",
              "location": Object {
                "end": 519,
                "start": 507,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory manufacturer.",
              "location": Object {
                "end": 611,
                "start": 591,
              },
              "metadata": undefined,
              "name": "manufacturer",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory model number.",
              "location": Object {
                "end": 702,
                "start": 683,
              },
              "metadata": undefined,
              "name": "modelNumber",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory firmare revision.",
              "location": Object {
                "end": 802,
                "start": 778,
              },
              "metadata": undefined,
              "name": "firmwareRevision",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory hardware revision.",
              "location": Object {
                "end": 903,
                "start": 879,
              },
              "metadata": undefined,
              "name": "hardwareRevision",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The protocol used by the accessory.",
              "location": Object {
                "end": 999,
                "start": 983,
              },
              "metadata": undefined,
              "name": "protocol",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the connection details of an IAP connection",
          "extends": "Ice::ConnectionInfo",
          "local": true,
          "location": Object {
            "end": 1001,
            "start": 388,
          },
          "metadata": undefined,
          "name": "ConnectionInfo",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1004,
        "start": 267,
      },
      "metadata": Array [
        "objc:prefix:ICEIAP",
      ],
      "name": "IceIAP",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceIAP/EndpointInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEIAP_API",
    "cpp:doxygen:include:IceIAP/IceIAP.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
  ],
  "includes": Array [
    "Ice/Endpoint",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory manufacturer or empty to not match against
a manufacturer.",
              "location": Object {
                "end": 628,
                "start": 608,
              },
              "metadata": undefined,
              "name": "manufacturer",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory model number or empty to not match against
a model number.",
              "location": Object {
                "end": 771,
                "start": 752,
              },
              "metadata": undefined,
              "name": "modelNumber",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The accessory name or empty to not match against
the accessory name.",
              "location": Object {
                "end": 903,
                "start": 891,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The protocol supported by the accessory.",
              "location": Object {
                "end": 1004,
                "start": 988,
              },
              "metadata": undefined,
              "name": "protocol",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to an IAP endpoint information.",
          "extends": "Ice::EndpointInfo",
          "local": true,
          "location": Object {
            "end": 1006,
            "start": 433,
          },
          "metadata": undefined,
          "name": "EndpointInfo",
          "type": "class",
        },
      ],
      "doc": "IceIAP provides a secure transport for Ice.",
      "location": Object {
        "end": 1009,
        "start": 327,
      },
      "metadata": Array [
        "objc:prefix:ICEIAP",
      ],
      "name": "IceIAP",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceLocatorDiscovery/IceLocatorDiscovery.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:doxygen:include:IceLocatorDiscovery/IceLocatorDiscovery.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IceLocatorDiscovery",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Locator",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": "This method is called by the implementation of the Lookup
interface to reply to a findLocator request.

@param prx The proxy of the locator.",
              "idempotent": undefined,
              "location": Object {
                "end": 1017,
                "start": 980,
              },
              "metadata": undefined,
              "name": "foundLocator",
              "parameters": Array [
                Object {
                  "dataType": "Ice::Locator*",
                  "location": Object {
                    "end": 1015,
                    "start": 998,
                  },
                  "metadata": undefined,
                  "name": "prx",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Ice lookup reply interface must be implemented by clients which
are searching for Ice locators. Ice locator implementations invoke
on this interface to provide their locator proxy.

@see Lookup",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1019,
            "start": 753,
          },
          "metadata": undefined,
          "name": "LookupReply",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Find a locator proxy with the given instance name.

@param instanceName Restrict the search to Ice registries
configured with the given instance name. If empty, all the
available registries will reply.

@param reply The reply object to use to send the reply.",
              "idempotent": true,
              "location": Object {
                "end": 1846,
                "start": 1777,
              },
              "metadata": undefined,
              "name": "findLocator",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 1824,
                    "start": 1805,
                  },
                  "metadata": undefined,
                  "name": "instanceName",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "LookupReply*",
                  "location": Object {
                    "end": 1844,
                    "start": 1826,
                  },
                  "metadata": undefined,
                  "name": "reply",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "The Ice lookup interface is implemented by Ice locator
implementations and can be used by clients to find available Ice
locators on the network.

Ice locator implementations provide a well-known \`Ice/LocatorLookup'
object accessible through UDP multicast. Clients typically make a
multicast findLocator request to find the locator proxy.

@see LookupReply",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1848,
            "start": 1417,
          },
          "metadata": undefined,
          "name": "Lookup",
          "type": "interface",
        },
      ],
      "doc": "IceLocatorDiscovery is an Ice plug-in that enables the discovery of IceGrid and custom locators via
UDP multicast.",
      "location": Object {
        "end": 1851,
        "start": 496,
      },
      "metadata": undefined,
      "name": "IceLocatorDiscovery",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IcePatch2/FileInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEPATCH2_API",
    "cpp:doxygen:include:IcePatch2/IcePatch2.h",
    "cpp:header-ext:h",
    "cpp:include:IcePatch2/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IcePatch2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/BuiltinSequences",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": "Basic information about a single file.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 580,
                "start": 568,
              },
              "metadata": undefined,
              "name": "path",
            },
            Object {
              "dataType": "Ice::ByteSeq",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 652,
                "start": 630,
              },
              "metadata": undefined,
              "name": "checksum",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 731,
                "start": 722,
              },
              "metadata": undefined,
              "name": "size",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 785,
                "start": 769,
              },
              "metadata": undefined,
              "name": "executable",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 787,
            "start": 520,
          },
          "metadata": undefined,
          "name": "FileInfo",
          "type": "struct",
        },
        Object {
          "dataType": "FileInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence with information about many files.",
          "local": undefined,
          "location": Object {
            "end": 884,
            "start": 853,
          },
          "metadata": undefined,
          "name": "FileInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": "Basic information about a single file.",
          "fields": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1008,
                "start": 996,
              },
              "metadata": undefined,
              "name": "path",
            },
            Object {
              "dataType": "Ice::ByteSeq",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1080,
                "start": 1058,
              },
              "metadata": undefined,
              "name": "checksum",
            },
            Object {
              "dataType": "long",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1160,
                "start": 1150,
              },
              "metadata": undefined,
              "name": "size",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1214,
                "start": 1198,
              },
              "metadata": undefined,
              "name": "executable",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1216,
            "start": 943,
          },
          "metadata": undefined,
          "name": "LargeFileInfo",
          "type": "struct",
        },
        Object {
          "dataType": "LargeFileInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence with information about many files.",
          "local": undefined,
          "location": Object {
            "end": 1323,
            "start": 1282,
          },
          "metadata": undefined,
          "name": "LargeFileInfoSeq",
          "type": "sequence",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1326,
        "start": 417,
      },
      "metadata": Array [
        "objc:prefix:ICEPATCH2",
      ],
      "name": "IcePatch2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IcePatch2/FileServer.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICEPATCH2_API",
    "cpp:doxygen:include:IcePatch2/IcePatch2.h",
    "cpp:header-ext:h",
    "cpp:include:IcePatch2/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:header-dir:objc",
    "python:pkgdir:IcePatch2",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "IcePatch2/FileInfo",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "dataType": "Ice::ByteSeq",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of byte sequences. Each element is the checksum for a
partition.",
          "local": undefined,
          "location": Object {
            "end": 774,
            "start": 740,
          },
          "metadata": undefined,
          "name": "ByteSeqSeq",
          "type": "sequence",
        },
        Object {
          "content": Array [],
          "doc": "A <code>partition</code> argument was not in the range 0-255.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 898,
            "start": 856,
          },
          "metadata": undefined,
          "name": "PartitionOutOfRangeException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "An explanation of the reason for the failure.",
              "location": Object {
                "end": 1114,
                "start": 1100,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception is raised if a file's contents cannot be read.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1116,
            "start": 980,
          },
          "metadata": undefined,
          "name": "FileAccessException",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception is raised if an operation tries to use a file whose size is
larger than 2.1 GB. Use the \\"large\\" versions of the operations instead.",
          "extends": "FileAccessException",
          "local": undefined,
          "location": Object {
            "end": 1350,
            "start": 1286,
          },
          "metadata": undefined,
          "name": "FileSizeRangeException",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Return file information for the specified partition.

<p class=\\"Deprecated\\"> This operation is deprecated and only present for
compatibility with old Ice clients (older than version 3.6).

@param partition The partition number in the range 0-255.

@return A sequence containing information about the files in the
specified partition.

@throws PartitionOutOfRangeException If the partition number is out of range.
@throws FileSizeRangeException If a file is larger than 2.1GB.",
              "idempotent": true,
              "location": Object {
                "end": 2257,
                "start": 2022,
              },
              "metadata": Array [
                "deprecate:getFileInfoSeq() is deprecated, use getLargeFileInfoSeq() instead.",
                "nonmutating",
                "cpp:const",
              ],
              "name": "getFileInfoSeq",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 2187,
                    "start": 2174,
                  },
                  "metadata": undefined,
                  "name": "partition",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "FileInfoSeq",
              "throws": Array [
                "PartitionOutOfRangeException",
                "FileSizeRangeException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Returns file information for the specified partition.

@param partition The partition number in the range 0-255.

@return A sequence containing information about the files in the
specified partition.

@throws PartitionOutOfRangeException If the partition number is out of range.",
              "idempotent": true,
              "location": Object {
                "end": 2755,
                "start": 2619,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getLargeFileInfoSeq",
              "parameters": Array [
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 2709,
                    "start": 2696,
                  },
                  "metadata": undefined,
                  "name": "partition",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "LargeFileInfoSeq",
              "throws": Array [
                "PartitionOutOfRangeException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Return the checksums for all partitions.

@return A sequence containing 256 checksums. Partitions with a
checksum that differs from the previous checksum for the same
partition contain updated files. Partitions with a checksum
that is identical to the previous checksum do not contain
updated files.",
              "idempotent": true,
              "location": Object {
                "end": 3208,
                "start": 3140,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getChecksumSeq",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "ByteSeqSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Return the master checksum for all partitions. If this checksum is the same
as for a previous run, the entire file set is up-to-date.

@return The master checksum for the file set.",
              "idempotent": true,
              "location": Object {
                "end": 3520,
                "start": 3453,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getChecksum",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::ByteSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Read the specified file. This operation may only return fewer bytes than requested
in case there was an end-of-file condition.

<p class=\\"Deprecated\\"> This operation is deprecated and only present for
compatibility with old Ice clients (older than version 3.6).

@param path The pathname (relative to the data directory) for
the file to be read.

@param pos The file offset at which to begin reading.

@param num The number of bytes to be read.

@return A sequence containing the compressed file contents.

@throws FileAccessException If an error occurred while trying to read the file.
@throws FileSizeRangeException If a file is larger than 2.1GB.",
              "idempotent": true,
              "location": Object {
                "end": 4596,
                "start": 4320,
              },
              "metadata": Array [
                "deprecate:getFileCompressed() is deprecated, use getLargeFileCompressed() instead.",
                "amd",
                "nonmutating",
                "cpp:const",
                "cpp:array",
              ],
              "name": "getFileCompressed",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 4517,
                    "start": 4506,
                  },
                  "metadata": undefined,
                  "name": "path",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 4526,
                    "start": 4519,
                  },
                  "metadata": undefined,
                  "name": "pos",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 4535,
                    "start": 4528,
                  },
                  "metadata": undefined,
                  "name": "num",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::ByteSeq",
              "throws": Array [
                "FileAccessException",
                "FileSizeRangeException",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Read the specified file. This operation may only return fewer bytes than requested
in case there was an end-of-file condition.

@param path The pathname (relative to the data directory) for
the file to be read.

@param pos The file offset at which to begin reading.

@param num The number of bytes to be read.

@return A sequence containing the compressed file contents.

@throws FileAccessException If an error occurred while trying to read the file.",
              "idempotent": true,
              "location": Object {
                "end": 5338,
                "start": 5171,
              },
              "metadata": Array [
                "amd",
                "nonmutating",
                "cpp:const",
                "cpp:array",
              ],
              "name": "getLargeFileCompressed",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 5282,
                    "start": 5271,
                  },
                  "metadata": undefined,
                  "name": "path",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "long",
                  "location": Object {
                    "end": 5292,
                    "start": 5284,
                  },
                  "metadata": undefined,
                  "name": "pos",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 5301,
                    "start": 5294,
                  },
                  "metadata": undefined,
                  "name": "num",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Ice::ByteSeq",
              "throws": Array [
                "FileAccessException",
              ],
              "type": "operation",
            },
          ],
          "doc": "The interface that provides access to files.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5340,
            "start": 1415,
          },
          "metadata": undefined,
          "name": "FileServer",
          "type": "interface",
        },
      ],
      "doc": "IcePatch can be used to update file hierarchies in a simple and
efficient manner. Checksums ensure file integrity, and data is
compressed before downloading.",
      "location": Object {
        "end": 5343,
        "start": 597,
      },
      "metadata": Array [
        "objc:prefix:ICEPATCH2",
      ],
      "name": "IcePatch2",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceSSL/ConnectionInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICESSL_API",
    "cpp:doxygen:include:IceSSL/IceSSL.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICESSL_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceSSL",
    "cpp:include:IceSSL/Plugin.h",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Connection",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 666,
                "start": 652,
              },
              "metadata": undefined,
              "name": "cipher",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "Ice::StringSeq",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 904,
                "start": 706,
              },
              "metadata": Array [
                "cpp:type:std::vector<CertificatePtr>",
                "java:type:java.security.cert.Certificate[]",
                "cs:type:System.Security.Cryptography.X509Certificates.X509Certificate2[]",
              ],
              "name": "certs",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "bool",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 978,
                "start": 964,
              },
              "metadata": undefined,
              "name": "verified",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides access to the connection details of an SSL connection",
          "extends": "Ice::ConnectionInfo",
          "local": true,
          "location": Object {
            "end": 980,
            "start": 551,
          },
          "metadata": undefined,
          "name": "ConnectionInfo",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 983,
        "start": 430,
      },
      "metadata": Array [
        "objc:prefix:ICESSL",
      ],
      "name": "IceSSL",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceSSL/ConnectionInfoF.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICESSL_API",
    "cpp:doxygen:include:IceSSL/IceSSL.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICESSL_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceSSL",
    "java:package:com.zeroc",
  ],
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": true,
          "location": Object {
            "end": 431,
            "start": 404,
          },
          "name": "ConnectionInfo",
          "type": "classForward",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 434,
        "start": 364,
      },
      "metadata": Array [
        "objc:prefix:ICESSL",
      ],
      "name": "IceSSL",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceSSL/EndpointInfo.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICESSL_API",
    "cpp:doxygen:include:IceSSL/IceSSL.h",
    "cpp:header-ext:h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICESSL_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceSSL",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Endpoint",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [],
          "doc": "Provides access to an SSL endpoint information.",
          "extends": "Ice::EndpointInfo",
          "local": true,
          "location": Object {
            "end": 615,
            "start": 561,
          },
          "metadata": undefined,
          "name": "EndpointInfo",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 618,
        "start": 455,
      },
      "metadata": Array [
        "objc:prefix:ICESSL",
      ],
      "name": "IceSSL",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceStorm/IceStorm.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICESTORM_API",
    "cpp:doxygen:include:IceStorm/IceStorm.h",
    "cpp:header-ext:h",
    "cpp:include:IceStorm/Config.h",
    "ice-prefix",
    "js:module:ice",
    "objc:dll-export:ICESTORM_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceStorm",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Identity",
    "Ice/SliceChecksumDict",
    "IceStorm/Metrics",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 835,
            "start": 819,
          },
          "name": "Topic",
          "type": "interfaceForward",
        },
        Object {
          "doc": "Information on the topic links.",
          "fields": Array [
            Object {
              "dataType": "Topic*",
              "defaultValue": undefined,
              "doc": "The linked topic.",
              "location": Object {
                "end": 981,
                "start": 965,
              },
              "metadata": undefined,
              "name": "theTopic",
            },
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The name of the linked topic.",
              "location": Object {
                "end": 1067,
                "start": 1055,
              },
              "metadata": undefined,
              "name": "name",
            },
            Object {
              "dataType": "int",
              "defaultValue": undefined,
              "doc": "The cost of traversing this link.",
              "location": Object {
                "end": 1154,
                "start": 1145,
              },
              "metadata": undefined,
              "name": "cost",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 1156,
            "start": 887,
          },
          "metadata": undefined,
          "name": "LinkInfo",
          "type": "struct",
        },
        Object {
          "dataType": "LinkInfo",
          "dataTypeMetadata": undefined,
          "doc": "A sequence of {@link LinkInfo} objects.",
          "local": undefined,
          "location": Object {
            "end": 1247,
            "start": 1216,
          },
          "metadata": undefined,
          "name": "LinkInfoSeq",
          "type": "sequence",
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 1397,
            "start": 1366,
          },
          "metadata": undefined,
          "name": "QoS",
          "type": "dictionary",
          "valueType": "string",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1614,
                "start": 1602,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that an attempt was made to create a link
that already exists.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1616,
            "start": 1508,
          },
          "metadata": undefined,
          "name": "LinkExists",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 1845,
                "start": 1833,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that an attempt was made to remove a
link that does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 1847,
            "start": 1727,
          },
          "metadata": undefined,
          "name": "NoSuchLink",
          "type": "exception",
        },
        Object {
          "content": Array [],
          "doc": "This exception indicates that an attempt was made to subscribe
a proxy for which a subscription already exists.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2013,
            "start": 1982,
          },
          "metadata": undefined,
          "name": "AlreadySubscribed",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 2235,
                "start": 2221,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that an attempt was made to subscribe
a proxy that is null.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2237,
            "start": 2121,
          },
          "metadata": undefined,
          "name": "InvalidSubscriber",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": "The reason for the failure.",
              "location": Object {
                "end": 2438,
                "start": 2424,
              },
              "metadata": undefined,
              "name": "reason",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that a subscription failed due to an
invalid QoS.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 2440,
            "start": 2335,
          },
          "metadata": undefined,
          "name": "BadQoS",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the name of this topic.

@return The name of the topic.

@see TopicManager#create",
              "idempotent": true,
              "location": Object {
                "end": 2807,
                "start": 2750,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getName",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "string",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a proxy to a publisher object for this topic. To publish
data to a topic, the publisher calls getPublisher and then
casts to the topic type. An unchecked cast must be used on this
proxy. If a replicated IceStorm deployment is used this call
may return a replicated proxy.

@return A proxy to publish data on this topic.",
              "idempotent": true,
              "location": Object {
                "end": 3279,
                "start": 3216,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getPublisher",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Get a non-replicated proxy to a publisher object for this
topic. To publish data to a topic, the publisher calls
getPublisher and then casts to the topic type. An unchecked
cast must be used on this proxy.

@return A proxy to publish data on this topic.",
              "idempotent": true,
              "location": Object {
                "end": 3687,
                "start": 3611,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getNonReplicatedPublisher",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Subscribe with the given <code>qos</code> to this topic.  A
per-subscriber publisher object is returned.

@param theQoS The quality of service parameters for this
subscription.

@param subscriber The subscriber's proxy.

@return The per-subscriber publisher object.

@throws AlreadySubscribed Raised if the subscriber object is
already subscribed.

@throws InvalidSubscriber Raised if the subscriber object is null.

@throws BadQoS Raised if the requested quality of service
is unavailable or invalid.

@see #unsubscribe",
              "idempotent": undefined,
              "location": Object {
                "end": 4496,
                "start": 4371,
              },
              "metadata": undefined,
              "name": "subscribeAndGetPublisher",
              "parameters": Array [
                Object {
                  "dataType": "QoS",
                  "location": Object {
                    "end": 4414,
                    "start": 4404,
                  },
                  "metadata": undefined,
                  "name": "theQoS",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 4434,
                    "start": 4416,
                  },
                  "metadata": undefined,
                  "name": "subscriber",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Object*",
              "throws": Array [
                "AlreadySubscribed",
                "InvalidSubscriber",
                "BadQoS",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Unsubscribe the given <code>subscriber</code>.

@param subscriber The proxy of an existing subscriber.

@see #subscribeAndGetPublisher",
              "idempotent": true,
              "location": Object {
                "end": 4749,
                "start": 4701,
              },
              "metadata": undefined,
              "name": "unsubscribe",
              "parameters": Array [
                Object {
                  "dataType": "Object*",
                  "location": Object {
                    "end": 4747,
                    "start": 4729,
                  },
                  "metadata": undefined,
                  "name": "subscriber",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Create a link to the given topic. All events originating
on this topic will also be sent to <code>linkTo</code>.

@param linkTo The topic to link to.

@param cost The cost to the linked topic.

@throws LinkExists Raised if a link to the same topic already
exists.",
              "idempotent": undefined,
              "location": Object {
                "end": 5163,
                "start": 5110,
              },
              "metadata": undefined,
              "name": "link",
              "parameters": Array [
                Object {
                  "dataType": "Topic*",
                  "location": Object {
                    "end": 5133,
                    "start": 5120,
                  },
                  "metadata": undefined,
                  "name": "linkTo",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "int",
                  "location": Object {
                    "end": 5143,
                    "start": 5135,
                  },
                  "metadata": undefined,
                  "name": "cost",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "LinkExists",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Destroy the link from this topic to the given topic <code>linkTo</code>.

@param linkTo The topic to destroy the link to.

@throws NoSuchLink Raised if a link to the topic does not exist.",
              "idempotent": undefined,
              "location": Object {
                "end": 5466,
                "start": 5421,
              },
              "metadata": undefined,
              "name": "unlink",
              "parameters": Array [
                Object {
                  "dataType": "Topic*",
                  "location": Object {
                    "end": 5446,
                    "start": 5433,
                  },
                  "metadata": undefined,
                  "name": "linkTo",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": Array [
                "NoSuchLink",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Retrieve information on the current links.

@return A sequence of LinkInfo objects.",
              "idempotent": true,
              "location": Object {
                "end": 5676,
                "start": 5607,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getLinkInfoSeq",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "LinkInfoSeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Retrieve the list of subscribers for this topic.

@return The sequence of Ice identities for the subscriber objects.",
              "idempotent": undefined,
              "location": Object {
                "end": 5913,
                "start": 5850,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getSubscribers",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::IdentitySeq",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Destroy the topic.",
              "idempotent": undefined,
              "location": Object {
                "end": 5991,
                "start": 5976,
              },
              "metadata": undefined,
              "name": "destroy",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "void",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "Publishers publish information on a particular topic. A topic
logically represents a type.

@see TopicManager",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 5993,
            "start": 2578,
          },
          "metadata": undefined,
          "name": "Topic",
          "type": "interface",
        },
        Object {
          "doc": "Mapping of topic name to topic proxy.",
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 6088,
            "start": 6051,
          },
          "metadata": undefined,
          "name": "TopicDict",
          "type": "dictionary",
          "valueType": "Topic*",
          "valueTypeMetadata": undefined,
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 6320,
                "start": 6308,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that an attempt was made to create a topic
that already exists.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 6322,
            "start": 6200,
          },
          "metadata": undefined,
          "name": "TopicExists",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "string",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 6556,
                "start": 6544,
              },
              "metadata": undefined,
              "name": "name",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "This exception indicates that an attempt was made to retrieve a
topic that does not exist.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 6558,
            "start": 6436,
          },
          "metadata": undefined,
          "name": "NoSuchTopic",
          "type": "exception",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Create a new topic. The topic name must be unique.

@param name The name of the topic.

@return A proxy to the topic instance.

@throws TopicExists Raised if a topic with the same name already
exists.",
              "idempotent": undefined,
              "location": Object {
                "end": 7014,
                "start": 6968,
              },
              "metadata": undefined,
              "name": "create",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 6993,
                    "start": 6982,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Topic*",
              "throws": Array [
                "TopicExists",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Retrieve a topic by name.

@param name The name of the topic.

@return A proxy to the topic instance.

@throws NoSuchTopic Raised if the topic does not exist.",
              "idempotent": true,
              "location": Object {
                "end": 7344,
                "start": 7256,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "retrieve",
              "parameters": Array [
                Object {
                  "dataType": "string",
                  "location": Object {
                    "end": 7323,
                    "start": 7312,
                  },
                  "metadata": undefined,
                  "name": "name",
                  "optional": undefined,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "Topic*",
              "throws": Array [
                "NoSuchTopic",
              ],
              "type": "operation",
            },
            Object {
              "doc": "Retrieve all topics managed by this topic manager.

@return A dictionary of string, topic proxy pairs.",
              "idempotent": true,
              "location": Object {
                "end": 7568,
                "start": 7504,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "retrieveAll",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "TopicDict",
              "throws": undefined,
              "type": "operation",
            },
            Object {
              "doc": "Returns the checksums for the IceStorm Slice definitions.

@return A dictionary mapping Slice type ids to their checksums.",
              "idempotent": true,
              "location": Object {
                "end": 7831,
                "start": 7748,
              },
              "metadata": Array [
                "nonmutating",
                "cpp:const",
              ],
              "name": "getSliceChecksums",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "Ice::SliceChecksumDict",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "A topic manager manages topics, and subscribers to topics.

@see Topic",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 7833,
            "start": 6654,
          },
          "metadata": undefined,
          "name": "TopicManager",
          "type": "interface",
        },
        Object {
          "content": Array [
            Object {
              "doc": "Get the topic manager proxy. The proxy might point to several
replicas.

@return The topic manager proxy.",
              "idempotent": undefined,
              "location": Object {
                "end": 8304,
                "start": 8272,
              },
              "metadata": undefined,
              "name": "getTopicManager",
              "parameters": Array [],
              "returnOptional": undefined,
              "returnType": "TopicManager*",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": "This inferface is advertised by the IceStorm service through the
Ice object with the identity \`IceStorm/Finder'. This allows clients
to retrieve the topic manager with just the endpoint information of
the IceStorm service.",
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 8306,
            "start": 8085,
          },
          "metadata": undefined,
          "name": "Finder",
          "type": "interface",
        },
      ],
      "doc": "A messaging service with support for federation. In contrast to
most other messaging or event services, IceStorm supports typed
events, meaning that broadcasting a message over a federation is as
easy as invoking a method on an interface.",
      "location": Object {
        "end": 8309,
        "start": 775,
      },
      "metadata": Array [
        "objc:prefix:ICESTORM",
      ],
      "name": "IceStorm",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Built-in slices IceStorm/Metrics.ice 1`] = `
Object {
  "globalMetadata": Array [
    "cpp:dll-export:ICESTORM_API",
    "cpp:doxygen:include:IceStorm/IceStorm.h",
    "cpp:header-ext:h",
    "cpp:include:IceStorm/Config.h",
    "ice-prefix",
    "objc:dll-export:ICESTORM_API",
    "objc:header-dir:objc",
    "python:pkgdir:IceStorm",
    "java:package:com.zeroc",
  ],
  "includes": Array [
    "Ice/Metrics",
  ],
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "Number of events published on the topic by publishers.",
              "location": Object {
                "end": 684,
                "start": 665,
              },
              "metadata": undefined,
              "name": "published",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "Number of events forwarded on the topic by IceStorm topic links.",
              "location": Object {
                "end": 812,
                "start": 793,
              },
              "metadata": undefined,
              "name": "forwarded",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on IceStorm topics.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 814,
            "start": 531,
          },
          "metadata": undefined,
          "name": "TopicMetrics",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of queued events.",
              "location": Object {
                "end": 1004,
                "start": 989,
              },
              "metadata": undefined,
              "name": "queued",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "int",
              "defaultValue": "0",
              "doc": "Number of outstanding events.",
              "location": Object {
                "end": 1098,
                "start": 1078,
              },
              "metadata": undefined,
              "name": "outstanding",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "long",
              "defaultValue": "0",
              "doc": "Number of forwarded events.",
              "location": Object {
                "end": 1189,
                "start": 1170,
              },
              "metadata": undefined,
              "name": "delivered",
              "optional": undefined,
              "type": "field",
            },
          ],
          "doc": "Provides information on IceStorm subscribers.",
          "extends": "Metrics",
          "local": undefined,
          "location": Object {
            "end": 1191,
            "start": 880,
          },
          "metadata": undefined,
          "name": "SubscriberMetrics",
          "type": "class",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 1194,
        "start": 417,
      },
      "metadata": Array [
        "objc:prefix:ICEMX",
        "js:module:ice",
      ],
      "name": "IceMX",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Slices absolute.ice 1`] = `
Object {
  "globalMetadata": undefined,
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "fields": Array [
            Object {
              "dataType": "::A::B",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 55,
                "start": 42,
              },
              "metadata": undefined,
              "name": "field",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 60,
            "start": 27,
          },
          "metadata": undefined,
          "name": "S",
          "type": "struct",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 63,
        "start": 14,
      },
      "metadata": undefined,
      "name": "A",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Slices dictionary.ice 1`] = `
Object {
  "globalMetadata": undefined,
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "fields": Array [],
          "local": undefined,
          "location": Object {
            "end": 46,
            "start": 29,
          },
          "metadata": undefined,
          "name": "Struct",
          "type": "struct",
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 92,
            "start": 52,
          },
          "metadata": undefined,
          "name": "StructMap",
          "type": "dictionary",
          "valueType": "Struct",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 140,
            "start": 97,
          },
          "metadata": undefined,
          "name": "StructMap2",
          "type": "dictionary",
          "valueType": "Struct",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 184,
            "start": 145,
          },
          "metadata": undefined,
          "name": "StructMap3",
          "type": "dictionary",
          "valueType": "Struct",
          "valueTypeMetadata": undefined,
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 274,
            "start": 236,
          },
          "metadata": undefined,
          "name": "StructMap4",
          "type": "dictionary",
          "valueType": "Struct",
          "valueTypeMetadata": undefined,
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 277,
        "start": 14,
      },
      "metadata": undefined,
      "name": "A",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Slices metadata.ice 1`] = `
Object {
  "globalMetadata": undefined,
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [],
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 49,
            "start": 27,
          },
          "metadata": undefined,
          "name": "AbstractBase",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": undefined,
          "extends": "AbstractBase",
          "local": undefined,
          "location": Object {
            "end": 84,
            "start": 52,
          },
          "metadata": undefined,
          "name": "A",
          "type": "class",
        },
        Object {
          "content": Array [],
          "doc": undefined,
          "extends": "AbstractBase",
          "local": undefined,
          "location": Object {
            "end": 119,
            "start": 87,
          },
          "metadata": undefined,
          "name": "B",
          "type": "class",
        },
        Object {
          "doc": undefined,
          "fields": Array [
            Object {
              "dataType": "AbstractBase",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 177,
                "start": 138,
              },
              "metadata": Array [
                "ts:type:A|B",
              ],
              "name": "field",
            },
          ],
          "local": undefined,
          "location": Object {
            "end": 182,
            "start": 123,
          },
          "metadata": undefined,
          "name": "S",
          "type": "struct",
        },
        Object {
          "content": Array [
            Object {
              "dataType": "AbstractBase",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 240,
                "start": 200,
              },
              "metadata": Array [
                "ts:type:A|B",
              ],
              "name": "field1",
              "optional": undefined,
              "type": "field",
            },
            Object {
              "dataType": "AbstractBase",
              "defaultValue": undefined,
              "doc": undefined,
              "location": Object {
                "end": 298,
                "start": 246,
              },
              "metadata": Array [
                "ts:type:A|B",
              ],
              "name": "field2",
              "optional": 1,
              "type": "field",
            },
          ],
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 303,
            "start": 186,
          },
          "metadata": undefined,
          "name": "C",
          "type": "class",
        },
        Object {
          "content": Array [
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 464,
                "start": 325,
              },
              "metadata": Array [
                "ts:type:A|B",
              ],
              "name": "operation",
              "parameters": Array [
                Object {
                  "dataType": "AbstractBase",
                  "location": Object {
                    "end": 404,
                    "start": 371,
                  },
                  "metadata": Array [
                    "ts:type:A|B",
                  ],
                  "name": "arg1",
                  "optional": undefined,
                  "out": undefined,
                },
                Object {
                  "dataType": "AbstractBase",
                  "location": Object {
                    "end": 457,
                    "start": 412,
                  },
                  "metadata": Array [
                    "ts:type:A|B",
                  ],
                  "name": "arg2",
                  "optional": 1,
                  "out": undefined,
                },
              ],
              "returnOptional": undefined,
              "returnType": "AbstractBase",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 469,
            "start": 307,
          },
          "metadata": undefined,
          "name": "I",
          "type": "interface",
        },
        Object {
          "dataType": "AbstractBase",
          "dataTypeMetadata": Array [
            "ts:type:A|B",
          ],
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 516,
            "start": 473,
          },
          "metadata": undefined,
          "name": "Seq",
          "type": "sequence",
        },
        Object {
          "doc": undefined,
          "keyType": "string",
          "keyTypeMetadata": undefined,
          "local": undefined,
          "location": Object {
            "end": 573,
            "start": 519,
          },
          "metadata": undefined,
          "name": "Dict",
          "type": "dictionary",
          "valueType": "AbstractBase",
          "valueTypeMetadata": Array [
            "ts:type:A|B",
          ],
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 576,
        "start": 14,
      },
      "metadata": undefined,
      "name": "M",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Slices optional-return-type.ice 1`] = `
Object {
  "globalMetadata": undefined,
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "content": Array [
            Object {
              "doc": undefined,
              "idempotent": undefined,
              "location": Object {
                "end": 66,
                "start": 45,
              },
              "metadata": undefined,
              "name": "op",
              "parameters": Array [],
              "returnOptional": 1,
              "returnType": "int",
              "throws": undefined,
              "type": "operation",
            },
          ],
          "doc": undefined,
          "extends": undefined,
          "local": undefined,
          "location": Object {
            "end": 71,
            "start": 27,
          },
          "metadata": undefined,
          "name": "I",
          "type": "interface",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 74,
        "start": 14,
      },
      "metadata": undefined,
      "name": "A",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;

exports[`Slices sequence.ice 1`] = `
Object {
  "globalMetadata": undefined,
  "includes": undefined,
  "modules": Array [
    Object {
      "content": Array [
        Object {
          "doc": undefined,
          "fields": Array [],
          "local": undefined,
          "location": Object {
            "end": 46,
            "start": 29,
          },
          "metadata": undefined,
          "name": "Struct",
          "type": "struct",
        },
        Object {
          "dataType": "Struct",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 82,
            "start": 52,
          },
          "metadata": undefined,
          "name": "StructSeq",
          "type": "sequence",
        },
        Object {
          "dataType": "Struct",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 120,
            "start": 87,
          },
          "metadata": undefined,
          "name": "StructSeq2",
          "type": "sequence",
        },
        Object {
          "dataType": "Struct",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 154,
            "start": 125,
          },
          "metadata": undefined,
          "name": "StructSeq3",
          "type": "sequence",
        },
        Object {
          "dataType": "Struct",
          "dataTypeMetadata": undefined,
          "doc": undefined,
          "local": undefined,
          "location": Object {
            "end": 232,
            "start": 204,
          },
          "metadata": undefined,
          "name": "StructSeq4",
          "type": "sequence",
        },
      ],
      "doc": undefined,
      "location": Object {
        "end": 235,
        "start": 14,
      },
      "metadata": undefined,
      "name": "A",
      "type": "module",
    },
  ],
  "pragmaOnce": true,
}
`;
